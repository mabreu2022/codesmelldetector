[{"arquivo":"c:\\fontes\\Analisador\\Utils\\uDashboardHTMLUtils.pas","smell":"M\u00E9todo muito longo","linha":5,"trecho":"procedure GerarGraficoHTMLEmbed;\r\n\r\nimplementation\r\n\r\nuses\r\n  System.SysUtils, System.Classes;\r\n\r\nprocedure GerarGraficoHTMLEmbed;\r\nvar\r\n  SL, SLJson: TStringList;\r\n  PastaGraficos, CaminhoHTML, LinhaJSON: string;\r\n  Ferramentas: TArray<string>;\r\n  i: Integer;\r\n  NomeJson, IDCanvas: string;\r\nbegin\r\n  SetLength(Ferramentas, 5);\r\n  Ferramentas[0] := 'queryanalizer';\r\n  Ferramentas[1] := 'solidchcker';\r\n  Ferramentas[2] := 'scanneracoplamento';\r\n  Ferramentas[3] := 'analisadorhints';\r\n  Ferramentas[4] := 'verificadorcodigomorto';\r\n\r\n  PastaGraficos := IncludeTrailingPathDelimiter(ExtractFilePath(ParamStr(0))) + 'graficos\\';\r\n  CaminhoHTML := PastaGraficos + 'grafico.html';\r\n\r\n  SL := TStringList.Create;\r\n  try\r\n    SL.Add('<!DOCTYPE html>');\r\n    SL.Add('<html><head>');\r\n    SL.Add('<meta charset=\"UTF-8\">');\r\n    SL.Add('<title>Dashboard</title>');\r\n    SL.Add('<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>');\r\n    SL.Add('<style>');\r\n    SL.Add('body { font-family: Arial; margin: 40px; background: #f4f4f4; }');\r\n    SL.Add('.grid { display: grid; grid-template-columns: 1fr 1fr; gap: 40px; }');\r\n    SL.Add('.grafico { background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); }');\r\n    SL.Add('canvas { width: 100%; height: 300px !important; }');\r\n    SL.Add('</style></head><body>');\r\n    SL.Add('<h1>?? Painel Integrado</h1>');\r\n    SL.Add('<div class=\"grid\">');\r\n\r\n    for i := 0 to High(Ferramentas) do\r\n    begin\r\n      NomeJson := PastaGraficos + Ferramentas[i] + '.json';\r\n      if FileExists(NomeJson) then\r\n      begin\r\n        SLJson := TStringList.Create;\r\n        try\r\n          SLJson.LoadFromFile(NomeJson, TEncoding.UTF8);\r\n          LinhaJSON := SLJson.Text.Replace(#13#10, '').Replace('\"', '\\\"');\r\n          IDCanvas := 'canvas' + IntToStr(i+1);\r\n\r\n          SL.Add('<div class=\"grafico\">');\r\n          SL.Add('<h3>' + Ferramentas[i] + '</h3>');\r\n          SL.Add('<canvas id=\"' + IDCanvas + '\"></canvas>');\r\n          SL.Add('<script>');\r\n          SL.Add('var data = JSON.parse(\"' + LinhaJSON + '\");');\r\n          SL.Add('new Chart(document.getElementById(\"' + IDCanvas + '\"), { type: \"line\", data: data, options: { responsive: true, plugins: { legend: { position: \"bottom\" } } } });');\r\n          SL.Add('</script>');\r\n          SL.Add('</div>');\r\n        finally\r\n          SLJson.Free;\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\analisdordehints\\UBuscaDocWikiGoogle.pas","smell":"M\u00E9todo muito longo","linha":5,"trecho":"function BuscarDocWikiGoogle(const Codigo, Mensagem: string): string;\r\n\r\nimplementation\r\n\r\nuses\r\n  System.SysUtils, System.Classes, System.JSON, System.NetEncoding,\r\n  IdHTTP, IdSSLOpenSSL;\r\n\r\nconst\r\n  API_KEY = 'AIzaSyAOKWVgjABtxStLv-iRTYxheI_PX5y_H8Y'; // \uD83D\uDD01 Substitua por sua chave de API\r\n  CSE_ID = '03399718856334828';      // \u2705 Seu ID de mecanismo de busca\r\n\r\nfunction BuscarDocWikiGoogle(const Codigo, Mensagem: string): string;\r\nvar\r\n  HTTP: TIdHTTP;\r\n  SSL: TIdSSLIOHandlerSocketOpenSSL;\r\n  URL, Resposta, Query: string;\r\n  JSONRoot, Item: TJSONObject;\r\n  Items: TJSONArray;\r\n  I: Integer;\r\n  Stream: TStringStream;\r\nbegin\r\n  Result := '';\r\n  HTTP := TIdHTTP.Create(nil);\r\n  SSL := TIdSSLIOHandlerSocketOpenSSL.Create(nil);\r\n  Stream := TStringStream.Create('', TEncoding.UTF8);\r\n  try\r\n    HTTP.IOHandler := SSL;\r\n    HTTP.HandleRedirects := True;\r\n    HTTP.Request.UserAgent := 'Mozilla/5.0 (Delphi Indy)';\r\n    HTTP.Request.AcceptEncoding := 'utf-8';\r\n\r\n    Query := TNetEncoding.URL.Encode('Delphi ' + Codigo + ' ' + Mensagem);\r\n    URL := Format(\r\n      'https://www.googleapis.com/customsearch/v1?key=%s&cx=%s&q=%s',\r\n      [API_KEY, CSE_ID, Query]\r\n    );\r\n\r\n    Resposta := HTTP.Get(URL);\r\n\r\n    JSONRoot := TJSONObject.ParseJSONValue(Resposta) as TJSONObject;\r\n    try\r\n      if Assigned(JSONRoot) and JSONRoot.TryGetValue<TJSONArray>('items', Items) then\r\n      begin\r\n        for I := 0 to Items.Count - 1 do\r\n        begin\r\n          Item := Items.Items[I] as TJSONObject;\r\n          if Item.TryGetValue<string>('link', Result) then\r\n          begin\r\n            if Result.StartsWith('https://docwiki.embarcadero.com/') then\r\n              Exit\r\n            else\r\n              Result := ''; // ignora se n\u00E3o for docwiki\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\analisdordehints\\UGeradorRelatorio.pas","smell":"M\u00E9todo muito longo","linha":14,"trecho":"procedure GerarRelatorioUnico(const Relatorios: TList<TRelatorioProjeto>; const DestinoRelatorio: string);\r\nprocedure ExportarCSV(const Relatorios: TList<TRelatorioProjeto>; const DestinoRelatorio: string);\r\n\r\nimplementation\r\n\r\n\r\nprocedure GerarRelatorioUnico(const Relatorios: TList<TRelatorioProjeto>; const DestinoRelatorio: string);\r\nvar\r\n  HTML: TStringList;\r\n  Relatorio: TRelatorioProjeto;\r\n  Linha, HTMLFile, Codigo, Msg: string;\r\n  Match: TMatch;\r\n  Sugestao: TSugestaoIA;\r\nbegin\r\n  if DestinoRelatorio <> '' then\r\n    HTMLFile := TPath.Combine(DestinoRelatorio, 'RelatorioCompleto.html')\r\n  else\r\n    HTMLFile := 'RelatorioCompleto.html';\r\n\r\n  HTML := TStringList.Create;\r\n  try\r\n    HTML.Add('<html><head><meta charset=\"utf-8\"><style>');\r\n    HTML.Add('body{font-family:Arial;} h2{color:#003366;} h3{color:#333;} ul{margin-left:20px;}');\r\n    HTML.Add('li{margin-bottom:8px;} .hint{color:green;} .warning{color:orange;}');\r\n    HTML.Add('</style></head><body>');\r\n    HTML.Add('<h1>Relat\u00F3rio Consolidado de Hints e Warnings</h1>');\r\n\r\n    for Relatorio in Relatorios do\r\n    begin\r\n      HTML.Add('<hr><h2>' + Relatorio.NomeProjeto + '</h2>');\r\n\r\n      if Relatorio.Hints.Count > 0 then\r\n      begin\r\n        HTML.Add('<h3>Hints</h3><ul>');\r\n        for Linha in Relatorio.Hints do\r\n        begin\r\n          HTML.Add('<li class=\"hint\">' + Linha);\r\n\r\n          Match := TRegEx.Match(Linha, '^.+\\(\\d+\\):\\s+\\[([HW]\\d{4})\\]\\s+(.*)$');\r\n          if Match.Success then\r\n          begin\r\n            Codigo := Match.Groups[1].Value;\r\n            Msg := Match.Groups[2].Value;\r\n\r\n            if USugestoesCache.ObterCache.TryGetValue(Codigo, Sugestao) then\r\n            begin\r\n              if Sugestao.Origem = osDocWiki then\r\n                HTML.Add('<br><i>\uD83D\uDCDA <a href=\"' +\r\n                         Sugestao.Solucao.Replace('Consulte a documenta\u00E7\u00E3o oficial: ', '') +\r\n                         '\">Ver documenta\u00E7\u00E3o oficial</a></i>')\r\n              else\r\n                HTML.Add('<br><i>\u2753 Nenhuma sugest\u00E3o encontrada</i>');\r\n            end;\r\n"},{"arquivo":"c:\\fontes\\api\\modules\\restrequest4delphi\\src\\RESTRequest4D.Request.Client.pas","smell":"M\u00E9todo muito longo","linha":23,"trecho":"    procedure ExecuteRequest;\r\n    procedure DoJoinComponents;\r\n    function PrepareUrlSegments(const AValue: string): string;\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function ClearBody: IRequest;\r\n    function AddParam(const AName, AValue: string; const AKind: TRESTRequestParameterKind = {$IF COMPILERVERSION < 33}TRESTRequestParameterKind.pkGETorPOST{$ELSE}TRESTRequestParameterKind.pkQUERY{$ENDIF}; const AOptions: TRESTRequestParameterOptions = []): IRequest;\r\n    function AddBody(const AContent: string; const AContentType: TRESTContentType = ctAPPLICATION_JSON): IRequest; overload;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function FallbackCharsetEncoding(const AFallbackCharsetEncoding: string): IRequest;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function SynchronizedEvents(const AValue: Boolean): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function AddHeader(const AName, AValue: string; const AOptions: TRESTRequestParameterOptions = []): IRequest;\r\n    function ClearParams: IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function AddCookies(const ACookies: TStrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: TRESTContentType = TRESTContentType.ctNone): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: TRESTContentType = TRESTContentType.ctNone): IRequest; overload;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n  protected\r\n    procedure DoAfterExecute(Sender: TCustomRESTRequest); virtual;\r\n    procedure DoBeforeExecute(Sender: TCustomRESTRequest); virtual;\r\n    procedure DoHTTPProtocolError(Sender: TCustomRESTRequest); virtual;\r\n  public\r\n    constructor Create; virtual;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\api\\modules\\restrequest4delphi\\src\\RESTRequest4D.Request.Client.pas","smell":"Uso de with","linha":206,"trecho":"with FRESTRequest.Params.AddItem do"},{"arquivo":"c:\\fontes\\api\\modules\\restrequest4delphi\\src\\RESTRequest4D.Request.Contract.pas","smell":"M\u00E9todo muito longo","linha":29,"trecho":"  TRR4DCallbackOnBeforeExecute = procedure(const Req: IRequest);\r\n  TRR4DCallbackOnAfterExecute = procedure(const Req: IRequest; const Res: IResponse);\r\n{$ELSE}\r\n  TRR4DCallbackOnBeforeExecute = reference to procedure(const Req: IRequest);\r\n  TRR4DCallbackOnAfterExecute = reference to procedure(const Req: IRequest; const Res: IResponse);\r\n{$ENDIF}\r\n\r\n  IRequest = interface\r\n    ['{2C882459-F4C3-4854-8F7A-F68E8F8DE98E}']\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n\t{$IF DEFINED(RR4D_SYNAPSE)}\r\n    function MimeType: string; overload;\r\n    function MimeType(const AMimeType: string): IRequest; overload;\r\n\t{$ENDIF}\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    {$IF DEFINED(RR4D_NETHTTP)}\r\n    function Asynchronous(const AValue: Boolean): IRequest;\r\n    function SynchronizedEvents(const AValue: Boolean): IRequest;\r\n    function ConnectionTimeout(const AConnectiomTimeout: Integer): IRequest;\r\n    {$ENDIF}\r\n    {$IF DEFINED(RR4D_INDY) or DEFINED(FPC) or DEFINED(RR4D_SYNAPSE) or DEFINED(RR4D_NETHTTP) or DEFINED(RR4D_ICS)}\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    {$ELSE}\r\n    function SynchronizedEvents(const AValue: Boolean): IRequest;\r\n    function AddHeader(const AName, AValue: string; const AOptions: TRESTRequestParameterOptions = []): IRequest;\r\n    function AddParam(const AName, AValue: string; const AKind: TRESTRequestParameterKind = {$IF COMPILERVERSION < 33}TRESTRequestParameterKind.pkGETorPOST{$ELSE}TRESTRequestParameterKind.pkQUERY{$ENDIF}; const AOptions: TRESTRequestParameterOptions = []): IRequest;\r\n    function AddBody(const AContent: string; const AContentType: TRESTContentType = ctAPPLICATION_JSON): IRequest; overload;\r\n    function FallbackCharsetEncoding(const AFallbackCharsetEncoding: string): IRequest;\r\n    {$ENDIF}\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function ClearParams: IRequest;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function AddCookies(const ACookies: TStrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    {$IF DEFINED(RR4D_INDY) or DEFINED(FPC) or DEFINED(RR4D_SYNAPSE) or DEFINED(RR4D_NETHTTP)}\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: string = ''): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: string = ''): IRequest; overload;\r\n    {$ELSEIF DEFINED(RR4D_ICS)}\r\n    function AddFile(const AFileName: string; UploadStrat:THttpUploadStrat): IRequest; overload;\r\n    {$ELSE}\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: TRESTContentType = TRESTContentType.ctNone): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: TRESTContentType = TRESTContentType.ctNone): IRequest; overload;\r\n    {$ENDIF}\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n    {$IF DEFINED(RR4D_INDY) or DEFINED(RR4D_ICS) or DEFINED(RR4D_SYNAPSE)}\r\n    function CertFile(const APath: string): IRequest;\r\n    function KeyFile(const APath: string): IRequest;\r\n    {$ENDIF}\r\n    {$IF DEFINED(RR4D_INDY)}\r\n    function HTTPOptions(const AHTTPOptions: TIdHTTPOptions): IRequest;\r\n    {$ENDIF}\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\api\\modules\\restrequest4delphi\\src\\RESTRequest4D.Request.FPHTTPClient.pas","smell":"M\u00E9todo muito longo","linha":43,"trecho":"    procedure ExecuteRequest(const AMethod: TMethodRequest);\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    function ClearParams: IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function AddCookies(const ACookies: Tstrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: string = ''): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: string = ''): IRequest; overload;\r\n    function MakeURL(const AIncludeParams: Boolean = True): string;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n  protected\r\n    procedure DoAfterExecute(const Sender: TObject; const AResponse: IResponse); virtual;\r\n    procedure DoBeforeExecute(const Sender: TFPHTTPClient); virtual;\r\n  public\r\n    constructor Create;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\api\\modules\\restrequest4delphi\\src\\RESTRequest4D.Request.ICS.pas","smell":"M\u00E9todo muito longo","linha":23,"trecho":"    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    procedure ExecuteRequest(const AMethod: TMethodRequest);\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function ClearParams: IRequest;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function AddCookies(const ACookies: TStrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddFile(const AFileName: string; UploadStrat: THttpUploadStrat): IRequest; overload;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n    function CertFile(const APath: string): IRequest;\r\n    function KeyFile(const APath: string): IRequest;\r\n    function MakeURL(const AIncludeParams: Boolean = True): string;\r\n  protected\r\n    procedure DoBeforeExecute; virtual;\r\n    procedure DoAfterExecute; virtual;\r\n  public\r\n    constructor Create;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\api\\modules\\restrequest4delphi\\src\\RESTRequest4D.Request.Indy.pas","smell":"M\u00E9todo muito longo","linha":36,"trecho":"    procedure ExecuteRequest(const AMethod: TMethodRequest);\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    function ClearParams: IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function AddCookies(const ACookies: TStrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: string = ''): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: string = ''): IRequest; overload;\r\n    function MakeURL(const AIncludeParams: Boolean = True): string;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n    function CertFile(const APath: string): IRequest;\r\n    function KeyFile(const APath: string): IRequest;\r\n    function HTTPOptions(const AHTTPOptions: TIdHTTPOptions): IRequest;\r\n    procedure OnStatusInfoEx(ASender: TObject; const AsslSocket: PSSL; const AWhere, Aret: TIdC_INT; const AType, AMsg: string);\r\n  protected\r\n    procedure DoBeforeExecute; virtual;\r\n    procedure DoAfterExecute; virtual;\r\n  public\r\n    constructor Create;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\api\\modules\\restrequest4delphi\\src\\RESTRequest4D.Request.NetHTTP.pas","smell":"M\u00E9todo muito longo","linha":27,"trecho":"    function ExecuteRequest(const AMethod: TMethodRequest): IHTTPResponse;\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function ConnectionTimeout(const AConnectiomTimeout: Integer): IRequest;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    function ClearParams: IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function AddCookies(const ACookies: TStrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: string = ''): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: string = ''): IRequest; overload;\r\n    function Asynchronous(const AValue: Boolean): IRequest;\r\n    function SynchronizedEvents(const AValue: Boolean): IRequest;\r\n    function MakeURL(const AIncludeParams: Boolean = True): string;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n    procedure NetHTTPClientValidateServerCertificate(const Sender: TObject; const ARequest: TURLRequest; const Certificate: TCertificate; var Accepted: Boolean);    \r\n  protected\r\n    procedure DoAfterExecute(const Sender: TObject; const AResponse: IHTTPResponse); virtual;\r\n    procedure DoBeforeExecute(const Sender: TNetHTTPClient); virtual;\r\n    procedure DoHTTPProtocolError(const Sender: TObject; const AError: string); virtual;\r\n  public\r\n    constructor Create;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\api\\modules\\restrequest4delphi\\src\\RESTRequest4D.Request.Synapse.pas","smell":"M\u00E9todo muito longo","linha":47,"trecho":"    procedure ExecuteRequest(const AMethod: TMethodRequest);\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function MimeType: string; overload;\r\n    function MimeType(const AMimeType: string): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    function ClearParams: IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function AddCookies(const ACookies: Tstrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: string = ''): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: string = ''): IRequest; overload;\r\n    function MakeURL(const AIncludeParams: Boolean = True): string;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n    function CertFile(const APath: string): IRequest;\r\n    function KeyFile(const APath: string): IRequest;\r\n  protected\r\n    procedure DoAfterExecute(const Sender: TObject; const AResponse: IResponse); virtual;\r\n    procedure DoBeforeExecute(const Sender: THTTPSend); virtual;\r\n  public\r\n    constructor Create;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\calculadora precos minimos\\view\\uView.CadastroDePedidos.pas","smell":"Uso de with","linha":208,"trecho":"with mtbItensPedido.FieldDefs do"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\DAO\\Dao.Conexao.pas","smell":"Uso de with","linha":73,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\DAO\\DAO.ConexaoLicencas.pas","smell":"Uso de with","linha":73,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Encriptografar\\View\\View.Principal.pas","smell":"M\u00E9todo muito longo","linha":75,"trecho":"procedure TFrmPrincipal.BtnEncriptarClick(Sender: TObject);\r\nvar\r\n  IniFile: TIniFile;\r\n  EncryptedServer   : string;\r\n  EncryptedPassword : string;\r\n  EncryptedDataBase : string;\r\n  EncryptedUserName : string;\r\n  EncryptedServerLicencas   : string;\r\n  EncryptedPasswordLicencas : string;\r\n  EncryptedDataBaseLicencas : string;\r\n  EncryptedUserNameLicencas : string;\r\n  Funcoes: TCriptografia;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + 'Server.ini');\r\n  Funcoes:= TCriptografia.Create;\r\n  try\r\n     EncryptedServer   := Funcoes.EncryptString(EdtDadosBancoServer.Text, 123);\r\n     EncryptedPassword := Funcoes.EncryptString(EdtDadosBancoPassword.Text, 123);\r\n     EncryptedDataBase := Funcoes.EncryptString(EdtDadosBancoDataBase.Text,123);\r\n     EncryptedUserName := Funcoes.EncryptString(EdtDadosBancoUserName.Text,123);\r\n\r\n     EncryptedServerLicencas   := Funcoes.EncryptString(EdtDadosLicenasServer.Text,123);\r\n     EncryptedPasswordLicencas := Funcoes.EncryptString(EdtDadosLicencasPassword.Text,123);\r\n     EncryptedDataBaseLicencas := Funcoes.EncryptString(EdtDadosLicenasDataBase.Text,123);\r\n     EncryptedUserNameLicencas := Funcoes.EncryptString(EdtDadosLicencasUserName.Text,123);\r\n\r\n     //Escreve no arquivo ini\r\n     IniFile.WriteString('Banco de Dados', 'Server', EncryptedServer);\r\n     IniFile.WriteString('Banco de Dados', 'Password', EncryptedPassword);\r\n     IniFile.WriteString('Banco de Dados', 'Database', EncryptedDataBase);\r\n     IniFile.WriteString('Banco de Dados', 'User_Name', EncryptedUserName);\r\n\r\n     IniFile.WriteString('BancoLicencas', 'Server',    EncryptedServerLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'Password',  EncryptedPasswordLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'Database',  EncryptedDataBaseLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'User_Name', EncryptedUserNameLicencas);\r\n\r\n     //Preenche os Edits da Aba Encriptada - Banco\r\n     EdtEncryptadosBancoServer.Text   := EncryptedServer;\r\n     EdtEncryptadosBancoPassword.Text := EncryptedPassword;\r\n     EdtEncryptadosBancoDataBase.Text := EncryptedDataBase;\r\n     EdtEncryptadosBancoUserName.Text := EncryptedUserName;\r\n\r\n     //Preenche os Edits da Aba Encriptada - Banco Licen\u00E7as\r\n     EdtEncryptadosBancoLicencasServer.Text   := EncryptedServerLicencas;\r\n     EdtEncryptadosBancoLicencasPassword.Text := EncryptedPasswordLicencas;\r\n     EdtEncryptadosBancoLicencasDataBase.Text := EncryptedDataBaseLicencas;\r\n     EdtEncryptadosBancoLicencasUserName.Text := EncryptedUserNameLicencas;\r\n\r\n     inifile.UpdateFile;\r\n\r\n  finally\r\n    IniFile.Free;\r\n    Funcoes.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Encriptografar\\View\\View.Principal.pas","smell":"M\u00E9todo muito longo","linha":133,"trecho":"procedure TFrmPrincipal.CarregarEdits;\r\nvar\r\n  IniFile: TIniFile;\r\n  EncryptedServer    : string;\r\n  DecryptedServer    : string;\r\n  EncryptedPassword  : string;\r\n  DecryptedPassword  : string;\r\n  EncryptedDataBase  : string;\r\n  DescryptedDataBase : string;\r\n  EncryptedUserName  : string;\r\n  DescryptedUserName : string;\r\n\r\n  EncryptedServerLicencas    : string;\r\n  DecryptedServerLicencas    : string;\r\n  EncryptedPasswordLicencas  : string;\r\n  DecryptedPasswordLicencas  : string;\r\n  EncryptedDataBaseLicencas  : string;\r\n  DescryptedDataBaseLicencas : string;\r\n  EncryptedUserNameLicencas  : string;\r\n  DescryptedUserNameLicencas : string;\r\n\r\n  Funcao: TCriptografia;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + '\\Server.ini');\r\n  Funcao  := TCriptografia.Create;\r\n  try\r\n    EncryptedServer   := IniFile.ReadString('Banco de Dados', 'Server', '');\r\n    EncryptedPassword := IniFile.ReadString('Banco de Dados', 'Password', '');\r\n    EncryptedDataBase := IniFile.ReadString('Banco de Dados', 'Database', '');\r\n    EncryptedUserName := IniFile.ReadString('Banco de Dados', 'User_Name', '');\r\n\r\n    DecryptedServer    := Funcao.DecryptString(EncryptedServer, 123);\r\n    DecryptedPassword  := Funcao.DecryptString(EncryptedPassword, 123);\r\n    DescryptedDataBase := Funcao.DecryptString(EncryptedDataBase, 123);\r\n    DescryptedUserName := Funcao.DecryptString(EncryptedUserName, 123);\r\n\r\n    EncryptedServerLicencas   := IniFile.ReadString('BancoLicencas', 'Server', '');\r\n    EncryptedPasswordLicencas := IniFile.ReadString('BancoLicencas', 'Password', '');\r\n    EncryptedDataBaseLicencas := IniFile.ReadString('BancoLicencas', 'Database', '');\r\n    EncryptedUserNameLicencas := IniFile.ReadString('BancoLicencas', 'User_Name', '');\r\n\r\n    DecryptedServerLicencas    := Funcao.DecryptString(EncryptedServer, 123);\r\n    DecryptedPasswordLicencas  := Funcao.DecryptString(EncryptedPassword, 123);\r\n    DescryptedDataBaseLicencas := Funcao.DecryptString(EncryptedDataBase, 123);\r\n    DescryptedUserNameLicencas := Funcao.DecryptString(EncryptedUserName, 123);\r\n\r\n    // Carregar Edits Aba Banco - GroupBox Banco\r\n    EdtDadosBancoServer.Text   := DecryptedServer;\r\n    EdtDadosBancoPassword.Text := DecryptedPassword;\r\n    EdtDadosBancoDataBase.Text := DescryptedDataBase;\r\n    EdtDadosBancoUserName.Text := DescryptedUserName;\r\n\r\n    //Carregar Edits Aba Dados Encryptados - GroupBox Licen\u00E7as\r\n    EdtEncryptadosBancoLicencasServer.Text   := DecryptedServerLicencas;\r\n    EdtEncryptadosBancoLicencasPassword.Text := DecryptedPasswordLicencas;\r\n    EdtEncryptadosBancoLicencasDataBase.Text := DescryptedDataBaseLicencas;\r\n    EdtEncryptadosBancoLicencasUserName.Text := DescryptedUserNameLicencas;\r\n\r\n  finally\r\n    IniFile.Free;\r\n    Funcao.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Funcoes\\Funcoes.CNPJCPF.pas","smell":"M\u00E9todo muito longo","linha":22,"trecho":"function TCNPJCPF.ValidarCNPJ(const CNPJ: string): Boolean;\r\nvar\r\n  Digito, Soma, i, j: Integer;\r\n  CNPJCalc: string;\r\n  Multiplicador: array[1..14] of Integer;\r\nbegin\r\n  Result := False;\r\n\r\n  // Remove caracteres n\u00E3o num\u00E9ricos do CNPJ\r\n  CNPJCalc := '';\r\n  for i := 1 to Length(CNPJ) do\r\n    if CharInSet(CNPJ[i], ['0'..'9']) then\r\n      CNPJCalc := CNPJCalc + CNPJ[i];\r\n\r\n  // Verifica se o CNPJ possui 14 d\u00EDgitos\r\n  if Length(CNPJCalc) <> 14 then\r\n    Exit;\r\n\r\n  // Verifica se todos os d\u00EDgitos s\u00E3o iguais\r\n  if (CNPJCalc = '00000000000000') or (CNPJCalc = '11111111111111') or\r\n    (CNPJCalc = '22222222222222') or (CNPJCalc = '33333333333333') or\r\n    (CNPJCalc = '44444444444444') or (CNPJCalc = '55555555555555') or\r\n    (CNPJCalc = '66666666666666') or (CNPJCalc = '77777777777777') or\r\n    (CNPJCalc = '88888888888888') or (CNPJCalc = '99999999999999') then\r\n    Exit;\r\n\r\n  // Calcula o primeiro d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 5;\r\n  Multiplicador[2] := 4;\r\n  Multiplicador[3] := 3;\r\n  Multiplicador[4] := 2;\r\n  Multiplicador[5] := 9;\r\n  Multiplicador[6] := 8;\r\n  Multiplicador[7] := 7;\r\n  Multiplicador[8] := 6;\r\n  Multiplicador[9] := 5;\r\n  Multiplicador[10] := 4;\r\n  Multiplicador[11] := 3;\r\n  Multiplicador[12] := 2;\r\n  for i := 1 to 12 do\r\n    Soma := Soma + (StrToInt(CNPJCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CNPJCalc[13]) then\r\n    Exit;\r\n\r\n  // Calcula o segundo d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 6;\r\n  Multiplicador[2] := 5;\r\n  Multiplicador[3] := 4;\r\n  Multiplicador[4] := 3;\r\n  Multiplicador[5] := 2;\r\n  Multiplicador[6] := 9;\r\n  Multiplicador[7] := 8;\r\n  Multiplicador[8] := 7;\r\n  Multiplicador[9] := 6;\r\n  Multiplicador[10] := 5;\r\n  Multiplicador[11] := 4;\r\n  Multiplicador[12] := 3;\r\n  Multiplicador[13] := 2;\r\n  for i := 1 to 13 do\r\n    Soma := Soma + (StrToInt(CNPJCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CNPJCalc[14]) then\r\n    Exit;\r\n\r\n  Result := True;\r\n\r\nend;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Funcoes\\Funcoes.CNPJCPF.pas","smell":"M\u00E9todo muito longo","linha":97,"trecho":"function TCNPJCPF.ValidarCPF(const CPF: string): Boolean;\r\nvar\r\n  Digito, Soma, i, j: Integer;\r\n  CPFCalc: string;\r\n  Multiplicador: array[1..11] of Integer;\r\nbegin\r\n  Result := False;\r\n\r\n  // Remove caracteres n\u00E3o num\u00E9ricos do CPF\r\n  CPFCalc := '';\r\n  for i := 1 to Length(CPF) do\r\n    if CharInSet(CPF[i], ['0'..'9']) then\r\n      CPFCalc := CPFCalc + CPF[i];\r\n\r\n  // Verifica se o CPF possui 11 d\u00EDgitos\r\n  if Length(CPFCalc) <> 11 then\r\n    Exit;\r\n\r\n  // Verifica se todos os d\u00EDgitos s\u00E3o iguais\r\n  if (CPFCalc = '00000000000') or (CPFCalc = '11111111111') or\r\n    (CPFCalc = '22222222222') or (CPFCalc = '33333333333') or\r\n    (CPFCalc = '44444444444') or (CPFCalc = '55555555555') or\r\n    (CPFCalc = '66666666666') or (CPFCalc = '77777777777') or\r\n    (CPFCalc = '88888888888') or (CPFCalc = '99999999999') then\r\n    Exit;\r\n\r\n  // Calcula o primeiro d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 10;\r\n  Multiplicador[2] := 9;\r\n  Multiplicador[3] := 8;\r\n  Multiplicador[4] := 7;\r\n  Multiplicador[5] := 6;\r\n  Multiplicador[6] := 5;\r\n  Multiplicador[7] := 4;\r\n  Multiplicador[8] := 3;\r\n  Multiplicador[9] := 2;\r\n  for i := 1 to 9 do\r\n    Soma := Soma + (StrToInt(CPFCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CPFCalc[10]) then\r\n    Exit;\r\n\r\n  // Calcula o segundo d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 11;\r\n  Multiplicador[2] := 10;\r\n  Multiplicador[3] := 9;\r\n  Multiplicador[4] := 8;\r\n  Multiplicador[5] := 7;\r\n  Multiplicador[6] := 6;\r\n  Multiplicador[7] := 5;\r\n  Multiplicador[8] := 4;\r\n  Multiplicador[9] := 3;\r\n  Multiplicador[10] := 2;\r\n  for i := 1 to 10 do\r\n    Soma := Soma + (StrToInt(CPFCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CPFCalc[11]) then\r\n    Exit;\r\n\r\n  Result := True;\r\n\r\nend;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Funcoes\\Funcoes.EnviarEmail.pas","smell":"M\u00E9todo muito longo","linha":68,"trecho":"      procedure Setativo(const Value: string);\r\n      procedure Setbairro(const Value: string);\r\n      procedure SetCEP(const Value: string);\r\n      procedure Setcidade(const Value: string);\r\n      procedure Setcnpj(const Value: string);\r\n      procedure Setcomplemento(const Value: string);\r\n      procedure Setcontato(const Value: string);\r\n      procedure SetContraSenha(const Value: String);\r\n      procedure SetData_exp(const Value: TDateTime);\r\n      procedure Setdataregistro(const Value: TDatetime);\r\n      procedure Setemail(const Value: string);\r\n      procedure Setendereco(const Value: string);\r\n      procedure Setid_chave(const Value: string);\r\n      procedure Setie(const Value: string);\r\n      procedure Setim(const Value: string);\r\n      procedure SetLinguagem(const Value: string);\r\n      procedure Setnumero(const Value: integer);\r\n      procedure Setrazao(const Value: string);\r\n      procedure Setresponsavel(const Value: string);\r\n      procedure Setserial(const Value: string);\r\n      procedure Setserialhd(const Value: string);\r\n      procedure Settelcontato(const Value: string);\r\n      procedure Settelefone(const Value: string);\r\n      procedure Setuf(const Value: string);\r\n\r\n    public\r\n       property razao       : string read Frazao write Setrazao;\r\n       property cnpj        : string read Fcnpj write Setcnpj;\r\n       property ie          : string read Fie write Setie;\r\n       property im          : string read Fim write Setim;\r\n       property endereco    : string read Fendereco write Setendereco;\r\n       property numero      : integer read Fnumero write Setnumero;\r\n       property complemento : string read Fcomplemento write Setcomplemento;\r\n       property bairro      : string read Fbairro write Setbairro;\r\n       property cidade      : string read Fcidade write Setcidade;\r\n       property uf          : string read Fuf write Setuf;\r\n       property CEP         : string read FCEP write SetCEP;\r\n       property ativo       : string read Fativo write Setativo;\r\n       property responsavel : string read Fresponsavel write Setresponsavel;\r\n       property contato     : string read Fcontato write Setcontato;\r\n       property telcontato  : string read Ftelcontato write Settelcontato;\r\n       property telefone    : string read Ftelefone write Settelefone;\r\n       property email       : string read Femail write Setemail;\r\n       property dataregistro: TDatetime read Fdataregistro write Setdataregistro;\r\n       property Linguagem   : string read FLinguagem write SetLinguagem;\r\n       property serial      : string read Fserial write Setserial;\r\n       property serialhd    : string read Fserialhd write Setserialhd;\r\n       property ContraSenha : String read FContraSenha write SetContraSenha;\r\n       property Data_exp    : TDateTime read FData_exp write SetData_exp;\r\n       property id_chave    : string read Fid_chave write Setid_chave;\r\n       function enviarPedido(aEmail: String): Boolean;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Gerar Contra Senha\\UnitGerarContrasenha.pas","smell":"Uso de Application.ProcessMessages em loop","linha":95,"trecho":"Application.ProcessMessages;"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Gerar Contra Senha\\UnitGerarContrasenha.pas","smell":"Uso de with","linha":159,"trecho":"with FDQuery1 do;"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Gerar Contra Senha\\UnitGerarContrasenha.pas","smell":"M\u00E9todo muito longo","linha":134,"trecho":"procedure TFRMGerarContraSenha.Button1Click(Sender: TObject);\r\nvar\r\n  strsql: string;\r\n  strsql2: string;\r\n  contrasenha: string;\r\n  senhafinal: string;\r\n  i: Integer;\r\nconst\r\n  str = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%?';\r\n  max = 15;\r\nbegin\r\n  if Edit1.Text = '' then\r\n  begin\r\n    ShowMessage('Entre com a chave.');\r\n    Edit1.SetFocus;\r\n  end\r\n  else\r\n  begin\r\n    if EdtData.Text = '' then\r\n    begin\r\n      ShowMessage('Entre com a data de vencimento.');\r\n      EdtData.SetFocus;\r\n    end\r\n    else\r\n    begin\r\n      with FDQuery1 do;\r\n      begin\r\n        strsql := 'select * from registro where chave=' + #39 +\r\n          Edit1.Text + #39;\r\n        strsql := strsql + ' and contrasenha=0';\r\n\r\n        strsql2 :=\r\n          'select razao from chaves,registro where chaves.id_chave= registro.id_chave and registro.chave='\r\n          + #39 + Edit1.Text + #39;\r\n        FDQuery2.SQL.Clear;\r\n        FDQuery2.SQL.Add(strsql2);\r\n        FDQuery2.Open();\r\n        Label6.Caption := FDQuery2.FieldByName('razao').AsString;\r\n\r\n        // ShowMessage(strsql);\r\n        FDQuery1.SQL.Clear;\r\n        FDQuery1.SQL.Add(strsql);\r\n        FDQuery1.Open();\r\n        if (FDQuery1.RecordCount) = 1 then\r\n        begin\r\n          ShowMessage('Chave encontrada');\r\n          // rotina de gerar a contra-senha\r\n          contrasenha := FDQuery1.FieldByName('chave').AsString;\r\n          // ShowMessage(contrasenha);\r\n          // Gerar contra-senha\r\n          Randomize;\r\n          Label3.Caption := '';\r\n          for i := 1 to max do\r\n          begin\r\n            try\r\n              FDConnection1.StartTransaction;\r\n\r\n              FDQuery1.Edit;\r\n              Label3.Caption := Label3.Caption + str[Random(Length(str)) + 1];\r\n              FDQuery1.FieldByName('contrasenha').AsString := contrasenha +\r\n              Label3.Caption;\r\n              senhafinal := contrasenha + Label3.Caption;\r\n\r\n              Memo1.Lines.Clear;\r\n              Memo1.Lines.Add(senhafinal);\r\n\r\n              // Encriptar\r\n              // Memo1.Lines.Add(Crypt('D',senhafinal));\r\n              // fim de encriptar\r\n\r\n              FDQuery1.FieldByName('ativado').AsString := 'S';\r\n              FDQuery1.FieldByName('data_exp').AsDateTime :=\r\n              StrToDateTime(EdtData.Text);\r\n              FDQuery1.Post;\r\n              FDCOnnection1.Commit;\r\n\r\n             Except\r\n             on E: Exception do\r\n             begin\r\n               ShowMessage('Erro ao gravar Contra Senha' + e.Message);\r\n               FDConnection1.Rollback;\r\n               Exit;\r\n             end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Model\\Model.Agendamento.pas","smell":"M\u00E9todo muito longo","linha":81,"trecho":"      procedure SetAllDayEvent(const Value: Boolean);\r\n      procedure SetEmail(const Value: string);\r\n      procedure SetEndTime(const Value: TDateTime);\r\n      procedure SetLabel01(const Value: string);\r\n      procedure SetLocais(const Value: string);\r\n      procedure SetLocation(const Value: string);\r\n      procedure SetMenssagem(const Value: string);\r\n      procedure SetNF(const Value: Integer);\r\n      procedure SetOption(const Value: Integer);\r\n      procedure SetParentID(const Value: Integer);\r\n      procedure SetPlaca(const Value: string);\r\n      procedure SetRecurrenceIndex(const Value: Integer);\r\n      procedure SetRecurrenceInfo(const Value: TBlob);\r\n      procedure SetReminderDate(const Value: TDateTime);\r\n      procedure SetReminderMinutesBeforeStart(const Value: Integer);\r\n      procedure SetRemindResourceData(const Value: TDateTime);\r\n      procedure SetResourceID(const Value: Integer);\r\n      procedure SetStart(const Value: TDateTime);\r\n      procedure SetStarTime(const Value: TDateTime);\r\n      procedure SetState(const Value: Integer);\r\n      procedure Setsubject(const Value: string);\r\n      procedure SetTaskCompleteField(const Value: Integer);\r\n      procedure SetTaskIndexField(const Value: Integer);\r\n      procedure SetTaskLinksField(const Value: TBlob);\r\n      procedure SetTaskStatusField(const Value: Integer);\r\n      procedure SetTelefone(const Value: string);\r\n      procedure SetObs(const Value: string);\r\n      procedure SetHora(const Value: TTime);\r\n\r\n\r\n    public\r\n      //Campos originais da tabela\r\n      property subject  : string read Fsubject write Setsubject;\r\n      property Menssagem: string read FMenssagem write SetMenssagem;\r\n      property Option: Integer read FOption write SetOption;\r\n      property ParentID: Integer read FParentID write SetParentID;\r\n      property RecurrenceIndex: Integer read FRecurrenceIndex write SetRecurrenceIndex;\r\n      property RecurrenceInfo: TBlob read FRecurrenceInfo write SetRecurrenceInfo;\r\n      property ReminderDate: TDateTime read FReminderDate write SetReminderDate;\r\n      property ReminderMinutesBeforeStart: Integer read FReminderMinutesBeforeStart write SetReminderMinutesBeforeStart;\r\n      property RemindResourceData: TDateTime read FRemindResourceData write SetRemindResourceData;\r\n      property ResourceID: Integer read FResourceID write SetResourceID;\r\n      property Start: TDateTime read FStart write SetStart;\r\n      property State: Integer read FState write SetState;\r\n      property TaskCompleteField: Integer read FTaskCompleteField write SetTaskCompleteField;\r\n      property TaskIndexField: Integer read FTaskIndexField write SetTaskIndexField;\r\n      property TaskLinksField: TBlob read FTaskLinksField write SetTaskLinksField;\r\n      property TaskStatusField: Integer read FTaskStatusField write SetTaskStatusField;\r\n      property Placa: string read FPlaca write SetPlaca;\r\n\r\n      property Location : string read FLocation write SetLocation;\r\n      //da tela de agendamento\r\n      property Label01  : string read FLabel01 write SetLabel01;\r\n      property StarTime : TDateTime read FStarTime write SetStarTime;\r\n      property EndTime  : TDateTime read FEndTime write SetEndTime;\r\n      property AllDayEvent : Boolean read FAllDayEvent write SetAllDayEvent;\r\n\r\n      //Campo criados\r\n      property Locais: string read FLocais write SetLocais;\r\n      property NF: Integer read FNF write SetNF;\r\n      property Telefone: string read FTelefone write SetTelefone;\r\n      property Email: string read FEmail write SetEmail;\r\n      property Obs: string read FObs write SetObs;\r\n      property Hora: TTime read FHora write SetHora;\r\n\r\n      class function enviarEmail2(aSubject: string;aPlaca: String;aNF: Integer;aLocais: string;aTelefone: string;aEmail:string; aData: TDateTime; aHora: string; aObs:String): Boolean;\r\n      class function EnviarEmail(const AAssunto, ADestino, AAnexo: String; ACorpo: String): Boolean;\r\n\r\n      procedure EditarEmailEnviado;\r\n\r\n      constructor create;\r\n      destructor destroy;override;\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Model\\Model.Agendamento.pas","smell":"M\u00E9todo muito longo","linha":171,"trecho":"class function TModelAgendamento.EnviarEmail(const AAssunto, ADestino, AAnexo: String; ACorpo: String): Boolean;\r\nvar\r\n  IniFile              : TIniFile;\r\n  sFrom                : String;\r\n  sBccList             : String;\r\n  sHost                : String;\r\n  iPort                : Integer;\r\n  sUserName            : String;\r\n  sPassword            : String;\r\n\r\n  idMsg                : TIdMessage;\r\n  IdText               : TIdText;\r\n  idSMTP               : TIdSMTP;\r\n  IdSSLIOHandlerSocket : TIdSSLIOHandlerSocketOpenSSL;\r\nbegin\r\n  try\r\n    try\r\n      //Cria\u00E7\u00E3o e leitura do arquivo INI com as configura\u00E7\u00F5es\r\n      IniFile                          := TIniFile.Create(ExtractFilePath(ParamStr(0)) + 'Config.ini');\r\n      sFrom                            := IniFile.ReadString('Email' , 'From'     , sFrom);\r\n      sBccList                         := IniFile.ReadString('Email' , 'BccList'  , sBccList);\r\n      sHost                            := IniFile.ReadString('Email' , 'Host'     , sHost);\r\n      iPort                            := IniFile.ReadInteger('Email', 'Port'     , iPort);\r\n      sUserName                        := IniFile.ReadString('Email' , 'UserName' , sUserName);\r\n      sPassword                        := IniFile.ReadString('Email' , 'Password' , sPassword);\r\n\r\n      //Configura os par\u00E2metros necess\u00E1rios para SSL\r\n      IdSSLIOHandlerSocket                   := TIdSSLIOHandlerSocketOpenSSL.Create(nil);\r\n      IdSSLIOHandlerSocket.SSLOptions.Method := sslvSSLv23;\r\n      IdSSLIOHandlerSocket.SSLOptions.Mode   := sslmClient;\r\n\r\n      //Vari\u00E1vel referente a mensagem\r\n      idMsg                            := TIdMessage.Create;\r\n      idMsg.CharSet                    := 'utf-8';\r\n      idMsg.Encoding                   := meMIME;\r\n      idMsg.From.Name                  := 'Agendamento do Centro de Distribui\u00E7\u00E3o Nome do Centro';\r\n      idMsg.From.Address               := sFrom;\r\n      idMsg.Priority                   := mpNormal;\r\n      idMsg.Subject                    := AAssunto;\r\n\r\n      //Add Destinat\u00E1rio(s)\r\n      idMsg.Recipients.Add;\r\n      idMsg.Recipients.EMailAddresses := ADestino;\r\n      idMsg.CCList.EMailAddresses     := 'Comercial@conectsolutionsti.COM.BR';\r\n      idMsg.BccList.EMailAddresses    := sBccList;\r\n      //idMsg.BccList.EMailAddresses    := 'conectsolutions@hotmail.COM'; //C\u00F3pia Oculta\r\n\r\n      //Vari\u00E1vel do texto\r\n      idText := TIdText.Create(idMsg.MessageParts);\r\n      idText.Body.Add(ACorpo);\r\n      idText.ContentType := 'text/html; text/plain; charset=iso-8859-1';\r\n\r\n      //Prepara o Servidor\r\n      IdSMTP                           := TIdSMTP.Create;\r\n      IdSMTP.IOHandler                 := IdSSLIOHandlerSocket;\r\n      IdSMTP.UseTLS                    := utUseExplicitTLS;//utUseImplicitTLS;\r\n      IdSMTP.AuthType                  := satDefault;\r\n      IdSMTP.Host                      := sHost;\r\n      IdSMTP.Port                      := iPort;\r\n      IdSMTP.Username                  := sUserName;\r\n      IdSMTP.Password                  := sPassword;\r\n\r\n      //Conecta e Autentica\r\n      IdSMTP.Authenticate;\r\n      IdSMTP.Connect;\r\n\r\n\r\n      if AAnexo <> EmptyStr then\r\n        if FileExists(AAnexo) then\r\n          TIdAttachmentFile.Create(idMsg.MessageParts, AAnexo);\r\n\r\n      //Se a conex\u00E3o foi bem sucedida, envia a mensagem\r\n      if IdSMTP.Connected then\r\n      begin\r\n        try\r\n          IdSMTP.Send(idMsg);\r\n        except on E:Exception do\r\n          begin\r\n            ShowMessage('Erro ao tentar enviar: ' + E.Message);\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Model\\Model.Agendamento.pas","smell":"Muitos par\u00E2metros","linha":275,"trecho":"class function TModelAgendamento.enviarEmail2(aSubject: string;aPlaca: String;aNF: Integer;aLocais: string;aTelefone: string;aEmail:string; aData: TDateTime; aHora: string; aObs:String): Boolean;"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":70,"trecho":"      procedure Setativo(const Value: string);\r\n      procedure Setbairro(const Value: string);\r\n      procedure Setcidade(const Value: string);\r\n      procedure Setcnpj(const Value: string);\r\n      procedure Setcomplemento(const Value: string);\r\n      procedure Setemail(const Value: string);\r\n      procedure Setendereco(const Value: string);\r\n      procedure Setnumero(const Value: integer);\r\n      procedure Setrazao(const Value: string);\r\n      procedure Setresponsavel(const Value: string);\r\n      procedure Settelefone(const Value: string);\r\n      procedure Setuf(const Value: string);\r\n      procedure Setdataregistro(const Value: TDatetime);\r\n      procedure SetCEP(const Value: string);\r\n      procedure Setie(const Value: string);\r\n      procedure Setim(const Value: string);\r\n      procedure SetLinguagem(const Value: string);\r\n      procedure Setcontato(const Value: string);\r\n      procedure Settelcontato(const Value: string);\r\n      procedure Setserial(const Value: string);\r\n      function  GetWMIstring(const WMIClass, WMIProperty:string): string;\r\n      procedure SetOnLabel6TextChanged(const Value: TNotifyEvent);\r\n      procedure Setserialhd(const Value: string);\r\n      procedure SetContraSenha(const Value: String);\r\n      procedure SetData_exp(const Value: TDateTime);\r\n    procedure Setid_chave(const Value: string);\r\n    public\r\n      property razao       : string    read Frazao write Setrazao;\r\n      property cnpj        : string    read Fcnpj write Setcnpj;\r\n      property ie          : string    read Fie write Setie;\r\n      property im          : string    read Fim write Setim;\r\n      property endereco    : string    read Fendereco write Setendereco;\r\n      property numero      : integer   read Fnumero write Setnumero;\r\n      property complemento : string    read Fcomplemento write Setcomplemento;\r\n      property bairro      : string    read Fbairro write Setbairro;\r\n      property cidade      : string    read Fcidade write Setcidade;\r\n      property uf          : string    read Fuf write Setuf;\r\n      property CEP         : string    read FCEP write SetCEP;\r\n      property ativo       : string    read Fativo write Setativo;\r\n      property responsavel : string    read Fresponsavel write Setresponsavel;\r\n      property contato     : string    read Fcontato write Setcontato;\r\n      property telcontato  : string    read Ftelcontato write Settelcontato;\r\n      property telefone    : string    read Ftelefone write Settelefone;\r\n      property email       : string    read Femail write Setemail;\r\n      property dataregistro: TDatetime read Fdataregistro write Setdataregistro;\r\n      property Linguagem   : string    read FLinguagem write SetLinguagem;\r\n      property serial      : string    read Fserial write Setserial;  //transferir do projeto antigo para esse\r\n      property serialhd    : string    read Fserialhd write Setserialhd;\r\n      property ContraSenha : String    read FContraSenha write SetContraSenha;\r\n      property Data_exp    : TDateTime read FData_exp write SetData_exp;\r\n      property id_chave    : string    read Fid_chave write Setid_chave;\r\n\r\n      //Verificar se ser\u00E1 necess\u00E1rio criar mais propertys para a tabela Registro\r\n      property OnLabel6TextChanged: TNotifyEvent read FOnLabel6TextChanged write SetOnLabel6TextChanged;\r\n      procedure enviarEmail; //J\u00E1 chama  aqui a grava\u00E7\u00E3o no banco de  licen\u00E7as\r\n      function GerarSerial: string;\r\n      class function validarDados(aRegistro: TModelRegistro ; aLingua: string) : boolean;\r\n      class function GravarNoBancoLicencas(aRegistro : TModelRegistro): Boolean;  //Tabela Chaves\r\n      class function ValidarLicenca(adata: TDateTime; acnpj: string): Boolean;\r\n      class function GravarRegistro(aRegistro: TModelRegistro; achave: String): Boolean;\r\n      class function GravarContraSenha(aRegistro: TModelRegistro): Boolean;\r\n\r\n      constructor create;\r\n      destructor destroy;override;\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Model\\Model.Registro.pas","smell":"Uso de with","linha":304,"trecho":"with qry do"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":273,"trecho":"function TModelRegistro.GerarSerial: string;\r\nvar\r\n  x:string;\r\n  Y:string;\r\n  z:string;\r\n  data : TDateTime;\r\n  qry, qry2: TFDQuery;\r\n  Registrarfrm: TFrmRegistrar;\r\nbegin\r\n  Result:= '';\r\n  FSWbemLocator := CreateOleObject('WbemScripting.SWbemLocator');\r\n  FWMIService   := FSWbemLocator.ConnectServer('localhost', 'root\\CIMV2', '', '');\r\n  X:=Trim(GetWMIstring('Win32_BIOS','SerialNumber')); //Serial da Bios\r\n  Y:=Trim(GetWMIstring('Win32_PhysicalMedia','SerialNumber')); //Serial do HD\r\n\r\n  //label6.Caption:= x;\r\n  //label4.Caption:= y;\r\n  z:=x+y+(DateToStr(date));\r\n  //label5.Caption:=z;\r\n  Result:= z;\r\n\r\n  qry:= TFDquery.Create(nil);\r\n  qry.Connection  := TConexaoLicencas.CreateConnection;\r\n  try\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('select * from registro');\r\n    qry.SQL.Add('');\r\n\r\n    qry.ExecSQL;\r\n    qry.Connection.Commit;\r\n\r\n    with qry do\r\n\r\n     //FDQuery1.Edit;\r\n     //Desabilitar botao Geral Serial\r\n     //Edit1.Enabled:=False;\r\n     //BtnRegistrar.Enabled:=False;\r\n     //Button1.Enabled:=False;\r\n     //PageControl1.Pages[1].TabVisible := False;\r\n     // fim\r\n\r\n\r\n     qry.FieldByName('chave').AsString      := z;\r\n     qry.FieldByName('Data_inc').AsDateTime := Date;\r\n     Data := date;\r\n     qry.FieldByName('Data_exp').AsDateTime:=Data;\r\n     //ShowMessage(DateToStr(Data+30));\r\n     qry.FieldByName('serialhd').AsString:=y;\r\n\r\n     qry.FieldByName('ID_Chave').AsInteger := qry2.FieldByName('ID_Chave').AsInteger;\r\n\r\n     qry.FieldByName('contrasenha').AsString:='0';\r\n     qry.FieldByName('ativado').AsString:='N';\r\n     qry.Post;\r\n\r\n  finally\r\n     qry.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":354,"trecho":"class function TModelRegistro.GravarContraSenha(\r\n  aRegistro: TModelRegistro): Boolean;\r\nvar\r\n  qry: TFDQuery;\r\nbegin\r\n  Result := False;\r\n  qry:= TFDQuery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  //Checar se a CONTRASENHA Existe se n\u00E3o avisar ao usu\u00E1rio que a Contra Senha est\u00E1 errada e encerrar o programa?\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('select contrasenha from registro');\r\n    qry.SQL.Add(' where contrasenha = :contrasenha');\r\n    qry.ParamByName('contrasenha').DataType := ftString;\r\n    qry.ParamByName('contrasenha').AsString := aRegistro.ContraSenha;\r\n    qry.Open;\r\n\r\n    if qry.RecordCount > 0 then //Encontrou a ContraSenha faz o update\r\n    begin\r\n      qry.Connection.StartTransaction;\r\n      try\r\n        qry.close;\r\n        qry.SQL.Clear;\r\n\r\n        qry.SQL.Text:='UPDATE LICENCAS.REGISTRO      ' +\r\n                      'SET                           ' +\r\n                     // 'ID           = :id,           ' +\r\n                     // 'ID_CHAVE     = :ID_CHAVE,     ' +\r\n                     // 'CHAVE        = :CHAVE,        ' +\r\n                      'DATA_INC     = :DATA_INC,     ' +\r\n                      'DATA_EXP     = :DATA_EXP,     ' +\r\n                      'CONTRASENHA  = :CONTRASENHA,  ' +\r\n                      'ATIVADO      = :ATIVADO,      ' +\r\n                    //  'SERIALHD     = :SERIALHD      ' +\r\n                      'WHERE                         ' +\r\n                      'CONTRASENHA     = :CONTRASENHA      ';\r\n\r\n\r\n        qry.ParamByName('DATA_INC').DataType     := ftDate;\r\n        qry.ParamByName('DATA_INC').AsDateTime   := Now;\r\n        qry.ParamByName('DATA_EXP').DataType     := ftDate;\r\n        qry.ParamByName('DATA_EXP').AsDate       := aRegistro.Data_exp + 30;\r\n        qry.ParamByName('CONTRASENHA').DataType  := ftString;\r\n        qry.ParamByName('CONTRASENHA').AsString  := aRegistro.ContraSenha;\r\n        qry.ParamByName('ATIVADO').DataType      := ftString;\r\n        qry.ParamByName('ATIVADO').AsString      := aRegistro.ativo;\r\n\r\n        qry.ExecSQL;\r\n        qry.Connection.Commit;\r\n\r\n        Result := True;\r\n      Except\r\n      On E: Exception do\r\n        begin\r\n           Showmessage('Erro ao gravar tabela registro!'+ E.Message);\r\n           qry.Connection.Rollback;\r\n           Result := False;\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":426,"trecho":"class function TModelRegistro.GravarNoBancoLicencas(\r\n  aRegistro: TModelRegistro): Boolean;\r\nvar\r\n  qry   : TFDQuery;\r\n  Ativo : string;\r\n  UF    : string;\r\n  idChave : integer;\r\nbegin\r\n  //Testar se a Licen\u00E7a j\u00E1 existe no banco de dados  buscar pelo cnpj  trazer o id e pesquisar na tabela registro\r\n  //Se j\u00E1 existir o cnpj na tabela chaves e estiver aguardando a grava\u00E7\u00E3o da contrasenha na tabela registro o que fazer?\r\n  // Informar o usu\u00E1rio que est\u00E1 aguardando a contrasenha e pular fora?\r\n  qry:= TFDquery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('Select * from chaves');\r\n    qry.SQL.Add(' where cnpj =:cnpj');\r\n    qry.ParamByName('cnpj').DataType := ftString;\r\n    qry.ParamByName('cnpj').AsString := aRegistro.cnpj;\r\n    qry.Open;\r\n\r\n    if qry.RecordCount > 0 then //O registro dos dados do cliente existe na tabela chaves\r\n    begin\r\n      ShowMessage('Registro encontrado');\r\n      idChave:= qry.FieldByName('id_chave').AsInteger;\r\n\r\n      qry.Close;\r\n      qry.SQL.Clear;\r\n      qry.SQL.Add('Select contrasenha from registro');\r\n      qry.SQL.Add(' where id_chave=:id_chave');\r\n      qry.ParamByName('id_chave').DataType  := ftInteger;\r\n      qry.ParamByName('id_chave').AsInteger := idChave;\r\n      qry.Open;\r\n\r\n      if (qry.RecordCount > 0) and (qry.fieldbyname('contrasenha').AsString='') then\r\n      begin\r\n          //Gravar no Banco primeiro registro\r\n          qry:= TFDquery.Create(nil);\r\n          qry.Connection := TConexaoLicencas.CreateConnection;\r\n          qry.Connection.StartTransaction;\r\n          try\r\n            qry.Close;\r\n            qry.SQL.Clear;\r\n            qry.SQL.Add('INSERT INTO      ' +\r\n                        ' licencas.chaves ' +\r\n                        '(id_chave,       ' + //1\r\n                        'razao,           ' + //2\r\n                        'cnpj,            ' + //3\r\n                        'ie,              ' + //4\r\n                        'im,              ' + //5\r\n                        'endereco,        ' + //6\r\n                        'numero,          ' + //7\r\n                        'complemento,     ' + //8\r\n                        'bairro,          ' + //9\r\n                        'cidade,          ' + //10\r\n                        'cep,             ' + //11\r\n                        'uf,              ' + //12\r\n                        'ativo,           ' + //13\r\n                        'contato,         ' + //14\r\n                        'telcontato,      ' + //15\r\n                        'email,           ' + //16\r\n                        'datacadastro,    ' + //17\r\n                        'dataalteracao    ' + //18\r\n                       // 'dataexclusao   ' + //19\r\n                        ')                ' +\r\n                        'VALUES (         ' +\r\n                        ':id_chave,       ' + //1 ok\r\n                        ':razao,          ' + //2 ok\r\n                        ':cnpj,           ' + //3 ok\r\n                        ':ie,             ' + //4 ok\r\n                        ':im,             ' + //5 ok\r\n                        ':endereco,       ' + //6 ok\r\n                        ':numero,         ' + //7 ok\r\n                        ':complemento,    ' + //8 ok\r\n                        ':bairro,         ' + //9 ok\r\n                        ':cidade,         ' + //10 ok\r\n                        ':cep,            ' + //11 ok\r\n                        ':uf,             ' + //12 ok\r\n                        ':ativo,          ' + //13 ok\r\n                        ':contato,        ' + //14\r\n                        ':telcontato,     ' + //15\r\n                        ':email,          ' + //16\r\n                        ':datacadastro,   ' + //17 ok\r\n                        ':dataalteracao   ' + //18 ok\r\n                      //  ':dataexclusao, ' + //19 ok\r\n                        ')                ');\r\n\r\n             qry.ParamByName('id_chave').DataType    := ftInteger;             //1\r\n             qry.ParamByName('razao').DataType       := ftString;\r\n             qry.ParamByName('razao').AsString       := aRegistro.razao;       //2\r\n             qry.ParamByName('cnpj').DataType        := ftString;\r\n             qry.ParamByName('cnpj').AsString        := aRegistro.cnpj ;       //3\r\n             qry.ParamByName('ie').DataType          := ftString;\r\n             qry.ParamByName('ie').AsString          := aRegistro.ie;          //4\r\n             qry.ParamByName('im').DataType          := ftString;\r\n             qry.ParamByName('im').AsString          := aRegistro.im;          //5\r\n             qry.ParamByName('endereco').DataType    := ftString;\r\n             qry.ParamByName('endereco').AsString    := aRegistro.endereco;    //6\r\n             qry.ParamByName('numero').DataType      := ftInteger;\r\n             qry.ParamByName('numero').AsInteger     := aRegistro.numero;      //7\r\n             qry.ParamByName('complemento').DataType := ftString;\r\n             qry.ParamByName('complemento').AsString := aRegistro.complemento; //8\r\n             qry.ParamByName('cep').DataType         := ftString;\r\n             qry.ParamByName('cep').AsString         := aRegistro.CEP;         //9\r\n             qry.ParamByName('cidade').DataType      := ftString;\r\n             qry.ParamByName('cidade').AsString      := aRegistro.Cidade;      //10\r\n             qry.ParamByName('bairro').DataType      := ftString;\r\n             qry.ParamByName('bairro').AsString      := aRegistro.Bairro;      //11\r\n             qry.ParamByName('uf').DataType          := ftString;\r\n             if Length(aRegistro.UF) > 0 then\r\n               UF := Copy(aRegistro.UF, 1, 2)\r\n             else\r\n               UF := '';\r\n\r\n             qry.ParamByName('uf').AsString          := UF;                    //12\r\n\r\n             qry.ParamByName('ativo').DataType       := ftString;\r\n             if Length(aRegistro.ativo) > 0 then\r\n               Ativo := Copy(aRegistro.ativo, 1, 1)\r\n             else\r\n               Ativo := '';\r\n\r\n             qry.ParamByName('ativo').AsString       := Ativo;                 //13\r\n\r\n             qry.ParamByName('contato').DataType     := ftString;\r\n             qry.ParamByName('contato').AsString     := aRegistro.contato;     //14\r\n\r\n             qry.ParamByName('telcontato').DataType     := ftString;\r\n             qry.ParamByName('telcontato').AsString     := aRegistro.telcontato; //15\r\n\r\n             qry.ParamByName('email').DataType     := ftString;\r\n             qry.ParamByName('email').AsString     := aRegistro.email;           //16\r\n\r\n             qry.ParamByName('datacadastro').DataType  := ftDateTime;\r\n             qry.ParamByName('datacadastro').AsDateTime:= Now;                 //17\r\n\r\n             qry.ParamByName('dataalteracao').DataType  := ftDateTime;         //18\r\n             qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n        //     qry.ParamByName('dataexclusao').DataType := ftDateTime;\r\n        //     qry.ParamByName('dataexclusao').AsDateTime:= aCliente.dataExclusao; //19\r\n\r\n             qry.ExecSQL;\r\n             qry.Connection.Commit;\r\n\r\n             Result := True;\r\n          Except\r\n           On E: Exception do\r\n              begin\r\n                if aRegistro.Linguagem='Portugues' then\r\n                  ShowMessage('Erro ao tentar gravar licen\u00E7a!' + E.Message)\r\n                else\r\n                  ShowMessage('Error trying to write license!!' + E.Message);\r\n\r\n                qry.Connection.Rollback;\r\n                qry.Free;\r\n              end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":610,"trecho":"class function TModelRegistro.GravarRegistro(\r\n  aRegistro: TModelRegistro; achave: String): Boolean;\r\nvar\r\n  qry: TFDQuery;\r\n  data: TDateTime;\r\nbegin\r\n  qry:= TFDQuery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n     qry.SQL.Clear;\r\n     qry.SQL.Add('INSERT INTO REGISTRO      ' +\r\n                 '(id,                      ' +\r\n                 'id_chave,                 ' +\r\n                 'chave,                    ' +\r\n                 'data_inc,                 ' +\r\n                 'data_exp,                 ' +\r\n                 'contrasenha,              ' +\r\n                 'ativado,                  ' +\r\n                 'serialhd                  ' +\r\n               //  'WHERE id_chave =:id_chave ' +\r\n                 ')                         ' +\r\n                 'VALUES (                  ' +\r\n                 ':id,                      ' +\r\n                 ':id_chave,                ' +\r\n                 ':chave,                   ' +\r\n                 ':data_inc,                ' +\r\n                 ':data_exp,                ' +\r\n                 ':contrasenha,             ' +\r\n                 ':ativado,                 ' +\r\n                 ':serialhd                 ' +\r\n                 ')                         ');\r\n\r\n     qry.ParamByName('chave').DataType     := ftString;\r\n     qry.ParamByName('chave').AsString      := aChave;\r\n\r\n     qry.ParamByName('Data_inc').DataType   := ftDateTime;\r\n     qry.ParamByName('Data_inc').AsDateTime := Date;\r\n\r\n     Data := Date;\r\n\r\n     qry.ParamByName('Data_exp').DataType    := ftDateTime;\r\n     qry.ParamByName('Data_exp').AsDateTime  :=Data;\r\n\r\n     //ShowMessage(DateToStr(Data+30));\r\n     qry.ParamByName('serialhd').DataType    := ftDateTime;\r\n     qry.ParamByName('serialhd').AsString    :=aRegistro.serialhd;\r\n\r\n     qry.ParamByName('contrasenha').AsString :='0';\r\n     qry.ParamByName('ativado').AsString     :='N';\r\n\r\n     //Ver como fazer?\r\n     //qry.ParamByName('id_chave').AsInteger := //qry2.FieldByName('ID_Chave').AsInteger;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n  On E: Exception do\r\n    begin\r\n       Showmessage('Erro ao gravar tabela registro!'+ E.Message);\r\n       qry.Connection.Rollback;\r\n       Result := False;\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\Painel\\Unit1.pas","smell":"M\u00E9todo muito longo","linha":101,"trecho":"procedure TForm1.VerificaFila;\r\nbegin\r\n  // Criar a Thread anonima\r\n  TThread.CreateAnonymousThread(\r\n    procedure\r\n    var\r\n      QryLocal, QryBoNota, QryChamados: TFDquery;\r\n      LBoNota: String;\r\n      Fila: TQueue<string>;\r\n      Placa, Local: string;\r\n      proximo: string;\r\n      i: Integer;\r\n\r\n      SearchString: string;\r\n      LineIndex: Integer;\r\n    begin\r\n      Fila := TQueue<string>.Create;\r\n      Queue := TQueue<string>.Create;\r\n\r\n      QryLocal := TFDquery.Create(nil);\r\n      QryLocal.Connection := FDConnection1;\r\n      try\r\n        QryLocal.Close;\r\n        QryLocal.SQL.Clear;\r\n        QryLocal.SQL.Add('select f.*, v.*, v.placa,l.local from fila f');\r\n        QryLocal.SQL.Add\r\n          (' inner join veiculos v on(f.idveiculo = v.idveiculos) ');\r\n        QryLocal.SQL.Add(' inner join locais l on(f.idlocal = l.idlocais)');\r\n        QryLocal.SQL.Add(' where f.ativo=''S'' '); // se comentar pega todos os\r\n        QryLocal.SQL.Add(' order by f.datahoraentrada');\r\n\r\n        // Se a conex\u00E3o cair reconectar\r\n        if not FDConnection1.Connected then\r\n          FDConnection1.Connected := True;\r\n\r\n        QryLocal.Open();\r\n\r\n        {$IFDEF DEBUG}\r\n          Showmessage('QryLocal Qtde Registros \u00E9 de: ' +\r\n          IntToStr(QryLocal.RecordCount));\r\n        {$ENDIF}\r\n\r\n        if QryLocal.RecordCount > 0 then\r\n        begin\r\n\r\n          // Adicionar Todas as placas ao Memo1\r\n          Memo1.Clear; // Limpa o Memo1 antes de adicionar novos dados\r\n          QryLocal.First;\r\n          while not QryLocal.Eof do\r\n          begin\r\n            Placa := QryLocal.FieldByName('placa').AsString;\r\n            Local := QryLocal.FieldByName('local').AsString;\r\n            TThread.Synchronize(nil,\r\n              procedure\r\n              begin\r\n                Memo1.Lines.Add(Placa + ' - ' + Local);\r\n                // Adiciona a linha ao Memo1\r\n              end);\r\n            Placa := QryLocal.FieldByName('placa').AsString;\r\n            Fila.Enqueue(Placa);\r\n            QryLocal.Next;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\View\\cxSchedulerEventEditor.pas","smell":"M\u00E9todo muito longo","linha":66,"trecho":"  TcxSchedulerEditorIsValidEvent = function: Boolean of object;\r\n\r\n  TcxSchedulerCustomEditorFormHelper = class\r\n  private\r\n    FEvent: TcxSchedulerControlEvent;\r\n    FForceSeries: Boolean;\r\n    FForm: TForm;\r\n    FLockCount: Integer;\r\n    FModified: Boolean;\r\n    FReadOnly: Boolean;\r\n    FOnChanged: TNotifyEvent;\r\n    FOnIsValid: TcxSchedulerEditorIsValidEvent;\r\n    FOnSaveChanges: TNotifyEvent;\r\n\r\n    function GetStorage: TcxCustomSchedulerStorage;\r\n    function IsValid: Boolean;\r\n    procedure SetModified(AValue: Boolean);\r\n    procedure SetReadOnly(AValue: Boolean);\r\n  protected\r\n    procedure DoChanged; virtual;\r\n    procedure DoExecuteAction(var AModalResult: TModalResult); virtual;\r\n    function DoIsValid: Boolean; virtual;\r\n    procedure DoRefresh; virtual;\r\n    procedure DoSaveChanges; virtual;\r\n    function GetEvent: TcxSchedulerControlEvent; virtual;\r\n    function IsEditorModal: Boolean; virtual;\r\n\r\n    procedure Cancel(var AModalResult: TModalResult); virtual;\r\n    procedure Close(var AModalResult: TModalResult); virtual;\r\n    procedure Delete(var AModalResult: TModalResult); virtual;\r\n    procedure Save(var AModalResult: TModalResult); virtual;\r\n\r\n    property Form: TForm read FForm;\r\n    property OnIsValid: TcxSchedulerEditorIsValidEvent read FOnIsValid write FOnIsValid;\r\n  public\r\n    constructor Create(AForm: TForm; AEvent: TcxSchedulerControlEvent); virtual;\r\n\r\n    procedure ExecuteAction(AModalResult: TModalResult);\r\n    procedure Changed;\r\n    function ValidateOccurrenceDate(AEvent: TcxSchedulerControlEvent; ANewStart, ANewFinish: TDateTime): Boolean;\r\n\r\n    procedure BeginUpdate;\r\n    procedure CancelUpdate;\r\n    procedure EndUpdate;\r\n    function IsUpdating: Boolean;\r\n\r\n    property Event: TcxSchedulerControlEvent read GetEvent;\r\n    property ForceSeries: Boolean read FForceSeries write FForceSeries;\r\n    property Modified: Boolean read FModified write SetModified;\r\n    property ReadOnly: Boolean read FReadOnly write SetReadOnly;\r\n    property Storage: TcxCustomSchedulerStorage read GetStorage;\r\n    property OnChanged: TNotifyEvent read FOnChanged write FOnChanged;\r\n    property OnSaveChanges: TNotifyEvent read FOnSaveChanges write FOnSaveChanges;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\View\\cxSchedulerEventEditor.pas","smell":"M\u00E9todo muito longo","linha":150,"trecho":"    function HasStorageEvent: Boolean;\r\n    procedure SetAllowDelete(AValue: Boolean);\r\n    procedure SetAllowRecurrence(AValue: Boolean);\r\n    procedure SetIntersection(const Value: Boolean);\r\n    procedure SetIsIntersectionValid(const Value: Boolean);\r\n  protected\r\n    procedure ApplyEventTime;\r\n    procedure CalculateIntersection;\r\n    procedure UpdateEditingInfo;\r\n\r\n    procedure DoExecuteAction(var AModalResult: TModalResult); override;\r\n    procedure DoInitialize(AEventInfo: TcxSchedulerEventEditInfo;\r\n      AEditingInfo: TcxSchedulerEditingEventInfo); virtual;\r\n    procedure DoRefresh; override;\r\n    function GetEvent: TcxSchedulerControlEvent; override;\r\n    procedure NormalizeTopMostWindows;\r\n    function PostEvent: TcxSchedulerEvent; virtual;\r\n    procedure RefreshRecurrenceInfo;\r\n\r\n    procedure Cancel(var AModalResult: TModalResult); override;\r\n    procedure Close(var AModalResult: TModalResult); override;\r\n    procedure Delete(var AModalResult: TModalResult); override;\r\n    procedure Save(var AModalResult: TModalResult); override;\r\n\r\n    property Source: TcxSchedulerEvent read FSource;\r\n    property CanDelete: Boolean read FCanDelete;\r\n    property EditingInfo: TcxSchedulerEditingEventInfo read FEditingInfo;\r\n    property IsEventRecurring: Boolean read FIsEventRecurring;\r\n  public\r\n    constructor Create(AForm: TForm; AEvent: TcxSchedulerControlEvent); override;\r\n    destructor Destroy; override;\r\n\r\n    function CanClose: Boolean;\r\n    function GetRecurrenceDescription: string;\r\n    procedure Initialize(AEventInfo: TcxSchedulerEventEditInfo;\r\n      AEditingInfo: TcxSchedulerEditingEventInfo);\r\n    function IsNewEvent: Boolean;\r\n    function CanDeleteEvent: Boolean;\r\n    procedure PopulateLabelColor(AProperties: TcxImageComboBoxProperties);\r\n    procedure PopulateShowTimeAsPanel(AProperties: TcxImageComboBoxProperties);\r\n\r\n    property AllowDelete: Boolean read FAllowDelete write SetAllowDelete;\r\n    property AllowHiddenEvents: Boolean read FAllowHiddenEvents write FAllowHiddenEvents;\r\n    property AllowRecurrence: Boolean read FAllowRecurrence write SetAllowRecurrence;\r\n    property AllowShare: Boolean read FAllowShare write FAllowShare;\r\n    property BiasTime: TDateTime read FBiasTime write FBiasTime;\r\n    property DeleteExceptions: Boolean read FDeleteExceptions write FDeleteExceptions;\r\n    property DeleteSeries: Boolean read FDeleteSeries write FDeleteSeries;\r\n    property Duration: TDateTime read FDuration write FDuration;\r\n    property Intersection: Boolean read FIntersection write SetIntersection;\r\n    property IsIntersectionValid: Boolean read FIsIntersectionValid write SetIsIntersectionValid;\r\n    property IsRemindersActive: Boolean read FIsRemindersActive;\r\n    property LookAndFeel: TcxLookAndFeel read FLookAndFeel;\r\n    property NeedCheckLossOfExceptions: Boolean read FNeedCheckLossOfExceptions\r\n      write FNeedCheckLossOfExceptions;\r\n    property PatternStart: TDateTime read FPatternStart write FPatternStart;\r\n    property PatternFinish: TDateTime read FPatternFinish write FPatternFinish;\r\n    property RecurrenceActivate: Boolean read FRecurrenceActivate write FRecurrenceActivate;\r\n    property RecurrenceInfo: TcxSchedulerEventRecurrenceInfo read FRecurrenceInfo;\r\n    property ShowResources: Boolean read FShowResources write FShowResources;\r\n    property ShowTaskComplete: Boolean read FShowTaskComplete write FShowTaskComplete;\r\n    property OnDelete: TcxOnDeleteEventFunc read FOnDelete write FOnDelete;\r\n    property OnApplyEventTime: TNotifyEvent read FOnApplyEventTime write FOnApplyEventTime;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\View\\cxSchedulerEventEditor.pas","smell":"M\u00E9todo muito longo","linha":393,"trecho":"    procedure OnChanged(Sender: TObject);\r\n    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);\r\n    procedure FormKeyDown(Sender: TObject; var Key: Word;\r\n      Shift: TShiftState);\r\n    procedure FormActivate(Sender: TObject);\r\n    procedure cbAllDayEventPropertiesChange(Sender: TObject);\r\n    procedure StartDateChanged(Sender: TObject);\r\n    procedure cbReminderClick(Sender: TObject);\r\n    procedure cbReminderMinutesBeforeStartPropertiesValidate(\r\n      Sender: TObject; var DisplayValue: Variant; var ErrorText: TCaption;\r\n      var Error: Boolean);\r\n    procedure cbReminderMinutesBeforeStartPropertiesPopup(Sender: TObject);\r\n    procedure OnEventTimeChanged(Sender: TObject);\r\n    procedure btnRecurrenceClick(Sender: TObject);\r\n    procedure OnResourceIDChanged(Sender: TObject);\r\n    procedure btnFindTimeClick(Sender: TObject);\r\n    procedure btnDeleteClick(Sender: TObject);\r\n    procedure seTaskCompleteChange(Sender: TObject);\r\n    procedure cbxTaskStatusChange(Sender: TObject);\r\n    procedure cbResourcesPropertiesClickCheck(Sender: TObject;\r\n      ItemIndex: Integer; var AllowToggle: Boolean);\r\n    procedure FormShow(Sender: TObject);\r\n    procedure btnOkClick(Sender: TObject);\r\n    procedure FormClose(Sender: TObject; var Action: TCloseAction);\r\n    procedure btnCancelClick(Sender: TObject);\r\n  private\r\n    FRecurrenceInfoHeight: Integer;\r\n    procedure DoApplyEventTime(Sender: TObject);\r\n    function GetAllowHiddenEvents: Boolean;\r\n    function GetDeleteExceptions: Boolean;\r\n    function GetEventName: string;\r\n    function GetForceSeries: Boolean;\r\n    function GetHelper: TcxSchedulerEventStandardEditorFormHelper;\r\n    procedure SetAllowHiddenEvents(AValue: Boolean);\r\n    procedure SetDeleteExceptions(AValue: Boolean);\r\n    procedure SetForceSeries(AValue: Boolean);\r\n  protected\r\n    procedure ApplyEventTime;\r\n    procedure CheckControlStates; virtual;\r\n    function CheckTimeRange(var AStart, AFinish: TDateTime): Boolean; virtual;\r\n    procedure CheckVisible; virtual;\r\n    procedure ClearModifiedFlag; override;\r\n    procedure DoHelperChanged; override;\r\n    function DoHelperIsValid: Boolean; override;\r\n    procedure DoHelperSaveChanges; override;\r\n    function FindAvailableTime: Boolean; virtual;\r\n    procedure GetEditingEventTime(var AStart, AFinish: TDateTime; var AState: Integer); virtual;\r\n    function GetFormColor: TColor; override;\r\n    function GetHelperClass: TcxSchedulerEditorHelperClass; override;\r\n    function GetRecurrenceDescription: string; virtual;\r\n    function GetResourcesPanelVisible: Boolean; virtual;\r\n    procedure Initialize(AEventInfo: TcxSchedulerEventEditInfo;\r\n      AEditingInfo: TcxSchedulerEditingEventInfo); override;\r\n    procedure InitializeControls; override;\r\n    procedure InitializeHelper(AEvent: TcxSchedulerControlEvent); override;\r\n    procedure InitializeTimeControls(const AStart, AFinish: TDateTime; AllDayEvent: Boolean); virtual;\r\n    procedure InitLabelColor;\r\n    procedure InitReminderPanel;\r\n    procedure InitResources;\r\n    procedure InitShowTimeAsPanel;\r\n    procedure InitTaskCompletePanel;\r\n    function IsValid: Boolean; virtual;\r\n    procedure LoadEventValuesIntoControls; override;\r\n    procedure RefreshRecurrenceInfo; virtual;\r\n    procedure SaveResourceID; virtual;\r\n    procedure SetActiveControl; virtual;\r\n    procedure SetCaptions; virtual;\r\n    procedure SetReminderMinutesBeforeStart; virtual;\r\n\r\n    property DeleteExceptions: Boolean read GetDeleteExceptions write SetDeleteExceptions;\r\n    property Helper: TcxSchedulerEventStandardEditorFormHelper read GetHelper;\r\n  public\r\n    property AllowHiddenEvents: Boolean read GetAllowHiddenEvents write SetAllowHiddenEvents;\r\n    property EventName: string read GetEventName;\r\n    property ForceSeries: Boolean read GetForceSeries write SetForceSeries;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\View\\cxSchedulerEventEditor.pas","smell":"Uso de with","linha":1593,"trecho":"with cbResources.Properties.Items do"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\View\\cxSchedulerEventEditor.pas","smell":"Uso de with","linha":1606,"trecho":"with TcxCheckComboBoxItem(Add) do"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\View\\cxSchedulerEventEditor.pas","smell":"Uso de with","linha":1632,"trecho":"with cbxTaskStatus.Properties do"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\View\\View.CustomizedEventEditorForm.pas","smell":"M\u00E9todo muito longo","linha":135,"trecho":"procedure TcxSchedulerEventEditorCustomized.btnOkClick(Sender: TObject);\r\nvar\r\n  //EnviarConfirmacao: TModelAgendamento;\r\n  LIdLocal: integer;\r\n  qryIdLocal: TFDQuery;\r\n  qryIdVeiculo:TFDQuery;\r\n  qryFila: TFDQuery;\r\nbegin\r\n  inherited;\r\n\r\n  //localizar o veiculo pela placa no cadastro para pegar o idveiculo\r\n  qryIdVeiculo:= TFDQuery.Create(nil);\r\n  qryIdVeiculo.Connection:= DataModule3.FDConnection1;\r\n  try\r\n    qryIdVeiculo.SQL.Add('select idveiculos from veiculos');\r\n    qryIdVeiculo.SQL.Add(' where placa = :placa');\r\n    qryIdVeiculo.parambyname('placa').AsString := Event.GetCustomFieldValueByName('Placa'); //CBPlacasVeiculos.EditValue;//cxTextEdit1.editValue;\r\n    qryIdVeiculo.open;\r\n\r\n    if qryIdVeiculo.RecordCount > 0 then\r\n    begin\r\n      //Preenche par\u00E2metros a serem enviados no e-mail\r\n      LSubject    := teSubject.EditValue;\r\n      LLocal      := Event.GetCustomFieldValueByName('Locais');// cxDBComboBoxLocais.;//cxDBComboBoxLocais.EditValue;     //como pegar o valor selecionado\r\n      LPlaca      := Event.GetCustomFieldValueByName('Placa');//CBPlacasVeiculos.Text;//cxTextEdit1.EditValue;\r\n      LNF         := cxTextEdit2.EditValue;\r\n      LidVeiculo  := qryIdVeiculo.FieldByName('idveiculos').AsInteger;\r\n      LNotaFiscal := cxTextEdit2.editValue;\r\n      LTelefone   := cxTextEdit3.EditValue;\r\n      LEmail      := cxTextEdit4.EditValue;\r\n      LData       := deStart.EditingValue;\r\n      LHora       := teStart.EditValue;\r\n      LObs        := meMessage.EditValue;\r\n\r\n      LMemo := TStringList.Create;\r\n      LMemo.Add(LSubject);\r\n      LMemo.Add('Local    :' + LLocal);\r\n      LMemo.Add('Placa    :' + LPlaca);\r\n      LMemo.Add('NF       :' + IntToStr(LNotaFiscal));\r\n      LMemo.Add('Telefone :' + LTelefone);\r\n      LMemo.Add('E-mail   :' + LEMail);\r\n      LMemo.Add('Data     :' + DateTimeToStr(LData));\r\n      LMemo.Add('Hora     :' + LHora);\r\n      LMemo.Add('Obs.     :' + LObs);\r\n\r\n    end\r\n    else\r\n    begin\r\n      TThread.Synchronize(nil,\r\n      procedure\r\n      begin\r\n        ShowMessage('Veiculo N\u00E3o cadastrado!');\r\n        //Inserir o veiculo na tabela veiculos\r\n        Application.CreateForm(TFrmEntradaVeiculos, FrmEntradaVeiculos);\r\n        FrmEntradaVeiculos.ShowModal;\r\n      end);\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\Cargas\\cargas\\View\\View.GerenciaFila.pas","smell":"M\u00E9todo muito longo","linha":112,"trecho":"procedure TFrmGerenciarFila.FormShow(Sender: TObject);\r\nbegin\r\n  //Enviar os e-mails do agendamento - ver a Thread para essa parte\r\n  TTHread.CreateAnonymousThread(procedure\r\n  var\r\n    qryEmviarEmail, qry2: TFDQuery;\r\n    LEnviar : TModelAgendamento;\r\n    LSubject: string;\r\n    LEmail: String;\r\n    LMemo: String;\r\n    LDataEnvio: TDate;\r\n    LPlaca: String;\r\n    LLocal: String;\r\n    LNF: Integer;\r\n    LTelefone: String;\r\n    LHora: TTime;\r\n    LOBs: String;\r\n  begin\r\n    qryEmviarEmail:= TFDquery.Create(nil);\r\n    qryEmviarEmail.Connection:= DataModule3.FDConnection1;\r\n    try\r\n      qryEmviarEmail.Close;\r\n      qryEmviarEmail.SQL.Clear;\r\n      qryEmviarEmail.SQL.Add('select * from email');\r\n      qryEmviarEmail.sql.Add(' where enviado=''N'' ');\r\n      qryEmviarEmail.Open;\r\n\r\n      if qryEmviarEmail.RecordCount > 0 then\r\n      begin\r\n        LSubject   := qryEmviarEmail.FieldByName('subject').AsString;\r\n        LEmail     := qryEmviarEmail.FieldByName('email').AsString;\r\n        LMemo      := qryEmviarEmail.FieldByName('memo').AsString;\r\n        LDataEnvio := qryEmviarEmail.FieldByName('dataenvio').AsDateTime;\r\n        LPlaca     := qryEmviarEmail.FieldByName('placa').AsString;;\r\n        LLocal     := qryEmviarEmail.FieldByName('local').AsString;;\r\n        LNF        := qryEmviarEmail.FieldByName('nf').AsInteger;\r\n        LTelefone  := qryEmviarEmail.FieldByName('telefone').AsString;\r\n        LHora      := qryEmviarEmail.FieldByName('hora').AsVariant;\r\n        LOBs       := qryEmviarEmail.FieldByName('memo').AsString;\r\n\r\n\r\n        qryEmviarEmail.First;\r\n        while not qryEmviarEmail.Eof do\r\n        begin\r\n          LEnviar := TModelAgendamento.Create;\r\n          try\r\n            if LEnviar.EnviarEmail2(LSubject, LPlaca, LNF, LLocal, LTelefone, LEmail, LDataEnvio, TimeToStr(LHora) , LObs) then\r\n            begin\r\n                LEnviar.EditarEmailEnviado;\r\n                //update da tabela email o campo enviado tem que mudar para S\r\n                qry2:= TFDquery.Create(nil);\r\n                qry2.Connection:= DM.DataModule3.FDConnection1;\r\n                try\r\n                  qry2.SQL.clear;\r\n                  qry2.SQL.Text :=\r\n                  'UPDATE email  ' +\r\n                  'SET enviado = ''S'' ' +  //Nono N veiculos n\u00E3o v\u00E3o para o monitor\r\n                  'WHERE idemail = :idemail';\r\n\r\n                  qry2.ParamByName('idemail').AsInteger := qryEmviarEmail.FieldByName('idemail').AsInteger;\r\n\r\n                  qry2.ExecSQL;\r\n                finally\r\n                  qry2.Free;\r\n                end;\r\n"},{"arquivo":"c:\\fontes\\carregar vumeter em panel\\Unit1.pas","smell":"Uso de with","linha":349,"trecho":"with ListView1.Columns.Add do"},{"arquivo":"c:\\fontes\\carregar vumeter em panel\\Unit1.pas","smell":"Uso de with","linha":355,"trecho":"with ListView1.Columns.Add do"},{"arquivo":"c:\\fontes\\carregar vumeter em panel\\Unit1.pas","smell":"Uso de with","linha":361,"trecho":"with ListView1.Columns.Add do"},{"arquivo":"c:\\fontes\\carregar vumeter em panel\\Unit1.pas","smell":"M\u00E9todo muito longo","linha":557,"trecho":"procedure TForm1.ToggleFullScreen;\r\nconst\r\n  ID_FULLSCREEN = 897;\r\nbegin\r\n  if MPCHandle = 0 then Exit;\r\n\r\n  if not MPCFullScreenMode then\r\n  begin\r\n    // === Entrar em tela cheia ===\r\n\r\n    // Remove do painel\r\n    Winapi.Windows.SetParent(MPCHandle, 0);\r\n\r\n    // Restaura bordas/janela\r\n    SetWindowLong(MPCHandle, GWL_STYLE,\r\n      GetWindowLong(MPCHandle, GWL_STYLE) or WS_CAPTION or WS_THICKFRAME);\r\n\r\n    // Traz para frente\r\n    SetForegroundWindow(MPCHandle);\r\n\r\n    // Entra em fullscreen (Alt+Enter)\r\n    SendMessage(MPCHandle, WM_COMMAND, ID_FULLSCREEN, 0);\r\n\r\n    // Marca estado\r\n    MPCFullScreenMode := True;\r\n\r\n    // Atualiza texto do bot\u00E3o\r\n    btnToggleFull.Caption := 'Voltar ao Painel';\r\n  end\r\n  else\r\n  begin\r\n    // === Voltar ao painel ===\r\n\r\n    // Sai do fullscreen\r\n    SendMessage(MPCHandle, WM_COMMAND, ID_FULLSCREEN, 0);\r\n    Sleep(300);\r\n\r\n    // Remove bordas\r\n    SetWindowLong(MPCHandle, GWL_STYLE,\r\n      GetWindowLong(MPCHandle, GWL_STYLE) and not WS_CAPTION and not WS_THICKFRAME);\r\n\r\n    // Volta ao painel\r\n    Winapi.Windows.SetParent(MPCHandle, Panel3.Handle);\r\n\r\n    // Redimensiona\r\n    SetWindowPos(MPCHandle, 0, 0, 0, Panel3.Width, Panel3.Height, SWP_NOZORDER or SWP_SHOWWINDOW);\r\n\r\n    // Marca estado\r\n    MPCFullScreenMode := False;\r\n\r\n    // Atualiza texto do bot\u00E3o\r\n    btnToggleFull.Caption := 'Tela Cheia';\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\uProjeto.pas","smell":"M\u00E9todo muito longo","linha":8,"trecho":"function ObterArquivosDoProjeto(const ProjetoPath: string): TArray<string>;\r\n\r\nimplementation\r\n\r\nuses\r\n  System.IOUtils, Xml.XMLDoc, Xml.XMLIntf;\r\n\r\nfunction ObterArquivosDoProjeto(const ProjetoPath: string): TArray<string>;\r\nvar\r\n  DprojFile: string;\r\n  ArquivosDproj: TArray<string>;\r\n  XML: IXMLDocument;\r\n  Root, ItemGroup, Ref: IXMLNode;\r\n  Lista: TList<string>;\r\n  BaseDir, FilePath: string;\r\n  PastasIgnoradas: TArray<string>;\r\n  Ignorar: Boolean;\r\n  Pasta: string;\r\n  i, j: Integer;\r\nbegin\r\n  Lista := TList<string>.Create;\r\n  try\r\n    // Localiza o primeiro .dproj no diret\u00F3rio\r\n    ArquivosDproj := TDirectory.GetFiles(ProjetoPath, '*.dproj');\r\n    if Length(ArquivosDproj) = 0 then\r\n      raise Exception.Create('Arquivo .dproj n\u00E3o encontrado no diret\u00F3rio.');\r\n\r\n    DprojFile := ArquivosDproj[0];\r\n\r\n    XML := TXMLDocument.Create(nil);\r\n    XML.LoadFromFile(DprojFile);\r\n    XML.Active := True;\r\n\r\n    BaseDir := ExtractFilePath(DprojFile);\r\n    PastasIgnoradas := ['\\lib\\', '\\thirdparty\\', '\\vendor\\', '\\external\\', '\\packages\\'];\r\n\r\n    Root := XML.DocumentElement;\r\n\r\n    for i := 0 to Root.ChildNodes.Count - 1 do\r\n    begin\r\n      ItemGroup := Root.ChildNodes[i];\r\n      if SameText(ItemGroup.NodeName, 'ItemGroup') then\r\n      begin\r\n        for j := 0 to ItemGroup.ChildNodes.Count - 1 do\r\n        begin\r\n          Ref := ItemGroup.ChildNodes[j];\r\n          if SameText(Ref.NodeName, 'DCCReference') then\r\n          begin\r\n            if Ref.HasAttribute('Include') then\r\n            begin\r\n              FilePath := TPath.Combine(BaseDir, Ref.Attributes['Include']);\r\n              FilePath := TPath.GetFullPath(FilePath);\r\n\r\n              Ignorar := False;\r\n              for Pasta in PastasIgnoradas do\r\n                if FilePath.ToLower.Contains(Pasta) then\r\n                begin\r\n                  Ignorar := True;\r\n                  Break;\r\n                end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\cxSchedulerEventEditor_Linha150_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    function HasStorageEvent: Boolean;\r\n    procedure SetAllowDelete(AValue: Boolean);\r\n    procedure SetAllowRecurrence(AValue: Boolean);\r\n    procedure SetIntersection(const Value: Boolean);\r\n    procedure SetIsIntersectionValid(const Value: Boolean);\r\n  protected\r\n    procedure ApplyEventTime;\r\n    procedure CalculateIntersection;\r\n    procedure UpdateEditingInfo;\r\n\r\n    procedure DoExecuteAction(var AModalResult: TModalResult); override;\r\n    procedure DoInitialize(AEventInfo: TcxSchedulerEventEditInfo;\r\n      AEditingInfo: TcxSchedulerEditingEventInfo); virtual;\r\n    procedure DoRefresh; override;\r\n    function GetEvent: TcxSchedulerControlEvent; override;\r\n    procedure NormalizeTopMostWindows;\r\n    function PostEvent: TcxSchedulerEvent; virtual;\r\n    procedure RefreshRecurrenceInfo;\r\n\r\n    procedure Cancel(var AModalResult: TModalResult); override;\r\n    procedure Close(var AModalResult: TModalResult); override;\r\n    procedure Delete(var AModalResult: TModalResult); override;\r\n    procedure Save(var AModalResult: TModalResult); override;\r\n\r\n    property Source: TcxSchedulerEvent read FSource;\r\n    property CanDelete: Boolean read FCanDelete;\r\n    property EditingInfo: TcxSchedulerEditingEventInfo read FEditingInfo;\r\n    property IsEventRecurring: Boolean read FIsEventRecurring;\r\n  public\r\n    constructor Create(AForm: TForm; AEvent: TcxSchedulerControlEvent); override;\r\n    destructor Destroy; override;\r\n\r\n    function CanClose: Boolean;\r\n    function GetRecurrenceDescription: string;\r\n    procedure Initialize(AEventInfo: TcxSchedulerEventEditInfo;\r\n      AEditingInfo: TcxSchedulerEditingEventInfo);\r\n    function IsNewEvent: Boolean;\r\n    function CanDeleteEvent: Boolean;\r\n    procedure PopulateLabelColor(AProperties: TcxImageComboBoxProperties);\r\n    procedure PopulateShowTimeAsPanel(AProperties: TcxImageComboBoxProperties);\r\n\r\n    property AllowDelete: Boolean read FAllowDelete write SetAllowDelete;\r\n    property AllowHiddenEvents: Boolean read FAllowHiddenEvents write FAllowHiddenEvents;\r\n    property AllowRecurrence: Boolean read FAllowRecurrence write SetAllowRecurrence;\r\n    property AllowShare: Boolean read FAllowShare write FAllowShare;\r\n    property BiasTime: TDateTime read FBiasTime write FBiasTime;\r\n    property DeleteExceptions: Boolean read FDeleteExceptions write FDeleteExceptions;\r\n    property DeleteSeries: Boolean read FDeleteSeries write FDeleteSeries;\r\n    property Duration: TDateTime read FDuration write FDuration;\r\n    property Intersection: Boolean read FIntersection write SetIntersection;\r\n    property IsIntersectionValid: Boolean read FIsIntersectionValid write SetIsIntersectionValid;\r\n    property IsRemindersActive: Boolean read FIsRemindersActive;\r\n    property LookAndFeel: TcxLookAndFeel read FLookAndFeel;\r\n    property NeedCheckLossOfExceptions: Boolean read FNeedCheckLossOfExceptions\r\n      write FNeedCheckLossOfExceptions;\r\n    property PatternStart: TDateTime read FPatternStart write FPatternStart;\r\n    property PatternFinish: TDateTime read FPatternFinish write FPatternFinish;\r\n    property RecurrenceActivate: Boolean read FRecurrenceActivate write FRecurrenceActivate;\r\n    property RecurrenceInfo: TcxSchedulerEventRecurrenceInfo read FRecurrenceInfo;\r\n    property ShowResources: Boolean read FShowResources write FShowResources;\r\n    property ShowTaskComplete: Boolean read FShowTaskComplete write FShowTaskComplete;\r\n    property OnDelete: TcxOnDeleteEventFunc read FOnDelete write FOnDelete;\r\n    property OnApplyEventTime: TNotifyEvent read FOnApplyEventTime write FOnApplyEventTime;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\cxSchedulerEventEditor_Linha1593_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with cbResources.Properties.Items do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\cxSchedulerEventEditor_Linha1606_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TcxCheckComboBoxItem(Add) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\cxSchedulerEventEditor_Linha1632_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with cbxTaskStatus.Properties do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\cxSchedulerEventEditor_Linha393_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    procedure OnChanged(Sender: TObject);\r\n    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);\r\n    procedure FormKeyDown(Sender: TObject; var Key: Word;\r\n      Shift: TShiftState);\r\n    procedure FormActivate(Sender: TObject);\r\n    procedure cbAllDayEventPropertiesChange(Sender: TObject);\r\n    procedure StartDateChanged(Sender: TObject);\r\n    procedure cbReminderClick(Sender: TObject);\r\n    procedure cbReminderMinutesBeforeStartPropertiesValidate(\r\n      Sender: TObject; var DisplayValue: Variant; var ErrorText: TCaption;\r\n      var Error: Boolean);\r\n    procedure cbReminderMinutesBeforeStartPropertiesPopup(Sender: TObject);\r\n    procedure OnEventTimeChanged(Sender: TObject);\r\n    procedure btnRecurrenceClick(Sender: TObject);\r\n    procedure OnResourceIDChanged(Sender: TObject);\r\n    procedure btnFindTimeClick(Sender: TObject);\r\n    procedure btnDeleteClick(Sender: TObject);\r\n    procedure seTaskCompleteChange(Sender: TObject);\r\n    procedure cbxTaskStatusChange(Sender: TObject);\r\n    procedure cbResourcesPropertiesClickCheck(Sender: TObject;\r\n      ItemIndex: Integer; var AllowToggle: Boolean);\r\n    procedure FormShow(Sender: TObject);\r\n    procedure btnOkClick(Sender: TObject);\r\n    procedure FormClose(Sender: TObject; var Action: TCloseAction);\r\n    procedure btnCancelClick(Sender: TObject);\r\n  private\r\n    FRecurrenceInfoHeight: Integer;\r\n    procedure DoApplyEventTime(Sender: TObject);\r\n    function GetAllowHiddenEvents: Boolean;\r\n    function GetDeleteExceptions: Boolean;\r\n    function GetEventName: string;\r\n    function GetForceSeries: Boolean;\r\n    function GetHelper: TcxSchedulerEventStandardEditorFormHelper;\r\n    procedure SetAllowHiddenEvents(AValue: Boolean);\r\n    procedure SetDeleteExceptions(AValue: Boolean);\r\n    procedure SetForceSeries(AValue: Boolean);\r\n  protected\r\n    procedure ApplyEventTime;\r\n    procedure CheckControlStates; virtual;\r\n    function CheckTimeRange(var AStart, AFinish: TDateTime): Boolean; virtual;\r\n    procedure CheckVisible; virtual;\r\n    procedure ClearModifiedFlag; override;\r\n    procedure DoHelperChanged; override;\r\n    function DoHelperIsValid: Boolean; override;\r\n    procedure DoHelperSaveChanges; override;\r\n    function FindAvailableTime: Boolean; virtual;\r\n    procedure GetEditingEventTime(var AStart, AFinish: TDateTime; var AState: Integer); virtual;\r\n    function GetFormColor: TColor; override;\r\n    function GetHelperClass: TcxSchedulerEditorHelperClass; override;\r\n    function GetRecurrenceDescription: string; virtual;\r\n    function GetResourcesPanelVisible: Boolean; virtual;\r\n    procedure Initialize(AEventInfo: TcxSchedulerEventEditInfo;\r\n      AEditingInfo: TcxSchedulerEditingEventInfo); override;\r\n    procedure InitializeControls; override;\r\n    procedure InitializeHelper(AEvent: TcxSchedulerControlEvent); override;\r\n    procedure InitializeTimeControls(const AStart, AFinish: TDateTime; AllDayEvent: Boolean); virtual;\r\n    procedure InitLabelColor;\r\n    procedure InitReminderPanel;\r\n    procedure InitResources;\r\n    procedure InitShowTimeAsPanel;\r\n    procedure InitTaskCompletePanel;\r\n    function IsValid: Boolean; virtual;\r\n    procedure LoadEventValuesIntoControls; override;\r\n    procedure RefreshRecurrenceInfo; virtual;\r\n    procedure SaveResourceID; virtual;\r\n    procedure SetActiveControl; virtual;\r\n    procedure SetCaptions; virtual;\r\n    procedure SetReminderMinutesBeforeStart; virtual;\r\n\r\n    property DeleteExceptions: Boolean read GetDeleteExceptions write SetDeleteExceptions;\r\n    property Helper: TcxSchedulerEventStandardEditorFormHelper read GetHelper;\r\n  public\r\n    property AllowHiddenEvents: Boolean read GetAllowHiddenEvents write SetAllowHiddenEvents;\r\n    property EventName: string read GetEventName;\r\n    property ForceSeries: Boolean read GetForceSeries write SetForceSeries;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\cxSchedulerEventEditor_Linha66_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"  TcxSchedulerEditorIsValidEvent = function: Boolean of object;\r\n\r\n  TcxSchedulerCustomEditorFormHelper = class\r\n  private\r\n    FEvent: TcxSchedulerControlEvent;\r\n    FForceSeries: Boolean;\r\n    FForm: TForm;\r\n    FLockCount: Integer;\r\n    FModified: Boolean;\r\n    FReadOnly: Boolean;\r\n    FOnChanged: TNotifyEvent;\r\n    FOnIsValid: TcxSchedulerEditorIsValidEvent;\r\n    FOnSaveChanges: TNotifyEvent;\r\n\r\n    function GetStorage: TcxCustomSchedulerStorage;\r\n    function IsValid: Boolean;\r\n    procedure SetModified(AValue: Boolean);\r\n    procedure SetReadOnly(AValue: Boolean);\r\n  protected\r\n    procedure DoChanged; virtual;\r\n    procedure DoExecuteAction(var AModalResult: TModalResult); virtual;\r\n    function DoIsValid: Boolean; virtual;\r\n    procedure DoRefresh; virtual;\r\n    procedure DoSaveChanges; virtual;\r\n    function GetEvent: TcxSchedulerControlEvent; virtual;\r\n    function IsEditorModal: Boolean; virtual;\r\n\r\n    procedure Cancel(var AModalResult: TModalResult); virtual;\r\n    procedure Close(var AModalResult: TModalResult); virtual;\r\n    procedure Delete(var AModalResult: TModalResult); virtual;\r\n    procedure Save(var AModalResult: TModalResult); virtual;\r\n\r\n    property Form: TForm read FForm;\r\n    property OnIsValid: TcxSchedulerEditorIsValidEvent read FOnIsValid write FOnIsValid;\r\n  public\r\n    constructor Create(AForm: TForm; AEvent: TcxSchedulerControlEvent); virtual;\r\n\r\n    procedure ExecuteAction(AModalResult: TModalResult);\r\n    procedure Changed;\r\n    function ValidateOccurrenceDate(AEvent: TcxSchedulerControlEvent; ANewStart, ANewFinish: TDateTime): Boolean;\r\n\r\n    procedure BeginUpdate;\r\n    procedure CancelUpdate;\r\n    procedure EndUpdate;\r\n    function IsUpdating: Boolean;\r\n\r\n    property Event: TcxSchedulerControlEvent read GetEvent;\r\n    property ForceSeries: Boolean read FForceSeries write FForceSeries;\r\n    property Modified: Boolean read FModified write SetModified;\r\n    property ReadOnly: Boolean read FReadOnly write SetReadOnly;\r\n    property Storage: TcxCustomSchedulerStorage read GetStorage;\r\n    property OnChanged: TNotifyEvent read FOnChanged write FOnChanged;\r\n    property OnSaveChanges: TNotifyEvent read FOnSaveChanges write FOnSaveChanges;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\DAO.Clientes_Linha238_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"function TClientes.SalvarCliente(Cliente: TClientes): Boolean;\r\nvar\r\n  Ativo : string;\r\n  UF    : string;\r\nbegin\r\n  Result:= False;\r\n  try\r\n    qry:=TFDQuery.Create(nil);\r\n    qry.Connection := FConn;\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' Clientes '    +\r\n                '(idclientes, ' +\r\n                'razao, '       +\r\n                'cnpj_cpf, '    +\r\n                'endereco, '    +\r\n                'numero, '      +\r\n                'complemento, ' +\r\n                'cep, '         +\r\n                'cidade, '      +\r\n                'bairro, '      +\r\n                'ativo, '       +\r\n                'uf) '          +\r\n                'VALUES ('      +\r\n                ':idclientes, ' +\r\n                ':razao, '      +\r\n                ':cnpj_cpf, '   +\r\n                ':endereco, '   +\r\n                ':numero,  '    +\r\n                ':complemento, '+\r\n                ':cep, '        +\r\n                ':cidade, '     +\r\n                ':bairro, '     +\r\n                ':ativo, '      +\r\n                ':uf)');\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := Cliente.razaosocial;\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := Cliente.cnpj ;\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := Cliente.endereco;\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := Cliente.numero;\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := Cliente.complemento;\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := Cliente.CEP;\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := Cliente.Cidade;\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := Cliente.Bairro;\r\n\r\n     qry.ParamByName('uf').DataType            := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.UF) > 0 then\r\n       UF := Copy(Cliente.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF; //ver como vai ser pois \u00E9 CB\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.ativo) > 0 then\r\n       Ativo := Copy(Cliente.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo; //ver como vai ser pois \u00E9 CB\r\n\r\n     qry.ExecSQL;\r\n\r\n     Result:=True;\r\n\r\n  finally\r\n    qry.Close;\r\n    qry.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\DAO.Clientes_Linha89_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"function TClientes.AlterarCliente(Cliente: TClientes): Boolean;\r\nbegin\r\n  //Alterar oo cliente do par\u00E2metro acNPJ\r\n  Result:=False;\r\n  qry:=qry.Create(nil);\r\n  qry.Connection := FConn;\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Text:='UPDATE fulanorodas.clientes  ' +\r\n                  'SET                          ' +\r\n                  'idclientes  = :idclientes,   ' +\r\n                  'razao       = :razao,        ' +\r\n                  'cnpj_cpf    = :cnpj_cpf,     ' +\r\n                  'endereco    = :endereco,     ' +\r\n                  'numero      = :numero,       ' +\r\n                  'complemento = :complemento,  ' +\r\n                  'cep         = :cep,          ' +\r\n                  'cidade      = :cidade,       ' +\r\n                  'bairro      = :bairro,       ' +\r\n                  'ativo       = :ativo,        ' +\r\n                  'uf          = :uf            ' +\r\n                  'WHERE                        ' +\r\n                  'idclientes = :CNPJ           ';\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := Cliente.razaosocial;\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := Cliente.cnpj ;\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := Cliente.endereco;\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := Cliente.numero;\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := Cliente.complemento;\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := Cliente.CEP;\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := Cliente.Cidade;\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := Cliente.Bairro;\r\n\r\n     qry.ParamByName('uf').DataType            := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.UF) > 0 then\r\n       UF := Copy(Cliente.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF; //ver como vai ser pois \u00E9 CB\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.ativo) > 0 then\r\n       Ativo := Copy(Cliente.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n    qry.ParamByName('ativo').AsString         := Ativo; //ver como vai ser pois \u00E9 CB\r\n    qry.ParamByName('CNPJ').DataType:= ftString;\r\n    qry.ParamByName('CNPJ').AsString:= Cliente.cnpj;\r\n\r\n    qry.ExecSQL;\r\n\r\n    Result:=True;\r\n\r\n  finally\r\n    qry.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\DAO.ConexaoLicencas_Linha72_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\DAO.ConexaoLicencas_Linha73_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Dao.Conexao_Linha63_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Dao.Conexao_Linha73_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.MainMenu.Wizard_Linha282_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TFSDMainMenuWizard.CreateMenu;\r\nvar\r\n  menu: TMainMenu;\r\n  menuName: string;\r\n  itemFormacao: TMenuItem;\r\n  itemUtilitarios: TMenuItem;\r\n  itemCursos: TMenuItem;\r\n  itemGitHubs: TMenuItem;\r\n  itemYoutube: TMenuItem;\r\n  itemAPI: TMenuItem;\r\n  itemBlogs: TMenuItem;\r\n  itemGruposFaceBook: TMenuItem;\r\n  itemFerramentas: TMenuItem;\r\n  itemLivros: TMenuItem;\r\n  itemLoja: TMenuItem;\r\n  itemVagas: TMenuItem;\r\n\r\n  Lingua: string;\r\nbegin\r\n  menu := (BorlandIDEServices as INTAServices).MainMenu;\r\n  menuName := 'Informacao';\r\n\r\n  if menu.FindComponent(menuName) <> nil then\r\n    menu.FindComponent(menuName).Free;\r\n\r\n  itemFormacao := TMenuItem.Create(menu);\r\n  itemFormacao.Name := menuName;\r\n  itemFormacao.Caption := 'Estagi\u00E1rio Eletr\u00F4nico';\r\n\r\n  menu.Items.Add(itemFormacao);\r\n\r\n // CreateSubMenu(itemFormacao, 'Novo Wirzard', 'imNovoWizard', OnClickNovoWizard);\r\n  CreateSubMenu(itemFormacao, 'Hist\u00F3rico Projetos', 'imHistoricoProjetos', OnclickMenuHistoryProjects);\r\n  CreateSubMenu(itemFormacao, 'Embarcadero Doc Wiki', 'imDocWiki', OnClickDocWiki);\r\n  CreateSubMenu(itemFormacao, 'Transmitir via Google Meeting', 'imFerramentasGoogleMeeeting', OnClickFerramentasGoogleMeeting);\r\n  CreateSubMenu(itemFormacao, 'Transmitir via FaceBook', 'imFaceBookVideo', OnClickFaceBookVideo);\r\n  CreateSubMenu(itemFormacao, 'Transmitir via Linkedin', 'imLinkedinVideo', OnClickLinkedinVideo);\r\n\r\n\r\n  //CreateSuBMenu(itemFormacao, 'Loja', 'imLoja', OnClickLoja);\r\n\r\n  {Livros} //Recurso de Linguagem ainda em testes.\r\n  FLingua:= GetWindowsDefaultLanguage;\r\n  if FLingua <> 'Portugu\u00EAs(Brasil)' then\r\n  begin\r\n    itemLivros := CreateSubMenu(itemFormacao, 'Livros de Delphi (Compras)', 'imLivros', nil);\r\n    CreateSubMenu(itemLivros, 'Delphi para Android e iOS: Desenvolvendo Aplicativos M\u00F3veis', 'imLivrosDelphiAndroid', OnClickLivroDelphiAndroid);\r\n    CreateSubMenu(itemLivros, 'Object Pascal Para Delphi', 'imLivrosObjectPascal', OnClickLivroObjectPascal);\r\n  end\r\n  else\r\n  begin\r\n    itemLivros := CreateSubMenu(itemFormacao, 'Books Delphi (Buy)', 'imLivros', nil);\r\n    CreateSubMenu(itemLivros, 'Delphi for Android and iOS: Desenvolvendo Aplicativos M\u00F3veis', 'imLivrosDelphiAndroid', OnClickLivroDelphiAndroid);\r\n    CreateSubMenu(itemLivros, 'Object Pascal for Delphi', 'imLivrosObjectPascal', OnClickLivroObjectPascal);\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.MainMenu.Wizard_Linha36_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"     function GetWindowsDefaultLanguage: string;\r\n\r\n     procedure CreateMenu;\r\n\r\n     procedure OnClickNovoWizard(Sender: TObject);\r\n     procedure OnClickDocWiki(Sender: TObject);\r\n     //procedure OnClickLoja(Sender: TObject);\r\n     procedure OnClickMenuHistoryProjects(Sender: TObject);\r\n\r\n     {Vagas}\r\n     procedure OnClickVagasDelphi(Sender: TObject);\r\n\r\n     {Utilit\u00E1rios}\r\n     procedure OnClickSQLite(Sender: TObject);\r\n     procedure OnClickMySQL(Sender: TObject);\r\n     procedure OnClickForumDelphi(Sender: TObject);\r\n     procedure OnClickPostGres(Sender: TObject);\r\n     procedure OnClickPostman(Sender: TObject);\r\n     procedure OnClickChatGPT(Sender: TObject);\r\n     procedure OnClickAnalisarHints(Sender: TObject);\r\n     procedure OnClickIBExpert(Sender: TObject);\r\n     procedure OnClickSQLSErverManagerStudio(Sender: TObject);\r\n     procedure OnClickJSONtoDelphiClass(Sender: TObject);\r\n     procedure OnClickJSONFormater(Sender: TObject);\r\n     procedure OnClickIconFinder(Sender: TObject);\r\n     procedure OnClickIcons8(Sender: TObject);\r\n     procedure OnClickAcoplamentosUnits(Sender: TObject);\r\n     procedure OnClickimGetIt(Sender: TObject);\r\n\r\n\r\n     {Cursos}\r\n     procedure OnClickNutror(Sender: TOBject);\r\n     procedure OnClickNovoEAD(Sender: TObject);\r\n     procedure OnClickDevPoint(Sender: TObject);\r\n     procedure OnclickGitHubBozon(Sender: TObject);\r\n     procedure OnclickPostGresBozon(Sender: TObject);\r\n\r\n     {YouTube}\r\n     procedure OnClickEmbarcaderoBrasil(Sender: TObject);\r\n     procedure OnClickEmbarcadero(Sender: TObject);\r\n     procedure onClickYouTubeConectSolutions(Sender: Tobject);\r\n     procedure onClickVoiceEnabledApp(Sender: TObject);\r\n     procedure OnClickGitHubCurso(Sender: TObject);\r\n     procedure OnClickCursoApiREst(Sender: TObject);\r\n     procedure OnClickOpenToosAPI(Sender: TObject);\r\n     procedure OnClickBossSSH(Sender: TObject);\r\n     procedure OnClickDelphicon2023_day1(Sender: TObject);\r\n     procedure OnClickDelphicon2023_day2(Sender: TObject);\r\n     procedure OnClickDelphicon2023_day3(Sender: TObject);\r\n     procedure OnClickmqfb(Sender: TObject);\r\n     procedure OnClickChapmanWorld(Sender: TObject);\r\n\r\n     procedure OnClickOTA(Sender: TObject);\r\n     procedure OnclickDelphiBasics(Sender: TObject);\r\n\r\n     procedure OnClickHorseBasicAuth(Sender: TObject);\r\n     procedure OnClickHandleException(Sender: TObject);\r\n     procedure OnClickHorseJWT(Sender: TObject);\r\n\r\n     {Git Hubs}\r\n     procedure OnClickSynopseSynPDF(Sender: TObject);\r\n     procedure OnClickNewAudio(Sender: TObject);\r\n     procedure OnClickRedisClient(Sender: TObject);\r\n     procedure OnClickFireBase4Delphi(Sender: TObject);\r\n     procedure OnClickTurboPackVCL(Sender: TObject);\r\n     procedure OnClickFortesReportCE(Sender: TObject);\r\n     procedure OnClickDelphiJose(Sebder: TObject);\r\n     procedure OnClickXPAD(Sender: TObject);\r\n     procedure OnClickHorse(Sender: TObject);\r\n     procedure OnClickSimpleORM(Sender: TObject);\r\n     procedure OnClickHorseETag(Sender: TObject);\r\n     procedure OnClickDelphiMVCFrameWork(Sender: TObject);\r\n     procedure OnclickJEDIJCL(Sender: TObject);\r\n     procedure OnclickJEDIJVCL(Sender: TObject);\r\n     procedure OnclickJediInc(Sender: TObject);\r\n     procedure OnclickDelphiMessageBus(Sender: TObject);\r\n     procedure OnclickDelphiDocker(Sender: TObject);\r\n     procedure OnclickEmbarcaderoGitHub(Sender: TObject);\r\n     procedure OnclickChromiumGitHub(Sender: TObject);\r\n     procedure OnclickSkia4Delphi(Sender: TObject);\r\n     procedure OnclickUserControl(Sender: TObject);\r\n     procedure OnclickAeggys(Sender: TObject);\r\n\r\n     {Blogs}\r\n     procedure OnClickBlogConectSolutions(Sender: TObject);\r\n     procedure OnClickBlogAndreCelestino(Sender: TObject);\r\n     procedure OnClickBlogEmbarcadero(Sender: TObject);\r\n     procedure OnClickBlogMarcoCantu(Sender: TObject);\r\n     procedure OnClickBlogZettaOmmnis(Sender: TObject);\r\n     procedure OnClickBlogChapmanWorld(Sender: TObject);\r\n     procedure OnClickBlogRoadToDelphi(Sender: TObject);\r\n     procedure OnClickBlogLandgrafDev(Sender: TObject);\r\n     procedure OnClickBlogStephenBalls(Sender: TObject);\r\n     procedure OnClickBlogKonopka(Sender: TObject);\r\n     procedure OnClickBlogAndys(Sender: TObject);\r\n\r\n     {Ferramentas para Download}\r\n     procedure OnClickFerramentasIbExpert(Sender: TObject);\r\n     procedure OnClickFerramentasFirebird(Sender: TObject);\r\n     procedure OnClickFerramentasMySQL(Sender: TObject);\r\n     procedure OnClickFerramentasSQLiteExpert(Sender: TObject);\r\n     procedure OnClickFerramentasInnoSetup(Sender: TObject);\r\n     procedure OnClickFerramentasCNPack(Sender: TObject);\r\n     procedure OnClickFerramentasInnoScriptStudio(Sender: TObject);\r\n     procedure OnClickFerramentasInsomnia(Sender: TObject);\r\n     procedure OnClickFerramentasNavicat(Sender: TObject);\r\n     procedure OnClickFerramentasIdeFixPack(Sender: TObject);\r\n     procedure OnClickFerramentasToolsFree(Sender: TObject);\r\n     procedure OnClickFerramentasSiteGitIgnore(Sender: TObject);\r\n     procedure OnClickFerramentasSiteRegexLib(Sender: TObject);\r\n     procedure OnClickFerramentasGoogleMeeting(Sender: TObject);\r\n     procedure OnClickFaceBookVideo(Sender: TObject);\r\n     procedure OnClickLinkedinVideo(Sender: TObject);\r\n\r\n\r\n     {Grupos de Facebook}\r\n     procedure OnClickFacebookDelphiTips(Sender: TObject);\r\n     procedure OnClickFacebookLiteratudaDelphi(Sender: TObject);\r\n\r\n     {Livros}\r\n     procedure OnClickLivroDelphiAndroid(Sender: TObject);\r\n     procedure OnClickLivroObjectPascal(Sender: TObject);\r\n\r\n\r\n\r\n     function CreateSubMenu(AParent: TMenuItem;\r\n                            ACaption: String;\r\n                            AName: String;\r\n                            AOnClick: TNotifyEvent;\r\n                            AImageIndex: Integer = -1): TMenuItem;\r\n\r\n     procedure AddImageToImageList;\r\n     procedure OnClickYouTube(Sender: TObject);\r\n     procedure VoiceEnabledApp(Sender: TObject);\r\n\r\n\r\n\r\n  protected\r\n     function GetIDString: string;\r\n     function GetName: string;\r\n     function GetState: TWizardState;\r\n\r\n\r\n    { Launh the AddIn }\r\n    procedure Execute;\r\n\r\n  public\r\n\r\n  constructor create;\r\nend;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewFormMain.SourceFile_Linha115_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewFormMain.SourceFile_Linha50_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewFormMain.Source_Linha38_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Behaviors_Linha10_M\u00E9todomuitolongo.pas","smell":"Uso de with","linha":24,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Behaviors_Linha10_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure CreateUnitBehaviors(ProjectPath, NameSpace : string);\r\n\r\n\r\nimplementation\r\n\r\nprocedure CreateUnitBehaviors(ProjectPath, NameSpace : string);\r\nvar\r\n unitName: string;\r\n unitPath: string;\r\n unitFileName: string;\r\nbegin\r\n  unitPath := ProjectPath  + 'src\\Model\\Behaviors\\';\r\n  unitName := NameSpace + '.Model.Behaviors';\r\n  unitFileName := unitPath + unitName + '.pas';\r\n\r\n  ForceDirectories(unitPath);\r\n\r\n  with TStringList.Create do\r\n  try\r\n    Add('unit %0:s.Model.Behaviors;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t');\r\n    Add('                                                                                   ');\r\n    Add('interface                                                                          ');\r\n    Add('                                                                                   ');\r\n    Add('uses                                                                               ');\r\n    Add('  System.SysUtils,                                                                 ');\r\n    Add('  System.UITypes,                                                                  ');\r\n    Add('  Vcl.Dialogs,                                                                     ');\r\n    Add('  Vcl.Forms;                                                                       ');\r\n    Add('                                                                                   ');\r\n    Add('type T%0:sBehaviors = class                                                        ');\r\n    Add('                                                                                   ');\r\n    Add('  private                                                                          ');\r\n    Add('    procedure BehaviorException(Sender: TObject; E: Exception);                    ');\r\n    Add('                                                                                   ');\r\n    Add('  public                                                                           ');\r\n    Add('    constructor create;                                                            ');\r\n    Add('    destructor Destroy; override;                                                  ');\r\n    Add('end;                                                                               ');\r\n    Add('                                                                                   ');\r\n    Add('var                                                                                ');\r\n    Add('  ModelBehaviors : T%0:sBehaviors;                                                 ');\r\n    Add('                                                                                   ');\r\n    Add('implementation                                                                     ');\r\n    Add('                                                                                   ');\r\n    Add('{ T%0:sBehaviors }                                                                 ');\r\n    Add('                                                                                   ');\r\n    Add('procedure T%0:sBehaviors.BehaviorException(Sender: TObject; E: Exception);         ');\r\n    Add('begin                                                                              ');\r\n    Add('  MessageDlg(E.Message, mtWarning, [mbOK], 0);                                     ');\r\n    Add('end;                                                                               ');\r\n    Add('                                                                                   ');\r\n    Add('constructor T%0:sBehaviors.create;                                                 ');\r\n    Add('begin                                                                              ');\r\n    Add('  ReportMemoryLeaksOnShutdown := True;                                             ');\r\n    Add('  Application.OnException := BehaviorException;                                    ');\r\n    Add('end;                                                                               ');\r\n    Add('                                                                                   ');\r\n    Add('destructor T%0:sBehaviors.Destroy;                                                 ');\r\n    Add('begin                                                                              ');\r\n    Add('                                                                                   ');\r\n    Add('  inherited;                                                                       ');\r\n    Add('end;                                                                               ');\r\n    Add('                                                                                   ');\r\n    Add('initialization                                                                     ');\r\n    Add('  ModelBehaviors := T%0:sBehaviors.Create;                                         ');\r\n    Add('                                                                                   ');\r\n    Add('finalization                                                                       ');\r\n    Add('  ModelBehaviors.DisposeOf;                                                        ');\r\n    Add('                                                                                   ');\r\n    Add('end.                                                                               ');\r\n\r\n    Text := Format(Text, [Namespace, TGuid.NewGuid.ToString]);\r\n    SaveToFile(unitFileName);\r\n\r\n    GetActiveProject.AddFile(unitFileName, True);\r\n\r\n  finally\r\n    Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Behaviors_Linha27_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Component.ConnectionFiredac_Linha10_M\u00E9todomuitolongo.pas","smell":"Uso de with","linha":23,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Component.ConnectionFiredac_Linha10_M\u00E9todomuitolongo.pas","smell":"Uso de with","linha":151,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Component.ConnectionFiredac_Linha10_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure CreateUnitComponentConnectionFiredac(ProjectPath, Namespace: string);\r\n\r\nimplementation\r\n\r\nprocedure CreateUnitComponentConnectionFiredac(ProjectPath, Namespace: string);\r\nvar\r\n  unitName: string;\r\n  unitPath: string;\r\n  unitFileName: string;\r\nbegin\r\n  unitPath := ProjectPath + '\\src\\Model\\Components\\Connection\\';\r\n  unitName := NameSpace + '.Components.Connection.Firedac';\r\n  unitFileName := unitPath + unitName + '.pas';\r\n\r\n  ForceDirectories(unitPath);\r\n\r\n  with TStringList.Create do\r\n  try\r\n    Add('unit %0:s.Components.Connection.Firedac;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t');\r\n    Add('                                                                                                                                   ');\r\n    Add('interface                                                                                                                          ');\r\n    Add('                                                                                                                                   ');\r\n    Add('uses                                                                                                                               ');\r\n    Add('  %0:s.Components.Connection.Interfaces,                                                                                           ');\r\n    Add('  FireDAC.Stan.Intf,                                                                                                               ');\r\n    Add('  FireDAC.Stan.Option,                                                                                                             ');\r\n    Add('  FireDAC.Stan.Error,                                                                                                              ');\r\n    Add('  FireDAC.UI.Intf,                                                                                                                 ');\r\n    Add('  FireDAC.Phys.Intf,                                                                                                               ');\r\n    Add('  FireDAC.Stan.Def,                                                                                                                ');\r\n    Add('  FireDAC.Stan.Pool,                                                                                                               ');\r\n    Add('  FireDAC.Stan.Async,                                                                                                              ');\r\n    Add('  FireDAC.Phys,                                                                                                                    ');\r\n    Add('  FireDAC.Phys.SQLite,                                                                                                             ');\r\n    Add('  FireDAC.Phys.SQLiteDef,                                                                                                          ');\r\n    Add('  FireDAC.Stan.ExprFuncs,                                                                                                          ');\r\n    Add('  FireDAC.VCLUI.Wait,                                                                                                              ');\r\n    Add('  FireDAC.DApt,                                                                                                                    ');\r\n    Add('  Data.DB,                                                                                                                         ');\r\n    Add('  FireDAC.Comp.Client,                                                                                                             ');\r\n    Add('  FireDAC.Stan.Param,                                                                                                              ');\r\n    Add('  System.SysUtils,                                                                                                                 ');\r\n    Add('  System.Classes;                                                                                                                  ');\r\n    Add('                                                                                                                                   ');\r\n    Add('type T%0:sComponentsConnectionFiredac = class(TInterfacedObject, I%0:sComponentsConnection)                                       ');\r\n    Add('  private                                                                                                                          ');\r\n    Add('    FConnection : TFDConnection;                                                                                                   ');\r\n    Add('    FQuery : TFDQuery;                                                                                                             ');\r\n    Add('  public                                                                                                                           ');\r\n    Add('    constructor Create;                                                                                                            ');\r\n    Add('    destructor Destroy; override;                                                                                                  ');\r\n    Add('    class function New : I%0:sComponentsConnection;                                                                                ');\r\n    Add('    function Active ( aValue : Boolean ) : I%0:sComponentsConnection;                                                              ');\r\n    Add('    function AddParam ( aParam : String; aValue : Variant ) : I%0:sComponentsConnection; overload;                                 ');\r\n    Add('    function AddParam ( aParam : String; aValue : TPersistent ) : I%0:sComponentsConnection; overload;                             ');\r\n    Add('    function DataSet : TDataSet;                                                                                                   ');\r\n    Add('    function ExecSQL : I%0:sComponentsConnection;                                                                                  ');\r\n    Add('    function Open : I%0:sComponentsConnection;                                                                                     ');\r\n    Add('    function SQL ( aValue : String ) : I%0:sComponentsConnection;                                                                  ');\r\n    Add('    function SQLClear : I%0:sComponentsConnection;                                                                                 ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('implementation                                                                                                                     ');\r\n    Add('                                                                                                                                   ');\r\n    Add('{ T%0:sComponentsConnectionFiredac }                                                                                              ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.Active(aValue: Boolean): I%0:sComponentsConnection;                                     ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.Active := aValue;                                                                                                         ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.AddParam(aParam: String; aValue: Variant): I%0:sComponentsConnection;                   ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.ParamByName(aParam).Value := aValue;                                                                                      ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.AddParam(aParam: String; aValue: TPersistent): I%0:sComponentsConnection;               ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.ParamByName(aParam).Assign(aValue);                                                                                       ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('constructor T%0:sComponentsConnectionFiredac.Create;                                                                              ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  FConnection := TFDConnection.Create(nil);                                                                                        ');\r\n    Add('  FQuery := TFDQuery.Create(nil);                                                                                                  ');\r\n    Add('  FQuery.Connection := FConnection;                                                                                                ');\r\n    Add('  FConnection.Params.DriverID := ''SQLite'';                                                                                         ');\r\n    Add('  FConnection.Params.Database := ExtractFilePath(GetModuleName(HInstance)) + ''%0:s.db3'';                                           ');\r\n    Add('  FConnection.Params.Add(''LockingMode=Normal'');                                                                                    ');\r\n    Add('  FConnection.Connected;                                                                                                           ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.DataSet: TDataSet;                                                                      ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := FQuery;                                                                                                                ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('destructor T%0:sComponentsConnectionFiredac.Destroy;                                                                              ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  FQuery.DisposeOf;                                                                                                                ');\r\n    Add('  FConnection.DisposeOf;                                                                                                           ');\r\n    Add('  inherited;                                                                                                                       ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.ExecSQL: I%0:sComponentsConnection;                                                     ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.ExecSQL;                                                                                                                  ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('class function T%0:sComponentsConnectionFiredac.New: I%0:sComponentsConnection;                                                   ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self.Create;                                                                                                           ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.Open: I%0:sComponentsConnection;                                                        ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.Open;                                                                                                                     ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.SQL(aValue: String): I%0:sComponentsConnection;                                         ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.SQL.Add(aValue);                                                                                                          ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.SQLClear: I%0:sComponentsConnection;                                                    ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.SQL.Clear;                                                                                                                ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('end.                                                                                                                               ');\r\n\r\n    Text := Format(Text, [Namespace]);\r\n    SaveToFile(unitFileName);\r\n\r\n    GetActiveProject.AddFile(unitFileName, True);\r\n\r\n    // Criar Arquivo de Banco SQLite\r\n    with TStringList.Create do\r\n    try\r\n      SaveToFile(ProjectPath + Namespace + '.db3');\r\n    finally\r\n      Free;\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Component.ConnectionFiredac_Linha154_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Component.ConnectionFiredac_Linha26_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Component.ConnectionInterfaces_Linha10_M\u00E9todomuitolongo.pas","smell":"Vari\u00E1vel global","linha":13,"trecho":"var"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Component.ConnectionInterfaces_Linha10_M\u00E9todomuitolongo.pas","smell":"Uso de with","linha":24,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Component.ConnectionInterfaces_Linha10_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure CreateUnitComponentConnectionInterfaces(ProjectPath, NameSpace: string);\r\n\r\nimplementation\r\n\r\n\r\nprocedure CreateUnitComponentConnectionInterfaces(ProjectPath, NameSpace: string);\r\nvar\r\n  unitName: string;\r\n  unitPath: string;\r\n  unitFileName: string;\r\nbegin\r\n   unitPath := ProjectPath + '\\src\\Model\\Components\\Connection\\';\r\n   unitName := NameSpace + '.Components.Connection.Interfaces';\r\n   unitFileName := unitPath + unitName + '.pas';\r\n\r\n   ForceDirectories(unitPath);\r\n\r\n   with TStringList.Create do\r\n  try\r\n    Add('unit %0:s.Components.Connection.Interfaces;');\r\n    Add('');\r\n    Add('interface');\r\n    Add('');\r\n    Add('uses');\r\n    Add('  Data.DB, ');\r\n    Add('  System.SysUtils,');\r\n    Add('  System.Classes;');\r\n    Add('');\r\n    Add('type');\r\n    Add('  I%0:sComponentsConnection = interface');\r\n    Add('    [''%1:s'']');\r\n    Add('    function Active ( aValue : Boolean ) : IEstoqueComponentsConnection;');\r\n    Add('    function AddParam ( aParam : String; aValue : Variant ) : IEstoqueComponentsConnection; overload;');\r\n    Add('    function AddParam ( aParam : String; aValue : TPersistent ) : IEstoqueComponentsConnection; overload;');\r\n    Add('    function DataSet : TDataSet;');\r\n    Add('    function ExecSQL : IEstoqueComponentsConnection;');\r\n    Add('    function Open : IEstoqueComponentsConnection;');\r\n    Add('    function SQL ( aValue : String ) : IEstoqueComponentsConnection;');\r\n    Add('    function SQLClear : IEstoqueComponentsConnection;');\r\n    Add('  end;');\r\n    Add('');\r\n    Add('implementation');\r\n    Add('');\r\n    Add('end.');\r\n\r\n    Text := Format(Text, [Namespace, TGuid.NewGuid.ToString]);\r\n    SaveToFile(unitFileName);\r\n\r\n    GetActiveProject.AddFile(unitFileName, True);\r\n\r\n  finally\r\n    Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\FSD.NewProject.NewUnit.Component.ConnectionInterfaces_Linha27_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Funcoes.CNPJCPF_Linha22_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"function TCNPJCPF.ValidarCNPJ(const CNPJ: string): Boolean;\r\nvar\r\n  Digito, Soma, i, j: Integer;\r\n  CNPJCalc: string;\r\n  Multiplicador: array[1..14] of Integer;\r\nbegin\r\n  Result := False;\r\n\r\n  // Remove caracteres n\u00E3o num\u00E9ricos do CNPJ\r\n  CNPJCalc := '';\r\n  for i := 1 to Length(CNPJ) do\r\n    if CharInSet(CNPJ[i], ['0'..'9']) then\r\n      CNPJCalc := CNPJCalc + CNPJ[i];\r\n\r\n  // Verifica se o CNPJ possui 14 d\u00EDgitos\r\n  if Length(CNPJCalc) <> 14 then\r\n    Exit;\r\n\r\n  // Verifica se todos os d\u00EDgitos s\u00E3o iguais\r\n  if (CNPJCalc = '00000000000000') or (CNPJCalc = '11111111111111') or\r\n    (CNPJCalc = '22222222222222') or (CNPJCalc = '33333333333333') or\r\n    (CNPJCalc = '44444444444444') or (CNPJCalc = '55555555555555') or\r\n    (CNPJCalc = '66666666666666') or (CNPJCalc = '77777777777777') or\r\n    (CNPJCalc = '88888888888888') or (CNPJCalc = '99999999999999') then\r\n    Exit;\r\n\r\n  // Calcula o primeiro d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 5;\r\n  Multiplicador[2] := 4;\r\n  Multiplicador[3] := 3;\r\n  Multiplicador[4] := 2;\r\n  Multiplicador[5] := 9;\r\n  Multiplicador[6] := 8;\r\n  Multiplicador[7] := 7;\r\n  Multiplicador[8] := 6;\r\n  Multiplicador[9] := 5;\r\n  Multiplicador[10] := 4;\r\n  Multiplicador[11] := 3;\r\n  Multiplicador[12] := 2;\r\n  for i := 1 to 12 do\r\n    Soma := Soma + (StrToInt(CNPJCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CNPJCalc[13]) then\r\n    Exit;\r\n\r\n  // Calcula o segundo d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 6;\r\n  Multiplicador[2] := 5;\r\n  Multiplicador[3] := 4;\r\n  Multiplicador[4] := 3;\r\n  Multiplicador[5] := 2;\r\n  Multiplicador[6] := 9;\r\n  Multiplicador[7] := 8;\r\n  Multiplicador[8] := 7;\r\n  Multiplicador[9] := 6;\r\n  Multiplicador[10] := 5;\r\n  Multiplicador[11] := 4;\r\n  Multiplicador[12] := 3;\r\n  Multiplicador[13] := 2;\r\n  for i := 1 to 13 do\r\n    Soma := Soma + (StrToInt(CNPJCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CNPJCalc[14]) then\r\n    Exit;\r\n\r\n  Result := True;\r\n\r\nend;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Funcoes.CNPJCPF_Linha97_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"function TCNPJCPF.ValidarCPF(const CPF: string): Boolean;\r\nvar\r\n  Digito, Soma, i, j: Integer;\r\n  CPFCalc: string;\r\n  Multiplicador: array[1..11] of Integer;\r\nbegin\r\n  Result := False;\r\n\r\n  // Remove caracteres n\u00E3o num\u00E9ricos do CPF\r\n  CPFCalc := '';\r\n  for i := 1 to Length(CPF) do\r\n    if CharInSet(CPF[i], ['0'..'9']) then\r\n      CPFCalc := CPFCalc + CPF[i];\r\n\r\n  // Verifica se o CPF possui 11 d\u00EDgitos\r\n  if Length(CPFCalc) <> 11 then\r\n    Exit;\r\n\r\n  // Verifica se todos os d\u00EDgitos s\u00E3o iguais\r\n  if (CPFCalc = '00000000000') or (CPFCalc = '11111111111') or\r\n    (CPFCalc = '22222222222') or (CPFCalc = '33333333333') or\r\n    (CPFCalc = '44444444444') or (CPFCalc = '55555555555') or\r\n    (CPFCalc = '66666666666') or (CPFCalc = '77777777777') or\r\n    (CPFCalc = '88888888888') or (CPFCalc = '99999999999') then\r\n    Exit;\r\n\r\n  // Calcula o primeiro d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 10;\r\n  Multiplicador[2] := 9;\r\n  Multiplicador[3] := 8;\r\n  Multiplicador[4] := 7;\r\n  Multiplicador[5] := 6;\r\n  Multiplicador[6] := 5;\r\n  Multiplicador[7] := 4;\r\n  Multiplicador[8] := 3;\r\n  Multiplicador[9] := 2;\r\n  for i := 1 to 9 do\r\n    Soma := Soma + (StrToInt(CPFCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CPFCalc[10]) then\r\n    Exit;\r\n\r\n  // Calcula o segundo d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 11;\r\n  Multiplicador[2] := 10;\r\n  Multiplicador[3] := 9;\r\n  Multiplicador[4] := 8;\r\n  Multiplicador[5] := 7;\r\n  Multiplicador[6] := 6;\r\n  Multiplicador[7] := 5;\r\n  Multiplicador[8] := 4;\r\n  Multiplicador[9] := 3;\r\n  Multiplicador[10] := 2;\r\n  for i := 1 to 10 do\r\n    Soma := Soma + (StrToInt(CPFCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CPFCalc[11]) then\r\n    Exit;\r\n\r\n  Result := True;\r\n\r\nend;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Funcoes.EnviarEmail_Linha68_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"      procedure Setativo(const Value: string);\r\n      procedure Setbairro(const Value: string);\r\n      procedure SetCEP(const Value: string);\r\n      procedure Setcidade(const Value: string);\r\n      procedure Setcnpj(const Value: string);\r\n      procedure Setcomplemento(const Value: string);\r\n      procedure Setcontato(const Value: string);\r\n      procedure SetContraSenha(const Value: String);\r\n      procedure SetData_exp(const Value: TDateTime);\r\n      procedure Setdataregistro(const Value: TDatetime);\r\n      procedure Setemail(const Value: string);\r\n      procedure Setendereco(const Value: string);\r\n      procedure Setid_chave(const Value: string);\r\n      procedure Setie(const Value: string);\r\n      procedure Setim(const Value: string);\r\n      procedure SetLinguagem(const Value: string);\r\n      procedure Setnumero(const Value: integer);\r\n      procedure Setrazao(const Value: string);\r\n      procedure Setresponsavel(const Value: string);\r\n      procedure Setserial(const Value: string);\r\n      procedure Setserialhd(const Value: string);\r\n      procedure Settelcontato(const Value: string);\r\n      procedure Settelefone(const Value: string);\r\n      procedure Setuf(const Value: string);\r\n\r\n    public\r\n       property razao       : string read Frazao write Setrazao;\r\n       property cnpj        : string read Fcnpj write Setcnpj;\r\n       property ie          : string read Fie write Setie;\r\n       property im          : string read Fim write Setim;\r\n       property endereco    : string read Fendereco write Setendereco;\r\n       property numero      : integer read Fnumero write Setnumero;\r\n       property complemento : string read Fcomplemento write Setcomplemento;\r\n       property bairro      : string read Fbairro write Setbairro;\r\n       property cidade      : string read Fcidade write Setcidade;\r\n       property uf          : string read Fuf write Setuf;\r\n       property CEP         : string read FCEP write SetCEP;\r\n       property ativo       : string read Fativo write Setativo;\r\n       property responsavel : string read Fresponsavel write Setresponsavel;\r\n       property contato     : string read Fcontato write Setcontato;\r\n       property telcontato  : string read Ftelcontato write Settelcontato;\r\n       property telefone    : string read Ftelefone write Settelefone;\r\n       property email       : string read Femail write Setemail;\r\n       property dataregistro: TDatetime read Fdataregistro write Setdataregistro;\r\n       property Linguagem   : string read FLinguagem write SetLinguagem;\r\n       property serial      : string read Fserial write Setserial;\r\n       property serialhd    : string read Fserialhd write Setserialhd;\r\n       property ContraSenha : String read FContraSenha write SetContraSenha;\r\n       property Data_exp    : TDateTime read FData_exp write SetData_exp;\r\n       property id_chave    : string read Fid_chave write Setid_chave;\r\n       function enviarPedido(aEmail: String): Boolean;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Funcoes.EnviarPedido_Linha74_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    procedure SetidCliente(const Value: Integer);\r\n    procedure SetStatusPedido(const Value: Integer);\r\n    procedure SetTotalPedido(const Value: currency);\r\n    procedure Setbairro(const Value: string);\r\n    procedure SetCEP(const Value: string);\r\n    procedure Setcidade(const Value: string);\r\n    procedure Setcnpj(const Value: string);\r\n    procedure Setcomplemento(const Value: string);\r\n    procedure Setcontato(const Value: string);\r\n    procedure Setemail(const Value: string);\r\n    procedure Setendereco(const Value: string);\r\n    procedure Setie(const Value: string);\r\n    procedure Setim(const Value: string);\r\n    procedure Setnumero(const Value: integer);\r\n    procedure Setrazao(const Value: string);\r\n    procedure Setresponsavel(const Value: string);\r\n    procedure Settelcontato(const Value: string);\r\n    procedure Settelefone(const Value: string);\r\n    procedure Setuf(const Value: string);\r\n    procedure SetidPedido(const Value: Integer);\r\n    procedure SetidProduto(const Value: Integer);\r\n    procedure SetPrecoUnitario(const Value: Currency);\r\n    procedure SetQuantidade(const Value: Integer);\r\n    procedure SetTotaldoItem(const Value: Currency);\r\n    procedure SetCelularContato(const Value: String);\r\n    procedure SetEmailContato(const Value: String);\r\n    procedure SetNomeContato(const Value: String);\r\n    procedure SetTelefoneConteto(const Value: String);\r\n    procedure SetLinguagem(const Value: string);\r\n\r\n    public\r\n      //Dados do Pedido\r\n      property IdPedido: Integer read FIdPedido write SetIdPedido;\r\n      property idCliente: Integer read FidCliente write SetidCliente;\r\n      property StatusPedido: Integer read FStatusPedido write SetStatusPedido;\r\n      property TotalPedido: currency read FTotalPedido write SetTotalPedido;\r\n\r\n      //Itens do Pedido\r\n      property idProduto: Integer read FidProduto write SetidProduto;\r\n      property Quantidade: Integer read FQuantidade write SetQuantidade;\r\n      property PrecoUnitario: Currency read FPrecoUnitario write SetPrecoUnitario;\r\n      property TotaldoItem: Currency read FTotaldoItem write SetTotaldoItem;\r\n\r\n      //Dados do cliente\r\n       property razao       : string read Frazao write Setrazao;\r\n       property cnpj        : string read Fcnpj write Setcnpj;\r\n       property ie          : string read Fie write Setie;\r\n       property im          : string read Fim write Setim;\r\n       property endereco    : string read Fendereco write Setendereco;\r\n       property numero      : integer read Fnumero write Setnumero;\r\n       property complemento : string read Fcomplemento write Setcomplemento;\r\n       property bairro      : string read Fbairro write Setbairro;\r\n       property cidade      : string read Fcidade write Setcidade;\r\n       property uf          : string read Fuf write Setuf;\r\n       property CEP         : string read FCEP write SetCEP;\r\n       property responsavel : string read Fresponsavel write Setresponsavel;\r\n       property contato     : string read Fcontato write Setcontato;\r\n       property telcontato  : string read Ftelcontato write Settelcontato;\r\n       property telefone    : string read Ftelefone write Settelefone;\r\n       property email       : string read Femail write Setemail;\r\n       property NomeContato: String read FNomeContato write SetNomeContato;\r\n       property TelefoneConteto: String read FTelefoneConteto write SetTelefoneConteto;\r\n       property CelularContato: String read FCelularContato write SetCelularContato;\r\n       property EmailContato: String read FEmailContato write SetEmailContato;\r\n       property Linguagem   : string read FLinguagem write SetLinguagem;\r\n\r\n      function enviarPedido(aEmail: String): Boolean;\r\n      procedure PrencherDadosDoPedido(aidcliente: Integer;aStatusPedido:Integer;aTotalPedido: Currency);\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Horse.Core_Linha49_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    class function TrimPath(const APath: string): string;\r\n    class function RegisterRoute(const AHTTPType: TMethodType; const APath: string; const ACallback: THorseCallback): THorseCore;\r\n    class var FDefaultHorse: THorseCore;\r\n\r\n    function InternalRoute(const APath: string): IHorseCoreRoute<THorseCore>;\r\n    function InternalGroup: IHorseCoreGroup<THorseCore>;\r\n    function InternalGetRoutes: THorseRouterTree;\r\n    procedure InternalSetRoutes(const AValue: THorseRouterTree);\r\n    class function GetRoutes: THorseRouterTree; static;\r\n    class procedure SetRoutes(const AValue: THorseRouterTree); static;\r\n    class function MakeHorseModule: THorseModule;\r\n\r\n    class function GetCallback(const ACallbackRequest: THorseCallbackRequestResponse): THorseCallback; overload;\r\n    class function GetCallback(const ACallbackRequest: THorseCallbackRequest): THorseCallback; overload;\r\n{$IFNDEF FPC}\r\n    class function GetCallback(const ACallbackResponse: THorseCallbackResponse): THorseCallback; overload;\r\n{$ENDIF}\r\n    class function GetCallbacks: TArray<THorseCallback>;\r\n    class function RegisterCallbacksRoute(const AMethod: TMethodType; const APath: string): THorseCore;\r\n  public\r\n    constructor Create; virtual;\r\n    class function ToModule: THorseModule;\r\n    class destructor UnInitialize; {$IFNDEF FPC}virtual; {$ENDIF}\r\n    class function AddCallback(const ACallback: THorseCallback): THorseCore;\r\n    class function AddCallbacks(const ACallbacks: TArray<THorseCallback>): THorseCore;\r\n\r\n    class function Group: IHorseCoreGroup<THorseCore>;\r\n    class function Route(const APath: string): IHorseCoreRoute<THorseCore>;\r\n\r\n    class function Use(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Use(const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Use(const APath: string; const ACallbacks: array of THorseCallback): THorseCore; overload;\r\n    class function Use(const ACallbacks: array of THorseCallback): THorseCore; overload;\r\n\r\n    class function All(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function All(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function All(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function All(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n    class function Get(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Get(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Get(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Get(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n    class function Put(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Put(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Put(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Put(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n{$IF (DEFINED(FPC) or (CompilerVersion > 27.0))}\r\n    class function Patch(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Patch(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Patch(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Patch(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n{$IFEND}\r\n    class function Head(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Head(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Head(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Head(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n    class function Post(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Post(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Post(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Post(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n{$IF (defined(fpc) or (CompilerVersion > 27.0))}\r\n    class function Delete(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Delete(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Delete(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Delete(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n{$IFEND}\r\n    class property Routes: THorseRouterTree read GetRoutes write SetRoutes;\r\n    class function GetInstance: THorseCore;\r\n    class function Version: string;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Horse.Mime_Linha153_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure THorseMimeTypesExt.InitializeFileType;\r\nbegin\r\n  {$REGION 'MIME CONST'}\r\n  FFileType.AddOrSetValue('ez', 'application/andrew-inset');\r\n  FFileType.AddOrSetValue('aw', 'application/applixware');\r\n  FFileType.AddOrSetValue('atom', 'application/atom+xml');\r\n  FFileType.AddOrSetValue('atomcat', 'application/atomcat+xml');\r\n  FFileType.AddOrSetValue('atomsvc', 'application/atomsvc+xml');\r\n  FFileType.AddOrSetValue('bson', 'application/bson');\r\n  FFileType.AddOrSetValue('ccxml', 'application/ccxml+xml');\r\n  FFileType.AddOrSetValue('cdmia', 'application/cdmi-capability');\r\n  FFileType.AddOrSetValue('cdmic', 'application/cdmi-container');\r\n  FFileType.AddOrSetValue('cdmid', 'application/cdmi-domain');\r\n  FFileType.AddOrSetValue('cdmio', 'application/cdmi-object');\r\n  FFileType.AddOrSetValue('cdmiq', 'application/cdmi-queue');\r\n  FFileType.AddOrSetValue('cu', 'application/cu-seeme');\r\n  FFileType.AddOrSetValue('davmount', 'application/davmount+xml');\r\n  FFileType.AddOrSetValue('dbk', 'application/docbook+xml');\r\n  FFileType.AddOrSetValue('dssc', 'application/dssc+der');\r\n  FFileType.AddOrSetValue('xdssc', 'application/dssc+xml');\r\n  FFileType.AddOrSetValue('ecma', 'application/ecmascript');\r\n  FFileType.AddOrSetValue('emma', 'application/emma+xml');\r\n  FFileType.AddOrSetValue('epub', 'application/epub+zip');\r\n  FFileType.AddOrSetValue('exi', 'application/exi');\r\n  FFileType.AddOrSetValue('pfr', 'application/font-tdpfr');\r\n  FFileType.AddOrSetValue('gml', 'application/gml+xml');\r\n  FFileType.AddOrSetValue('gpx', 'application/gpx+xml');\r\n  FFileType.AddOrSetValue('gxf', 'application/gxf');\r\n  FFileType.AddOrSetValue('stk', 'application/hyperstudio');\r\n  FFileType.AddOrSetValue('ink', 'application/inkml+xml');\r\n  FFileType.AddOrSetValue('inkml', 'application/inkml+xml');\r\n  FFileType.AddOrSetValue('ipfix', 'application/ipfix');\r\n  FFileType.AddOrSetValue('jar', 'application/java-archive');\r\n  FFileType.AddOrSetValue('ser', 'application/java-serialized-object');\r\n  FFileType.AddOrSetValue('class', 'application/java-vm');\r\n  FFileType.AddOrSetValue('js', 'application/javascript');\r\n  FFileType.AddOrSetValue('json', 'application/json');\r\n  FFileType.AddOrSetValue('map', 'application/json');\r\n  FFileType.AddOrSetValue('jsonml', 'application/jsonml+json');\r\n  FFileType.AddOrSetValue('lostxml', 'application/lost+xml');\r\n  FFileType.AddOrSetValue('hqx', 'application/mac-binhex40');\r\n  FFileType.AddOrSetValue('cpt', 'application/mac-compactpro');\r\n  FFileType.AddOrSetValue('mads', 'application/mads+xml');\r\n  FFileType.AddOrSetValue('mrc', 'application/marc');\r\n  FFileType.AddOrSetValue('mrcx', 'application/marcxml+xml');\r\n  FFileType.AddOrSetValue('ma', 'application/mathematica');\r\n  FFileType.AddOrSetValue('nb', 'application/mathematica');\r\n  FFileType.AddOrSetValue('mb', 'application/mathematica');\r\n  FFileType.AddOrSetValue('mathml', 'application/mathml+xml');\r\n  FFileType.AddOrSetValue('mbox', 'application/mbox');\r\n  FFileType.AddOrSetValue('mscml', 'application/mediaservercontrol+xml');\r\n  FFileType.AddOrSetValue('metalink', 'application/metalink+xml');\r\n  FFileType.AddOrSetValue('meta4', 'application/metalink4+xml');\r\n  FFileType.AddOrSetValue('mets', 'application/mets+xml');\r\n  FFileType.AddOrSetValue('mods', 'application/mods+xml');\r\n  FFileType.AddOrSetValue('m21', 'application/mp21');\r\n  FFileType.AddOrSetValue('mp21', 'application/mp21');\r\n  FFileType.AddOrSetValue('mp4s', 'application/mp4');\r\n  FFileType.AddOrSetValue('doc', 'application/msword');\r\n  FFileType.AddOrSetValue('dot', 'application/msword');\r\n  FFileType.AddOrSetValue('mxf', 'application/mxf');\r\n  FFileType.AddOrSetValue('bin', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('bpk', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('class', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('deploy', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('dist', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('distz', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('dmg', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('dms', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('dump', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('elc', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('iso', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('lha', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('lrf', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('lzh', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('mar', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('pkg', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('so', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('oda', 'application/oda');\r\n  FFileType.AddOrSetValue('opf', 'application/oebps-package+xml');\r\n  FFileType.AddOrSetValue('ogx', 'application/ogg');\r\n  FFileType.AddOrSetValue('omdoc', 'application/omdoc+xml');\r\n  FFileType.AddOrSetValue('onetoc', 'application/onenote');\r\n  FFileType.AddOrSetValue('onetoc2', 'application/onenote');\r\n  FFileType.AddOrSetValue('onetmp', 'application/onenote');\r\n  FFileType.AddOrSetValue('onepkg', 'application/onenote');\r\n  FFileType.AddOrSetValue('oxps', 'application/oxps');\r\n  FFileType.AddOrSetValue('xer', 'application/patch-ops-error+xml');\r\n  FFileType.AddOrSetValue('pdf', 'application/pdf');\r\n  FFileType.AddOrSetValue('pgp', 'application/pgp-encrypted');\r\n  FFileType.AddOrSetValue('asc', 'application/pgp-signature');\r\n  FFileType.AddOrSetValue('sig', 'application/pgp-signature');\r\n  FFileType.AddOrSetValue('prf', 'application/pics-rules');\r\n  FFileType.AddOrSetValue('p10', 'application/pkcs10');\r\n  FFileType.AddOrSetValue('p7m', 'application/pkcs7-mime');\r\n  FFileType.AddOrSetValue('p7c', 'application/pkcs7-mime');\r\n  FFileType.AddOrSetValue('p7s', 'application/pkcs7-signature');\r\n  FFileType.AddOrSetValue('p8', 'application/pkcs8');\r\n  FFileType.AddOrSetValue('ac', 'application/pkix-attr-cert');\r\n  FFileType.AddOrSetValue('cer', 'application/pkix-cert');\r\n  FFileType.AddOrSetValue('crl', 'application/pkix-crl');\r\n  FFileType.AddOrSetValue('pkipath', 'application/pkix-pkipath');\r\n  FFileType.AddOrSetValue('pki', 'application/pkixcmp');\r\n  FFileType.AddOrSetValue('pls', 'application/pls+xml');\r\n  FFileType.AddOrSetValue('ai', 'application/postscript');\r\n  FFileType.AddOrSetValue('eps', 'application/postscript');\r\n  FFileType.AddOrSetValue('ps', 'application/postscript');\r\n  FFileType.AddOrSetValue('cww', 'application/prs.cww');\r\n  FFileType.AddOrSetValue('pskcxml', 'application/pskc+xml');\r\n  FFileType.AddOrSetValue('rdf', 'application/rdf+xml');\r\n  FFileType.AddOrSetValue('rif', 'application/reginfo+xml');\r\n  FFileType.AddOrSetValue('rnc', 'application/relax-ng-compact-syntax');\r\n  FFileType.AddOrSetValue('rl', 'application/resource-lists+xml');\r\n  FFileType.AddOrSetValue('rld', 'application/resource-lists-diff+xml');\r\n  FFileType.AddOrSetValue('rs', 'application/rls-services+xml');\r\n  FFileType.AddOrSetValue('gbr', 'application/rpki-ghostbusters');\r\n  FFileType.AddOrSetValue('mft', 'application/rpki-manifest');\r\n  FFileType.AddOrSetValue('roa', 'application/rpki-roa');\r\n  FFileType.AddOrSetValue('rsd', 'application/rsd+xml');\r\n  FFileType.AddOrSetValue('rss', 'application/rss+xml');\r\n  FFileType.AddOrSetValue('rtf', 'application/rtf');\r\n  FFileType.AddOrSetValue('sbml', 'application/sbml+xml');\r\n  FFileType.AddOrSetValue('scq', 'application/scvp-cv-request');\r\n  FFileType.AddOrSetValue('scs', 'application/scvp-cv-response');\r\n  FFileType.AddOrSetValue('spq', 'application/scvp-vp-request');\r\n  FFileType.AddOrSetValue('spp', 'application/scvp-vp-response');\r\n  FFileType.AddOrSetValue('sdp', 'application/sdp');\r\n  FFileType.AddOrSetValue('setpay', 'application/set-payment-initiation');\r\n  FFileType.AddOrSetValue('setreg', 'application/set-registration-initiation');\r\n  FFileType.AddOrSetValue('shf', 'application/shf+xml');\r\n  FFileType.AddOrSetValue('smi', 'application/smil+xml');\r\n  FFileType.AddOrSetValue('smil', 'application/smil+xml');\r\n  FFileType.AddOrSetValue('soap', 'application/soap+xml');\r\n  FFileType.AddOrSetValue('rq', 'application/sparql-query');\r\n  FFileType.AddOrSetValue('srx', 'application/sparql-results+xml');\r\n  FFileType.AddOrSetValue('gram', 'application/srgs');\r\n  FFileType.AddOrSetValue('grxml', 'application/srgs+xml');\r\n  FFileType.AddOrSetValue('sru', 'application/sru+xml');\r\n  FFileType.AddOrSetValue('ssdl', 'application/ssdl+xml');\r\n  FFileType.AddOrSetValue('ssml', 'application/ssml+xml');\r\n  FFileType.AddOrSetValue('tei', 'application/tei+xml');\r\n  FFileType.AddOrSetValue('teicorpus', 'application/tei+xml');\r\n  FFileType.AddOrSetValue('tfi', 'application/thraud+xml');\r\n  FFileType.AddOrSetValue('tsd', 'application/timestamped-data');\r\n  FFileType.AddOrSetValue('plb', 'application/vnd.3gpp.pic-bw-large');\r\n  FFileType.AddOrSetValue('psb', 'application/vnd.3gpp.pic-bw-small');\r\n  FFileType.AddOrSetValue('pvb', 'application/vnd.3gpp.pic-bw-var');\r\n  FFileType.AddOrSetValue('tcap', 'application/vnd.3gpp2.tcap');\r\n  FFileType.AddOrSetValue('pwn', 'application/vnd.3m.post-it-notes');\r\n  FFileType.AddOrSetValue('aso', 'application/vnd.accpac.simply.aso');\r\n  FFileType.AddOrSetValue('imp', 'application/vnd.accpac.simply.imp');\r\n  FFileType.AddOrSetValue('acu', 'application/vnd.acucobol');\r\n  FFileType.AddOrSetValue('atc', 'application/vnd.acucorp');\r\n  FFileType.AddOrSetValue('acutc', 'application/vnd.acucorp');\r\n  FFileType.AddOrSetValue('air', 'application/vnd.adobe.air-application-installer-package+zip');\r\n  FFileType.AddOrSetValue('fcdt', 'application/vnd.adobe.formscentral.fcdt');\r\n  FFileType.AddOrSetValue('fxp', 'application/vnd.adobe.fxp');\r\n  FFileType.AddOrSetValue('fxpl', 'application/vnd.adobe.fxp');\r\n  FFileType.AddOrSetValue('xdp', 'application/vnd.adobe.xdp+xml');\r\n  FFileType.AddOrSetValue('xfdf', 'application/vnd.adobe.xfdf');\r\n  FFileType.AddOrSetValue('ahead', 'application/vnd.ahead.space');\r\n  FFileType.AddOrSetValue('azf', 'application/vnd.airzip.filesecure.azf');\r\n  FFileType.AddOrSetValue('azs', 'application/vnd.airzip.filesecure.azs');\r\n  FFileType.AddOrSetValue('azw', 'application/vnd.amazon.ebook');\r\n  FFileType.AddOrSetValue('acc', 'application/vnd.americandynamics.acc');\r\n  FFileType.AddOrSetValue('ami', 'application/vnd.amiga.ami');\r\n  FFileType.AddOrSetValue('apk', 'application/vnd.android.package-archive');\r\n  FFileType.AddOrSetValue('cii', 'application/vnd.anser-web-certificate-issue-initiation');\r\n  FFileType.AddOrSetValue('fti', 'application/vnd.anser-web-funds-transfer-initiation');\r\n  FFileType.AddOrSetValue('atx', 'application/vnd.antix.game-component');\r\n  FFileType.AddOrSetValue('mpkg', 'application/vnd.apple.installer+xml');\r\n  FFileType.AddOrSetValue('m3u8', 'application/vnd.apple.mpegurl');\r\n  FFileType.AddOrSetValue('swi', 'application/vnd.aristanetworks.swi');\r\n  FFileType.AddOrSetValue('iota', 'application/vnd.astraea-software.iota');\r\n  FFileType.AddOrSetValue('aep', 'application/vnd.audiograph');\r\n  FFileType.AddOrSetValue('mpm', 'application/vnd.blueice.multipass');\r\n  FFileType.AddOrSetValue('bmi', 'application/vnd.bmi');\r\n  FFileType.AddOrSetValue('rep', 'application/vnd.businessobjects');\r\n  FFileType.AddOrSetValue('cdxml', 'application/vnd.chemdraw+xml');\r\n  FFileType.AddOrSetValue('mmd', 'application/vnd.chipnuts.karaoke-mmd');\r\n  FFileType.AddOrSetValue('cdy', 'application/vnd.cinderella');\r\n  FFileType.AddOrSetValue('cla', 'application/vnd.claymore');\r\n  FFileType.AddOrSetValue('rp9', 'application/vnd.cloanto.rp9');\r\n  FFileType.AddOrSetValue('c4g', 'application/vnd.clonk.c4group');\r\n  FFileType.AddOrSetValue('c4d', 'application/vnd.clonk.c4group');\r\n  FFileType.AddOrSetValue('c4f', 'application/vnd.clonk.c4group');\r\n  FFileType.AddOrSetValue('c4p', 'application/vnd.clonk.c4group');\r\n  FFileType.AddOrSetValue('c4u', 'application/vnd.clonk.c4group');\r\n  FFileType.AddOrSetValue('c11amc', 'application/vnd.cluetrust.cartomobile-config');\r\n  FFileType.AddOrSetValue('c11amz', 'application/vnd.cluetrust.cartomobile-config-pkg');\r\n  FFileType.AddOrSetValue('csp', 'application/vnd.commonspace');\r\n  FFileType.AddOrSetValue('cdbcmsg', 'application/vnd.contact.cmsg');\r\n  FFileType.AddOrSetValue('cmc', 'application/vnd.cosmocaller');\r\n  FFileType.AddOrSetValue('clkx', 'application/vnd.crick.clicker');\r\n  FFileType.AddOrSetValue('clkk', 'application/vnd.crick.clicker.keyboard');\r\n  FFileType.AddOrSetValue('clkp', 'application/vnd.crick.clicker.palette');\r\n  FFileType.AddOrSetValue('clkt', 'application/vnd.crick.clicker.template');\r\n  FFileType.AddOrSetValue('clkw', 'application/vnd.crick.clicker.wordbank');\r\n  FFileType.AddOrSetValue('wbs', 'application/vnd.criticaltools.wbs+xml');\r\n  FFileType.AddOrSetValue('pml', 'application/vnd.ctc-posml');\r\n  FFileType.AddOrSetValue('ppd', 'application/vnd.cups-ppd');\r\n  FFileType.AddOrSetValue('car', 'application/vnd.curl.car');\r\n  FFileType.AddOrSetValue('pcurl', 'application/vnd.curl.pcurl');\r\n  FFileType.AddOrSetValue('dart', 'application/vnd.dart');\r\n  FFileType.AddOrSetValue('rdz', 'application/vnd.data-vision.rdz');\r\n  FFileType.AddOrSetValue('uvf', 'application/vnd.dece.data');\r\n  FFileType.AddOrSetValue('uvvf', 'application/vnd.dece.data');\r\n  FFileType.AddOrSetValue('uvd', 'application/vnd.dece.data');\r\n  FFileType.AddOrSetValue('uvvd', 'application/vnd.dece.data');\r\n  FFileType.AddOrSetValue('uvt', 'application/vnd.dece.ttml+xml');\r\n  FFileType.AddOrSetValue('uvvt', 'application/vnd.dece.ttml+xml');\r\n  FFileType.AddOrSetValue('uvx', 'application/vnd.dece.unspecified');\r\n  FFileType.AddOrSetValue('uvvx', 'application/vnd.dece.unspecified');\r\n  FFileType.AddOrSetValue('uvz', 'application/vnd.dece.zip');\r\n  FFileType.AddOrSetValue('uvvz', 'application/vnd.dece.zip');\r\n  FFileType.AddOrSetValue('fe_launch', 'application/vnd.denovo.fcselayout-link');\r\n  FFileType.AddOrSetValue('dna', 'application/vnd.dna');\r\n  FFileType.AddOrSetValue('mlp', 'application/vnd.dolby.mlp');\r\n  FFileType.AddOrSetValue('dpg', 'application/vnd.dpgraph');\r\n  FFileType.AddOrSetValue('dfac', 'application/vnd.dreamfactory');\r\n  FFileType.AddOrSetValue('kpxx', 'application/vnd.ds-keypoint');\r\n  FFileType.AddOrSetValue('ait', 'application/vnd.dvb.ait');\r\n  FFileType.AddOrSetValue('svc', 'application/vnd.dvb.service');\r\n  FFileType.AddOrSetValue('geo', 'application/vnd.dynageo');\r\n  FFileType.AddOrSetValue('mag', 'application/vnd.ecowin.chart');\r\n  FFileType.AddOrSetValue('nml', 'application/vnd.enliven');\r\n  FFileType.AddOrSetValue('esf', 'application/vnd.epson.esf');\r\n  FFileType.AddOrSetValue('msf', 'application/vnd.epson.msf');\r\n  FFileType.AddOrSetValue('qam', 'application/vnd.epson.quickanime');\r\n  FFileType.AddOrSetValue('slt', 'application/vnd.epson.salt');\r\n  FFileType.AddOrSetValue('ssf', 'application/vnd.epson.ssf');\r\n  FFileType.AddOrSetValue('es3', 'application/vnd.eszigno3+xml');\r\n  FFileType.AddOrSetValue('et3', 'application/vnd.eszigno3+xml');\r\n  FFileType.AddOrSetValue('ez2', 'application/vnd.ezpix-album');\r\n  FFileType.AddOrSetValue('ez3', 'application/vnd.ezpix-package');\r\n  FFileType.AddOrSetValue('fdf', 'application/vnd.fdf');\r\n  FFileType.AddOrSetValue('mseed', 'application/vnd.fdsn.mseed');\r\n  FFileType.AddOrSetValue('seed', 'application/vnd.fdsn.seed');\r\n  FFileType.AddOrSetValue('dataless', 'application/vnd.fdsn.seed');\r\n  FFileType.AddOrSetValue('json', 'application/vnd.embarcadero.firedac+json');\r\n  FFileType.AddOrSetValue('xml', 'application/vnd.embarcadero.firedac+xml');\r\n  FFileType.AddOrSetValue('bin', 'application/vnd.embarcadero.firedac+bin');\r\n  FFileType.AddOrSetValue('gph', 'application/vnd.flographit');\r\n  FFileType.AddOrSetValue('ftc', 'application/vnd.fluxtime.clip');\r\n  FFileType.AddOrSetValue('fm', 'application/vnd.framemaker');\r\n  FFileType.AddOrSetValue('frame', 'application/vnd.framemaker');\r\n  FFileType.AddOrSetValue('maker', 'application/vnd.framemaker');\r\n  FFileType.AddOrSetValue('book', 'application/vnd.framemaker');\r\n  FFileType.AddOrSetValue('fnc', 'application/vnd.frogans.fnc');\r\n  FFileType.AddOrSetValue('ltf', 'application/vnd.frogans.ltf');\r\n  FFileType.AddOrSetValue('fsc', 'application/vnd.fsc.weblaunch');\r\n  FFileType.AddOrSetValue('oas', 'application/vnd.fujitsu.oasys');\r\n  FFileType.AddOrSetValue('oa2', 'application/vnd.fujitsu.oasys2');\r\n  FFileType.AddOrSetValue('oa3', 'application/vnd.fujitsu.oasys3');\r\n  FFileType.AddOrSetValue('fg5', 'application/vnd.fujitsu.oasysgp');\r\n  FFileType.AddOrSetValue('bh2', 'application/vnd.fujitsu.oasysprs');\r\n  FFileType.AddOrSetValue('ddd', 'application/vnd.fujixerox.ddd');\r\n  FFileType.AddOrSetValue('xdw', 'application/vnd.fujixerox.docuworks');\r\n  FFileType.AddOrSetValue('xbd', 'application/vnd.fujixerox.docuworks.binder');\r\n  FFileType.AddOrSetValue('fzs', 'application/vnd.fuzzysheet');\r\n  FFileType.AddOrSetValue('txd', 'application/vnd.genomatix.tuxedo');\r\n  FFileType.AddOrSetValue('ggb', 'application/vnd.geogebra.file');\r\n  FFileType.AddOrSetValue('ggt', 'application/vnd.geogebra.tool');\r\n  FFileType.AddOrSetValue('gex', 'application/vnd.geometry-explorer');\r\n  FFileType.AddOrSetValue('gre', 'application/vnd.geometry-explorer');\r\n  FFileType.AddOrSetValue('gxt', 'application/vnd.geonext');\r\n  FFileType.AddOrSetValue('g2w', 'application/vnd.geoplan');\r\n  FFileType.AddOrSetValue('g3w', 'application/vnd.geospace');\r\n  FFileType.AddOrSetValue('gmx', 'application/vnd.gmx');\r\n  FFileType.AddOrSetValue('kml', 'application/vnd.google-earth.kml+xml');\r\n  FFileType.AddOrSetValue('kmz', 'application/vnd.google-earth.kmz');\r\n  FFileType.AddOrSetValue('gqf', 'application/vnd.grafeq');\r\n  FFileType.AddOrSetValue('gqs', 'application/vnd.grafeq');\r\n  FFileType.AddOrSetValue('gac', 'application/vnd.groove-account');\r\n  FFileType.AddOrSetValue('ghf', 'application/vnd.groove-help');\r\n  FFileType.AddOrSetValue('gim', 'application/vnd.groove-identity-message');\r\n  FFileType.AddOrSetValue('grv', 'application/vnd.groove-injector');\r\n  FFileType.AddOrSetValue('gtm', 'application/vnd.groove-tool-message');\r\n  FFileType.AddOrSetValue('tpl', 'application/vnd.groove-tool-template');\r\n  FFileType.AddOrSetValue('vcg', 'application/vnd.groove-vcard');\r\n  FFileType.AddOrSetValue('hal', 'application/vnd.hal+xml');\r\n  FFileType.AddOrSetValue('zmm', 'application/vnd.handheld-entertainment+xml');\r\n  FFileType.AddOrSetValue('hbci', 'application/vnd.hbci');\r\n  FFileType.AddOrSetValue('les', 'application/vnd.hhe.lesson-player');\r\n  FFileType.AddOrSetValue('hpgl', 'application/vnd.hp-hpgl');\r\n  FFileType.AddOrSetValue('hpid', 'application/vnd.hp-hpid');\r\n  FFileType.AddOrSetValue('hps', 'application/vnd.hp-hps');\r\n  FFileType.AddOrSetValue('jlt', 'application/vnd.hp-jlyt');\r\n  FFileType.AddOrSetValue('pcl', 'application/vnd.hp-pcl');\r\n  FFileType.AddOrSetValue('pclxl', 'application/vnd.hp-pclxl');\r\n  FFileType.AddOrSetValue('sfd-hdstx', 'application/vnd.hydrostatix.sof-data');\r\n  FFileType.AddOrSetValue('mpy', 'application/vnd.ibm.minipay');\r\n  FFileType.AddOrSetValue('afp', 'application/vnd.ibm.modcap');\r\n  FFileType.AddOrSetValue('listafp', 'application/vnd.ibm.modcap');\r\n  FFileType.AddOrSetValue('list3820', 'application/vnd.ibm.modcap');\r\n  FFileType.AddOrSetValue('irm', 'application/vnd.ibm.rights-management');\r\n  FFileType.AddOrSetValue('sc', 'application/vnd.ibm.secure-container');\r\n  FFileType.AddOrSetValue('icc', 'application/vnd.iccprofile');\r\n  FFileType.AddOrSetValue('icm', 'application/vnd.iccprofile');\r\n  FFileType.AddOrSetValue('igl', 'application/vnd.igloader');\r\n  FFileType.AddOrSetValue('ivp', 'application/vnd.immervision-ivp');\r\n  FFileType.AddOrSetValue('ivu', 'application/vnd.immervision-ivu');\r\n  FFileType.AddOrSetValue('igm', 'application/vnd.insors.igm');\r\n  FFileType.AddOrSetValue('xpw', 'application/vnd.intercon.formnet');\r\n  FFileType.AddOrSetValue('xpx', 'application/vnd.intercon.formnet');\r\n  FFileType.AddOrSetValue('i2g', 'application/vnd.intergeo');\r\n  FFileType.AddOrSetValue('qbo', 'application/vnd.intu.qbo');\r\n  FFileType.AddOrSetValue('qfx', 'application/vnd.intu.qfx');\r\n  FFileType.AddOrSetValue('rcprofile', 'application/vnd.ipunplugged.rcprofile');\r\n  FFileType.AddOrSetValue('irp', 'application/vnd.irepository.package+xml');\r\n  FFileType.AddOrSetValue('xpr', 'application/vnd.is-xpr');\r\n  FFileType.AddOrSetValue('fcs', 'application/vnd.isac.fcs');\r\n  FFileType.AddOrSetValue('jam', 'application/vnd.jam');\r\n  FFileType.AddOrSetValue('rms', 'application/vnd.jcp.javame.midlet-rms');\r\n  FFileType.AddOrSetValue('jisp', 'application/vnd.jisp');\r\n  FFileType.AddOrSetValue('joda', 'application/vnd.joost.joda-archive');\r\n  FFileType.AddOrSetValue('ktz', 'application/vnd.kahootz');\r\n  FFileType.AddOrSetValue('ktr', 'application/vnd.kahootz');\r\n  FFileType.AddOrSetValue('karbon', 'application/vnd.kde.karbon');\r\n  FFileType.AddOrSetValue('chrt', 'application/vnd.kde.kchart');\r\n  FFileType.AddOrSetValue('kfo', 'application/vnd.kde.kformula');\r\n  FFileType.AddOrSetValue('flw', 'application/vnd.kde.kivio');\r\n  FFileType.AddOrSetValue('kon', 'application/vnd.kde.kontour');\r\n  FFileType.AddOrSetValue('kpr', 'application/vnd.kde.kpresenter');\r\n  FFileType.AddOrSetValue('kpt', 'application/vnd.kde.kpresenter');\r\n  FFileType.AddOrSetValue('ksp', 'application/vnd.kde.kspread');\r\n  FFileType.AddOrSetValue('kwd', 'application/vnd.kde.kword');\r\n  FFileType.AddOrSetValue('kwt', 'application/vnd.kde.kword');\r\n  FFileType.AddOrSetValue('htke', 'application/vnd.kenameaapp');\r\n  FFileType.AddOrSetValue('kia', 'application/vnd.kidspiration');\r\n  FFileType.AddOrSetValue('kne', 'application/vnd.kinar');\r\n  FFileType.AddOrSetValue('knp', 'application/vnd.kinar');\r\n  FFileType.AddOrSetValue('skp', 'application/vnd.koan');\r\n  FFileType.AddOrSetValue('skd', 'application/vnd.koan');\r\n  FFileType.AddOrSetValue('skt', 'application/vnd.koan');\r\n  FFileType.AddOrSetValue('skm', 'application/vnd.koan');\r\n  FFileType.AddOrSetValue('sse', 'application/vnd.kodak-descriptor');\r\n  FFileType.AddOrSetValue('lasxml', 'application/vnd.las.las+xml');\r\n  FFileType.AddOrSetValue('lbd', 'application/vnd.llamagraphics.life-balance.desktop');\r\n  FFileType.AddOrSetValue('lbe', 'application/vnd.llamagraphics.life-balance.exchange+xml');\r\n  FFileType.AddOrSetValue('123', 'application/vnd.lotus-1-2-3');\r\n  FFileType.AddOrSetValue('apr', 'application/vnd.lotus-approach');\r\n  FFileType.AddOrSetValue('pre', 'application/vnd.lotus-freelance');\r\n  FFileType.AddOrSetValue('nsf', 'application/vnd.lotus-notes');\r\n  FFileType.AddOrSetValue('org', 'application/vnd.lotus-organizer');\r\n  FFileType.AddOrSetValue('scm', 'application/vnd.lotus-screencam');\r\n  FFileType.AddOrSetValue('lwp', 'application/vnd.lotus-wordpro');\r\n  FFileType.AddOrSetValue('portpkg', 'application/vnd.macports.portpkg');\r\n  FFileType.AddOrSetValue('mcd', 'application/vnd.mcd');\r\n  FFileType.AddOrSetValue('mc1', 'application/vnd.medcalcdata');\r\n  FFileType.AddOrSetValue('cdkey', 'application/vnd.mediastation.cdkey');\r\n  FFileType.AddOrSetValue('mwf', 'application/vnd.mfer');\r\n  FFileType.AddOrSetValue('mfm', 'application/vnd.mfmp');\r\n  FFileType.AddOrSetValue('flo', 'application/vnd.micrografx.flo');\r\n  FFileType.AddOrSetValue('igx', 'application/vnd.micrografx.igx');\r\n  FFileType.AddOrSetValue('mif', 'application/vnd.mif');\r\n  FFileType.AddOrSetValue('daf', 'application/vnd.mobius.daf');\r\n  FFileType.AddOrSetValue('dis', 'application/vnd.mobius.dis');\r\n  FFileType.AddOrSetValue('mbk', 'application/vnd.mobius.mbk');\r\n  FFileType.AddOrSetValue('mqy', 'application/vnd.mobius.mqy');\r\n  FFileType.AddOrSetValue('msl', 'application/vnd.mobius.msl');\r\n  FFileType.AddOrSetValue('plc', 'application/vnd.mobius.plc');\r\n  FFileType.AddOrSetValue('txf', 'application/vnd.mobius.txf');\r\n  FFileType.AddOrSetValue('mpn', 'application/vnd.mophun.application');\r\n  FFileType.AddOrSetValue('mpc', 'application/vnd.mophun.certificate');\r\n  FFileType.AddOrSetValue('xul', 'application/vnd.mozilla.xul+xml');\r\n  FFileType.AddOrSetValue('cil', 'application/vnd.ms-artgalry');\r\n  FFileType.AddOrSetValue('cab', 'application/vnd.ms-cab-compressed');\r\n  FFileType.AddOrSetValue('xls', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xlm', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xla', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xlc', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xlt', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xlw', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xlam', 'application/vnd.ms-excel.addin.macroenabled.12');\r\n  FFileType.AddOrSetValue('xlsb', 'application/vnd.ms-excel.sheet.binary.macroenabled.12');\r\n  FFileType.AddOrSetValue('xlsm', 'application/vnd.ms-excel.sheet.macroenabled.12');\r\n  FFileType.AddOrSetValue('xltm', 'application/vnd.ms-excel.template.macroenabled.12');\r\n  FFileType.AddOrSetValue('eot', 'application/vnd.ms-fontobject');\r\n  FFileType.AddOrSetValue('chm', 'application/vnd.ms-htmlhelp');\r\n  FFileType.AddOrSetValue('ims', 'application/vnd.ms-ims');\r\n  FFileType.AddOrSetValue('lrm', 'application/vnd.ms-lrm');\r\n  FFileType.AddOrSetValue('thmx', 'application/vnd.ms-officetheme');\r\n  FFileType.AddOrSetValue('cat', 'application/vnd.ms-pki.seccat');\r\n  FFileType.AddOrSetValue('stl', 'application/vnd.ms-pki.stl');\r\n  FFileType.AddOrSetValue('ppt', 'application/vnd.ms-powerpoint');\r\n  FFileType.AddOrSetValue('pps', 'application/vnd.ms-powerpoint');\r\n  FFileType.AddOrSetValue('pot', 'application/vnd.ms-powerpoint');\r\n  FFileType.AddOrSetValue('ppam', 'application/vnd.ms-powerpoint.addin.macroenabled.12');\r\n  FFileType.AddOrSetValue('pptm', 'application/vnd.ms-powerpoint.presentation.macroenabled.12');\r\n  FFileType.AddOrSetValue('sldm', 'application/vnd.ms-powerpoint.slide.macroenabled.12');\r\n  FFileType.AddOrSetValue('ppsm', 'application/vnd.ms-powerpoint.slideshow.macroenabled.12');\r\n  FFileType.AddOrSetValue('potm', 'application/vnd.ms-powerpoint.template.macroenabled.12');\r\n  FFileType.AddOrSetValue('mpp', 'application/vnd.ms-project');\r\n  FFileType.AddOrSetValue('mpt', 'application/vnd.ms-project');\r\n  FFileType.AddOrSetValue('docm', 'application/vnd.ms-word.document.macroenabled.12');\r\n  FFileType.AddOrSetValue('dotm', 'application/vnd.ms-word.template.macroenabled.12');\r\n  FFileType.AddOrSetValue('wps', 'application/vnd.ms-works');\r\n  FFileType.AddOrSetValue('wks', 'application/vnd.ms-works');\r\n  FFileType.AddOrSetValue('wcm', 'application/vnd.ms-works');\r\n  FFileType.AddOrSetValue('wdb', 'application/vnd.ms-works');\r\n  FFileType.AddOrSetValue('wpl', 'application/vnd.ms-wpl');\r\n  FFileType.AddOrSetValue('xps', 'application/vnd.ms-xpsdocument');\r\n  FFileType.AddOrSetValue('mseq', 'application/vnd.mseq');\r\n  FFileType.AddOrSetValue('mus', 'application/vnd.musician');\r\n  FFileType.AddOrSetValue('msty', 'application/vnd.muvee.style');\r\n  FFileType.AddOrSetValue('taglet', 'application/vnd.mynfc');\r\n  FFileType.AddOrSetValue('nlu', 'application/vnd.neurolanguage.nlu');\r\n  FFileType.AddOrSetValue('ntf', 'application/vnd.nitf');\r\n  FFileType.AddOrSetValue('nitf', 'application/vnd.nitf');\r\n  FFileType.AddOrSetValue('nnd', 'application/vnd.noblenet-directory');\r\n  FFileType.AddOrSetValue('nns', 'application/vnd.noblenet-sealer');\r\n  FFileType.AddOrSetValue('nnw', 'application/vnd.noblenet-web');\r\n  FFileType.AddOrSetValue('ngdat', 'application/vnd.nokia.n-gage.data');\r\n  FFileType.AddOrSetValue('n-gage', 'application/vnd.nokia.n-gage.symbian.install');\r\n  FFileType.AddOrSetValue('rpst', 'application/vnd.nokia.radio-preset');\r\n  FFileType.AddOrSetValue('rpss', 'application/vnd.nokia.radio-presets');\r\n  FFileType.AddOrSetValue('edm', 'application/vnd.novadigm.edm');\r\n  FFileType.AddOrSetValue('edx', 'application/vnd.novadigm.edx');\r\n  FFileType.AddOrSetValue('FExt', 'application/vnd.novadigm.FExt');\r\n  FFileType.AddOrSetValue('odc', 'application/vnd.oasis.opendocument.chart');\r\n  FFileType.AddOrSetValue('otc', 'application/vnd.oasis.opendocument.chart-template');\r\n  FFileType.AddOrSetValue('odb', 'application/vnd.oasis.opendocument.database');\r\n  FFileType.AddOrSetValue('odf', 'application/vnd.oasis.opendocument.formula');\r\n  FFileType.AddOrSetValue('odft', 'application/vnd.oasis.opendocument.formula-template');\r\n  FFileType.AddOrSetValue('odg', 'application/vnd.oasis.opendocument.graphics');\r\n  FFileType.AddOrSetValue('otg', 'application/vnd.oasis.opendocument.graphics-template');\r\n  FFileType.AddOrSetValue('odi', 'application/vnd.oasis.opendocument.image');\r\n  FFileType.AddOrSetValue('oti', 'application/vnd.oasis.opendocument.image-template');\r\n  FFileType.AddOrSetValue('odp', 'application/vnd.oasis.opendocument.presentation');\r\n  FFileType.AddOrSetValue('otp', 'application/vnd.oasis.opendocument.presentation-template');\r\n  FFileType.AddOrSetValue('ods', 'application/vnd.oasis.opendocument.spreadsheet');\r\n  FFileType.AddOrSetValue('ots', 'application/vnd.oasis.opendocument.spreadsheet-template');\r\n  FFileType.AddOrSetValue('odt', 'application/vnd.oasis.opendocument.text');\r\n  FFileType.AddOrSetValue('odm', 'application/vnd.oasis.opendocument.text-master');\r\n  FFileType.AddOrSetValue('ott', 'application/vnd.oasis.opendocument.text-template');\r\n  FFileType.AddOrSetValue('oth', 'application/vnd.oasis.opendocument.text-web');\r\n  FFileType.AddOrSetValue('xo', 'application/vnd.olpc-sugar');\r\n  FFileType.AddOrSetValue('dd2', 'application/vnd.oma.dd2+xml');\r\n  FFileType.AddOrSetValue('oxt', 'application/vnd.openofficeorg.extension');\r\n  FFileType.AddOrSetValue('pptx', 'application/vnd.openxmlformats-officedocument.presentationml.presentation');\r\n  FFileType.AddOrSetValue('sldx', 'application/vnd.openxmlformats-officedocument.presentationml.slide');\r\n  FFileType.AddOrSetValue('ppsx', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow');\r\n  FFileType.AddOrSetValue('potx', 'application/vnd.openxmlformats-officedocument.presentationml.template');\r\n  FFileType.AddOrSetValue('xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\r\n  FFileType.AddOrSetValue('xltx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template');\r\n  FFileType.AddOrSetValue('docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document');\r\n  FFileType.AddOrSetValue('dotx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template');\r\n  FFileType.AddOrSetValue('mgp', 'application/vnd.osgeo.mapguide.package');\r\n  FFileType.AddOrSetValue('dp', 'application/vnd.osgi.dp');\r\n  FFileType.AddOrSetValue('esa', 'application/vnd.osgi.subsystem');\r\n  FFileType.AddOrSetValue('pdb', 'application/vnd.palm');\r\n  FFileType.AddOrSetValue('pqa', 'application/vnd.palm');\r\n  FFileType.AddOrSetValue('oprc', 'application/vnd.palm');\r\n  FFileType.AddOrSetValue('paw', 'application/vnd.pawaafile');\r\n  FFileType.AddOrSetValue('str', 'application/vnd.pg.format');\r\n  FFileType.AddOrSetValue('ei6', 'application/vnd.pg.osasli');\r\n  FFileType.AddOrSetValue('efif', 'application/vnd.picsel');\r\n  FFileType.AddOrSetValue('wg', 'application/vnd.pmi.widget');\r\n  FFileType.AddOrSetValue('plf', 'application/vnd.pocketlearn');\r\n  FFileType.AddOrSetValue('pbd', 'application/vnd.powerbuilder6');\r\n  FFileType.AddOrSetValue('box', 'application/vnd.previewsystems.box');\r\n  FFileType.AddOrSetValue('mgz', 'application/vnd.proteus.magazine');\r\n  FFileType.AddOrSetValue('qps', 'application/vnd.publishare-delta-tree');\r\n  FFileType.AddOrSetValue('ptid', 'application/vnd.pvi.ptid1');\r\n  FFileType.AddOrSetValue('qxd', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('qxt', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('qwd', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('qwt', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('qxl', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('qxb', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('bed', 'application/vnd.realvnc.bed');\r\n  FFileType.AddOrSetValue('mxl', 'application/vnd.recordare.musicxml');\r\n  FFileType.AddOrSetValue('musicxml', 'application/vnd.recordare.musicxml+xml');\r\n  FFileType.AddOrSetValue('cryptonote', 'application/vnd.rig.cryptonote');\r\n  FFileType.AddOrSetValue('cod', 'application/vnd.rim.cod');\r\n  FFileType.AddOrSetValue('rm', 'application/vnd.rn-realmedia');\r\n  FFileType.AddOrSetValue('rmvb', 'application/vnd.rn-realmedia-vbr');\r\n  FFileType.AddOrSetValue('link66', 'application/vnd.route66.link66+xml');\r\n  FFileType.AddOrSetValue('st', 'application/vnd.sailingtracker.track');\r\n  FFileType.AddOrSetValue('see', 'application/vnd.seemail');\r\n  FFileType.AddOrSetValue('sema', 'application/vnd.sema');\r\n  FFileType.AddOrSetValue('semd', 'application/vnd.semd');\r\n  FFileType.AddOrSetValue('semf', 'application/vnd.semf');\r\n  FFileType.AddOrSetValue('ifm', 'application/vnd.shana.informed.formdata');\r\n  FFileType.AddOrSetValue('itp', 'application/vnd.shana.informed.formtemplate');\r\n  FFileType.AddOrSetValue('iif', 'application/vnd.shana.informed.interchange');\r\n  FFileType.AddOrSetValue('ipk', 'application/vnd.shana.informed.package');\r\n  FFileType.AddOrSetValue('twd', 'application/vnd.simtech-mindmapper');\r\n  FFileType.AddOrSetValue('twds', 'application/vnd.simtech-mindmapper');\r\n  FFileType.AddOrSetValue('mmf', 'application/vnd.smaf');\r\n  FFileType.AddOrSetValue('teacher', 'application/vnd.smart.teacher');\r\n  FFileType.AddOrSetValue('sdkm', 'application/vnd.solent.sdkm+xml');\r\n  FFileType.AddOrSetValue('sdkd', 'application/vnd.solent.sdkm+xml');\r\n  FFileType.AddOrSetValue('dxp', 'application/vnd.spotfire.dxp');\r\n  FFileType.AddOrSetValue('sfs', 'application/vnd.spotfire.sfs');\r\n  FFileType.AddOrSetValue('sdc', 'application/vnd.stardivision.calc');\r\n  FFileType.AddOrSetValue('sda', 'application/vnd.stardivision.draw');\r\n  FFileType.AddOrSetValue('sdd', 'application/vnd.stardivision.impress');\r\n  FFileType.AddOrSetValue('smf', 'application/vnd.stardivision.math');\r\n  FFileType.AddOrSetValue('sdw', 'application/vnd.stardivision.writer');\r\n  FFileType.AddOrSetValue('vor', 'application/vnd.stardivision.writer');\r\n  FFileType.AddOrSetValue('sgl', 'application/vnd.stardivision.writer-global');\r\n  FFileType.AddOrSetValue('smzip', 'application/vnd.stepmania.package');\r\n  FFileType.AddOrSetValue('sm', 'application/vnd.stepmania.stepchart');\r\n  FFileType.AddOrSetValue('sxc', 'application/vnd.sun.xml.calc');\r\n  FFileType.AddOrSetValue('stc', 'application/vnd.sun.xml.calc.template');\r\n  FFileType.AddOrSetValue('sxd', 'application/vnd.sun.xml.draw');\r\n  FFileType.AddOrSetValue('std', 'application/vnd.sun.xml.draw.template');\r\n  FFileType.AddOrSetValue('sxi', 'application/vnd.sun.xml.impress');\r\n  FFileType.AddOrSetValue('sti', 'application/vnd.sun.xml.impress.template');\r\n  FFileType.AddOrSetValue('sxm', 'application/vnd.sun.xml.math');\r\n  FFileType.AddOrSetValue('sxw', 'application/vnd.sun.xml.writer');\r\n  FFileType.AddOrSetValue('sxg', 'application/vnd.sun.xml.writer.global');\r\n  FFileType.AddOrSetValue('stw', 'application/vnd.sun.xml.writer.template');\r\n  FFileType.AddOrSetValue('sus', 'application/vnd.sus-calendar');\r\n  FFileType.AddOrSetValue('susp', 'application/vnd.sus-calendar');\r\n  FFileType.AddOrSetValue('svd', 'application/vnd.svd');\r\n  FFileType.AddOrSetValue('sis', 'application/vnd.symbian.install');\r\n  FFileType.AddOrSetValue('sisx', 'application/vnd.symbian.install');\r\n  FFileType.AddOrSetValue('xsm', 'application/vnd.syncml+xml');\r\n  FFileType.AddOrSetValue('bdm', 'application/vnd.syncml.dm+wbxml');\r\n  FFileType.AddOrSetValue('xdm', 'application/vnd.syncml.dm+xml');\r\n  FFileType.AddOrSetValue('tao', 'application/vnd.tao.intent-module-archive');\r\n  FFileType.AddOrSetValue('pcap', 'application/vnd.tcpdump.pcap');\r\n  FFileType.AddOrSetValue('cap', 'application/vnd.tcpdump.pcap');\r\n  FFileType.AddOrSetValue('dmp', 'application/vnd.tcpdump.pcap');\r\n  FFileType.AddOrSetValue('tmo', 'application/vnd.tmobile-livetv');\r\n  FFileType.AddOrSetValue('tpt', 'application/vnd.trid.tpt');\r\n  FFileType.AddOrSetValue('mxs', 'application/vnd.triscape.mxs');\r\n  FFileType.AddOrSetValue('tra', 'application/vnd.trueapp');\r\n  FFileType.AddOrSetValue('ufd', 'application/vnd.ufdl');\r\n  FFileType.AddOrSetValue('ufdl', 'application/vnd.ufdl');\r\n  FFileType.AddOrSetValue('utz', 'application/vnd.uiq.theme');\r\n  FFileType.AddOrSetValue('umj', 'application/vnd.umajin');\r\n  FFileType.AddOrSetValue('unityweb', 'application/vnd.unity');\r\n  FFileType.AddOrSetValue('uoml', 'application/vnd.uoml+xml');\r\n  FFileType.AddOrSetValue('vcx', 'application/vnd.vcx');\r\n  FFileType.AddOrSetValue('vsd', 'application/vnd.visio');\r\n  FFileType.AddOrSetValue('vst', 'application/vnd.visio');\r\n  FFileType.AddOrSetValue('vss', 'application/vnd.visio');\r\n  FFileType.AddOrSetValue('vsw', 'application/vnd.visio');\r\n  FFileType.AddOrSetValue('vis', 'application/vnd.visionary');\r\n  FFileType.AddOrSetValue('vsf', 'application/vnd.vsf');\r\n  FFileType.AddOrSetValue('wbxml', 'application/vnd.wap.wbxml');\r\n  FFileType.AddOrSetValue('wmlc', 'application/vnd.wap.wmlc');\r\n  FFileType.AddOrSetValue('wmlsc', 'application/vnd.wap.wmlscriptc');\r\n  FFileType.AddOrSetValue('wtb', 'application/vnd.webturbo');\r\n  FFileType.AddOrSetValue('nbp', 'application/vnd.wolfram.player');\r\n  FFileType.AddOrSetValue('wpd', 'application/vnd.wordperfect');\r\n  FFileType.AddOrSetValue('wqd', 'application/vnd.wqd');\r\n  FFileType.AddOrSetValue('stf', 'application/vnd.wt.stf');\r\n  FFileType.AddOrSetValue('xar', 'application/vnd.xara');\r\n  FFileType.AddOrSetValue('xfdl', 'application/vnd.xfdl');\r\n  FFileType.AddOrSetValue('hvd', 'application/vnd.yamaha.hv-dic');\r\n  FFileType.AddOrSetValue('hvs', 'application/vnd.yamaha.hv-script');\r\n  FFileType.AddOrSetValue('hvp', 'application/vnd.yamaha.hv-voice');\r\n  FFileType.AddOrSetValue('osf', 'application/vnd.yamaha.openscoreformat');\r\n  FFileType.AddOrSetValue('osfpvg', 'application/vnd.yamaha.openscoreformat.osfpvg+xml');\r\n  FFileType.AddOrSetValue('saf', 'application/vnd.yamaha.smaf-audio');\r\n  FFileType.AddOrSetValue('spf', 'application/vnd.yamaha.smaf-phrase');\r\n  FFileType.AddOrSetValue('cmp', 'application/vnd.yellowriver-custom-menu');\r\n  FFileType.AddOrSetValue('zir', 'application/vnd.zul');\r\n  FFileType.AddOrSetValue('zirz', 'application/vnd.zul');\r\n  FFileType.AddOrSetValue('zaz', 'application/vnd.zzazz.deck+xml');\r\n  FFileType.AddOrSetValue('vxml', 'application/voicexml+xml');\r\n  FFileType.AddOrSetValue('wgt', 'application/widget');\r\n  FFileType.AddOrSetValue('hlp', 'application/winhlp');\r\n  FFileType.AddOrSetValue('wsdl', 'application/wsdl+xml');\r\n  FFileType.AddOrSetValue('wspolicy', 'application/wspolicy+xml');\r\n  FFileType.AddOrSetValue('7z', 'application/x-7z-compressed');\r\n  FFileType.AddOrSetValue('abw', 'application/x-abiword');\r\n  FFileType.AddOrSetValue('ace', 'application/x-ace-compressed');\r\n  FFileType.AddOrSetValue('dmg', 'application/x-apple-diskimage');\r\n  FFileType.AddOrSetValue('aab', 'application/x-authorware-bin');\r\n  FFileType.AddOrSetValue('x32', 'application/x-authorware-bin');\r\n  FFileType.AddOrSetValue('u32', 'application/x-authorware-bin');\r\n  FFileType.AddOrSetValue('vox', 'application/x-authorware-bin');\r\n  FFileType.AddOrSetValue('aam', 'application/x-authorware-map');\r\n  FFileType.AddOrSetValue('aas', 'application/x-authorware-seg');\r\n  FFileType.AddOrSetValue('bcpio', 'application/x-bcpio');\r\n  FFileType.AddOrSetValue('torrent', 'application/x-bittorrent');\r\n  FFileType.AddOrSetValue('blb', 'application/x-blorb');\r\n  FFileType.AddOrSetValue('blorb', 'application/x-blorb');\r\n  FFileType.AddOrSetValue('bz', 'application/x-bzip');\r\n  FFileType.AddOrSetValue('bz2', 'application/x-bzip2');\r\n  FFileType.AddOrSetValue('boz', 'application/x-bzip2');\r\n  FFileType.AddOrSetValue('cbr', 'application/x-cbr');\r\n  FFileType.AddOrSetValue('cba', 'application/x-cbr');\r\n  FFileType.AddOrSetValue('cbt', 'application/x-cbr');\r\n  FFileType.AddOrSetValue('cbz', 'application/x-cbr');\r\n  FFileType.AddOrSetValue('cb7', 'application/x-cbr');\r\n  FFileType.AddOrSetValue('vcd', 'application/x-cdlink');\r\n  FFileType.AddOrSetValue('cfs', 'application/x-cfs-compressed');\r\n  FFileType.AddOrSetValue('chat', 'application/x-chat');\r\n  FFileType.AddOrSetValue('pgn', 'application/x-chess-pgn');\r\n  FFileType.AddOrSetValue('nsc', 'application/x-conference');\r\n  FFileType.AddOrSetValue('cpio', 'application/x-cpio');\r\n  FFileType.AddOrSetValue('csh', 'application/x-csh');\r\n  FFileType.AddOrSetValue('deb', 'application/x-debian-package');\r\n  FFileType.AddOrSetValue('udeb', 'application/x-debian-package');\r\n  FFileType.AddOrSetValue('dgc', 'application/x-dgc-compressed');\r\n  FFileType.AddOrSetValue('dir', 'application/x-director');\r\n  FFileType.AddOrSetValue('dcr', 'application/x-director');\r\n  FFileType.AddOrSetValue('dxr', 'application/x-director');\r\n  FFileType.AddOrSetValue('cst', 'application/x-director');\r\n  FFileType.AddOrSetValue('cct', 'application/x-director');\r\n  FFileType.AddOrSetValue('cxt', 'application/x-director');\r\n  FFileType.AddOrSetValue('w3d', 'application/x-director');\r\n  FFileType.AddOrSetValue('fgd', 'application/x-director');\r\n  FFileType.AddOrSetValue('swa', 'application/x-director');\r\n  FFileType.AddOrSetValue('wad', 'application/x-doom');\r\n  FFileType.AddOrSetValue('ncx', 'application/x-dtbncx+xml');\r\n  FFileType.AddOrSetValue('dtb', 'application/x-dtbook+xml');\r\n  FFileType.AddOrSetValue('res', 'application/x-dtbresource+xml');\r\n  FFileType.AddOrSetValue('dvi', 'application/x-dvi');\r\n  FFileType.AddOrSetValue('evy', 'application/x-envoy');\r\n  FFileType.AddOrSetValue('eva', 'application/x-eva');\r\n  FFileType.AddOrSetValue('bdf', 'application/x-font-bdf');\r\n  FFileType.AddOrSetValue('gsf', 'application/x-font-ghostscript');\r\n  FFileType.AddOrSetValue('psf', 'application/x-font-linux-psf');\r\n  FFileType.AddOrSetValue('otf', 'application/x-font-otf');\r\n  FFileType.AddOrSetValue('pcf', 'application/x-font-pcf');\r\n  FFileType.AddOrSetValue('snf', 'application/x-font-snf');\r\n  FFileType.AddOrSetValue('ttf', 'application/x-font-ttf');\r\n  FFileType.AddOrSetValue('ttc', 'application/x-font-ttf');\r\n  FFileType.AddOrSetValue('pfa', 'application/x-font-type1');\r\n  FFileType.AddOrSetValue('pfb', 'application/x-font-type1');\r\n  FFileType.AddOrSetValue('pfm', 'application/x-font-type1');\r\n  FFileType.AddOrSetValue('afm', 'application/x-font-type1');\r\n  FFileType.AddOrSetValue('woff', 'application/x-font-woff');\r\n  FFileType.AddOrSetValue('arc', 'application/x-freearc');\r\n  FFileType.AddOrSetValue('spl', 'application/x-futuresplash');\r\n  FFileType.AddOrSetValue('gca', 'application/x-gca-compressed');\r\n  FFileType.AddOrSetValue('ulx', 'application/x-glulx');\r\n  FFileType.AddOrSetValue('gnumeric', 'application/x-gnumeric');\r\n  FFileType.AddOrSetValue('gramps', 'application/x-gramps-xml');\r\n  FFileType.AddOrSetValue('gtar', 'application/x-gtar');\r\n  FFileType.AddOrSetValue('hdf', 'application/x-hdf');\r\n  FFileType.AddOrSetValue('install', 'application/x-install-instructions');\r\n  FFileType.AddOrSetValue('iso', 'application/x-iso9660-image');\r\n  FFileType.AddOrSetValue('jnlp', 'application/x-java-jnlp-file');\r\n  FFileType.AddOrSetValue('latex', 'application/x-latex');\r\n  FFileType.AddOrSetValue('lzh', 'application/x-lzh-compressed');\r\n  FFileType.AddOrSetValue('lha', 'application/x-lzh-compressed');\r\n  FFileType.AddOrSetValue('mie', 'application/x-mie');\r\n  FFileType.AddOrSetValue('prc', 'application/x-mobipocket-ebook');\r\n  FFileType.AddOrSetValue('mobi', 'application/x-mobipocket-ebook');\r\n  FFileType.AddOrSetValue('application', 'application/x-ms-application');\r\n  FFileType.AddOrSetValue('lnk', 'application/x-ms-shortcut');\r\n  FFileType.AddOrSetValue('wmd', 'application/x-ms-wmd');\r\n  FFileType.AddOrSetValue('wmz', 'application/x-ms-wmz');\r\n  FFileType.AddOrSetValue('xbap', 'application/x-ms-xbap');\r\n  FFileType.AddOrSetValue('mdb', 'application/x-msaccess');\r\n  FFileType.AddOrSetValue('obd', 'application/x-msbinder');\r\n  FFileType.AddOrSetValue('crd', 'application/x-mscardfile');\r\n  FFileType.AddOrSetValue('clp', 'application/x-msclip');\r\n  FFileType.AddOrSetValue('exe', 'application/x-msdownload');\r\n  FFileType.AddOrSetValue('dll', 'application/x-msdownload');\r\n  FFileType.AddOrSetValue('com', 'application/x-msdownload');\r\n  FFileType.AddOrSetValue('bat', 'application/x-msdownload');\r\n  FFileType.AddOrSetValue('msi', 'application/x-msdownload');\r\n  FFileType.AddOrSetValue('mvb', 'application/x-msmediaview');\r\n  FFileType.AddOrSetValue('m13', 'application/x-msmediaview');\r\n  FFileType.AddOrSetValue('m14', 'application/x-msmediaview');\r\n  FFileType.AddOrSetValue('wmf', 'application/x-msmetafile');\r\n  FFileType.AddOrSetValue('wmz', 'application/x-msmetafile');\r\n  FFileType.AddOrSetValue('emf', 'application/x-msmetafile');\r\n  FFileType.AddOrSetValue('emz', 'application/x-msmetafile');\r\n  FFileType.AddOrSetValue('mny', 'application/x-msmoney');\r\n  FFileType.AddOrSetValue('pub', 'application/x-mspublisher');\r\n  FFileType.AddOrSetValue('scd', 'application/x-msschedule');\r\n  FFileType.AddOrSetValue('trm', 'application/x-msterminal');\r\n  FFileType.AddOrSetValue('wri', 'application/x-mswrite');\r\n  FFileType.AddOrSetValue('nc', 'application/x-netcdf');\r\n  FFileType.AddOrSetValue('cdf', 'application/x-netcdf');\r\n  FFileType.AddOrSetValue('nzb', 'application/x-nzb');\r\n  FFileType.AddOrSetValue('p12', 'application/x-pkcs12');\r\n  FFileType.AddOrSetValue('pfx', 'application/x-pkcs12');\r\n  FFileType.AddOrSetValue('p7b', 'application/x-pkcs7-certificates');\r\n  FFileType.AddOrSetValue('spc', 'application/x-pkcs7-certificates');\r\n  FFileType.AddOrSetValue('p7r', 'application/x-pkcs7-certreqresp');\r\n  FFileType.AddOrSetValue('rar', 'application/x-rar-compressed');\r\n  FFileType.AddOrSetValue('ris', 'application/x-research-info-systems');\r\n  FFileType.AddOrSetValue('sh', 'application/x-sh');\r\n  FFileType.AddOrSetValue('shar', 'application/x-shar');\r\n  FFileType.AddOrSetValue('swf', 'application/x-shockwave-flash');\r\n  FFileType.AddOrSetValue('xap', 'application/x-silverlight-app');\r\n  FFileType.AddOrSetValue('sql', 'application/x-sql');\r\n  FFileType.AddOrSetValue('sit', 'application/x-stuffit');\r\n  FFileType.AddOrSetValue('sitx', 'application/x-stuffitx');\r\n  FFileType.AddOrSetValue('srt', 'application/x-subrip');\r\n  FFileType.AddOrSetValue('sv4cpio', 'application/x-sv4cpio');\r\n  FFileType.AddOrSetValue('sv4crc', 'application/x-sv4crc');\r\n  FFileType.AddOrSetValue('t3', 'application/x-t3vm-image');\r\n  FFileType.AddOrSetValue('gam', 'application/x-tads');\r\n  FFileType.AddOrSetValue('tar', 'application/x-tar');\r\n  FFileType.AddOrSetValue('tcl', 'application/x-tcl');\r\n  FFileType.AddOrSetValue('tex', 'application/x-tex');\r\n  FFileType.AddOrSetValue('tfm', 'application/x-tex-tfm');\r\n  FFileType.AddOrSetValue('texinfo', 'application/x-texinfo');\r\n  FFileType.AddOrSetValue('texi', 'application/x-texinfo');\r\n  FFileType.AddOrSetValue('obj', 'application/x-tgif');\r\n  FFileType.AddOrSetValue('ustar', 'application/x-ustar');\r\n  FFileType.AddOrSetValue('src', 'application/x-wais-source');\r\n  FFileType.AddOrSetValue('der', 'application/x-x509-ca-cert');\r\n  FFileType.AddOrSetValue('crt', 'application/x-x509-ca-cert');\r\n  FFileType.AddOrSetValue('fig', 'application/x-xfig');\r\n  FFileType.AddOrSetValue('xlf', 'application/x-xliff+xml');\r\n  FFileType.AddOrSetValue('xpi', 'application/x-xpinstall');\r\n  FFileType.AddOrSetValue('xz', 'application/x-xz');\r\n  FFileType.AddOrSetValue('yaml', 'application/x-yaml');\r\n  FFileType.AddOrSetValue('z1', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z2', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z3', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z4', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z5', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z6', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z7', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z8', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('xaml', 'application/xaml+xml');\r\n  FFileType.AddOrSetValue('xdf', 'application/xcap-diff+xml');\r\n  FFileType.AddOrSetValue('xenc', 'application/xenc+xml');\r\n  FFileType.AddOrSetValue('xhtml', 'application/xhtml+xml');\r\n  FFileType.AddOrSetValue('xht', 'application/xhtml+xml');\r\n  FFileType.AddOrSetValue('xml', 'application/xml');\r\n  FFileType.AddOrSetValue('xsl', 'application/xml');\r\n  FFileType.AddOrSetValue('dtd', 'application/xml-dtd');\r\n  FFileType.AddOrSetValue('xop', 'application/xop+xml');\r\n  FFileType.AddOrSetValue('xpl', 'application/xproc+xml');\r\n  FFileType.AddOrSetValue('xslt', 'application/xslt+xml');\r\n  FFileType.AddOrSetValue('xspf', 'application/xspf+xml');\r\n  FFileType.AddOrSetValue('mxml', 'application/xv+xml');\r\n  FFileType.AddOrSetValue('xhvml', 'application/xv+xml');\r\n  FFileType.AddOrSetValue('xvml', 'application/xv+xml');\r\n  FFileType.AddOrSetValue('xvm', 'application/xv+xml');\r\n  FFileType.AddOrSetValue('yang', 'application/yang');\r\n  FFileType.AddOrSetValue('yin', 'application/yin+xml');\r\n  FFileType.AddOrSetValue('zip', 'application/zip');\r\n  FFileType.AddOrSetValue('adp', 'audio/adpcm');\r\n  FFileType.AddOrSetValue('au', 'audio/basic');\r\n  FFileType.AddOrSetValue('snd', 'audio/basic');\r\n  FFileType.AddOrSetValue('mid', 'audio/midi');\r\n  FFileType.AddOrSetValue('midi', 'audio/midi');\r\n  FFileType.AddOrSetValue('kar', 'audio/midi');\r\n  FFileType.AddOrSetValue('rmi', 'audio/midi');\r\n  FFileType.AddOrSetValue('mp4a', 'audio/mp4');\r\n  FFileType.AddOrSetValue('mpga', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('mp2', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('mp2a', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('mp3', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('m2a', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('m3a', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('oga', 'audio/ogg');\r\n  FFileType.AddOrSetValue('ogg', 'audio/ogg');\r\n  FFileType.AddOrSetValue('spx', 'audio/ogg');\r\n  FFileType.AddOrSetValue('s3m', 'audio/s3m');\r\n  FFileType.AddOrSetValue('sil', 'audio/silk');\r\n  FFileType.AddOrSetValue('uva', 'audio/vnd.dece.audio');\r\n  FFileType.AddOrSetValue('uvva', 'audio/vnd.dece.audio');\r\n  FFileType.AddOrSetValue('eol', 'audio/vnd.digital-winds');\r\n  FFileType.AddOrSetValue('dra', 'audio/vnd.dra');\r\n  FFileType.AddOrSetValue('dts', 'audio/vnd.dts');\r\n  FFileType.AddOrSetValue('dtshd', 'audio/vnd.dts.hd');\r\n  FFileType.AddOrSetValue('lvp', 'audio/vnd.lucent.voice');\r\n  FFileType.AddOrSetValue('pya', 'audio/vnd.ms-playready.media.pya');\r\n  FFileType.AddOrSetValue('ecelp4800', 'audio/vnd.nuera.ecelp4800');\r\n  FFileType.AddOrSetValue('ecelp7470', 'audio/vnd.nuera.ecelp7470');\r\n  FFileType.AddOrSetValue('ecelp9600', 'audio/vnd.nuera.ecelp9600');\r\n  FFileType.AddOrSetValue('rip', 'audio/vnd.rip');\r\n  FFileType.AddOrSetValue('weba', 'audio/webm');\r\n  FFileType.AddOrSetValue('aac', 'audio/x-aac');\r\n  FFileType.AddOrSetValue('aif', 'audio/x-aiff');\r\n  FFileType.AddOrSetValue('aiff', 'audio/x-aiff');\r\n  FFileType.AddOrSetValue('aifc', 'audio/x-aiff');\r\n  FFileType.AddOrSetValue('caf', 'audio/x-caf');\r\n  FFileType.AddOrSetValue('flac', 'audio/x-flac');\r\n  FFileType.AddOrSetValue('mka', 'audio/x-matroska');\r\n  FFileType.AddOrSetValue('m3u', 'audio/x-mpegurl');\r\n  FFileType.AddOrSetValue('wax', 'audio/x-ms-wax');\r\n  FFileType.AddOrSetValue('wma', 'audio/x-ms-wma');\r\n  FFileType.AddOrSetValue('ram', 'audio/x-pn-realaudio');\r\n  FFileType.AddOrSetValue('ra', 'audio/x-pn-realaudio');\r\n  FFileType.AddOrSetValue('rmp', 'audio/x-pn-realaudio-plugin');\r\n  FFileType.AddOrSetValue('wav', 'audio/x-wav');\r\n  FFileType.AddOrSetValue('xm', 'audio/xm');\r\n  FFileType.AddOrSetValue('cdx', 'chemical/x-cdx');\r\n  FFileType.AddOrSetValue('cif', 'chemical/x-cif');\r\n  FFileType.AddOrSetValue('cmdf', 'chemical/x-cmdf');\r\n  FFileType.AddOrSetValue('cml', 'chemical/x-cml');\r\n  FFileType.AddOrSetValue('csml', 'chemical/x-csml');\r\n  FFileType.AddOrSetValue('xyz', 'chemical/x-xyz');\r\n  FFileType.AddOrSetValue('bmp', 'image/bmp');\r\n  FFileType.AddOrSetValue('cgm', 'image/cgm');\r\n  FFileType.AddOrSetValue('g3', 'image/g3fax');\r\n  FFileType.AddOrSetValue('gif', 'image/gif');\r\n  FFileType.AddOrSetValue('ief', 'image/ief');\r\n  FFileType.AddOrSetValue('jpeg', 'image/jpeg');\r\n  FFileType.AddOrSetValue('jpg', 'image/jpeg');\r\n  FFileType.AddOrSetValue('jpe', 'image/jpeg');\r\n  FFileType.AddOrSetValue('ktx', 'image/ktx');\r\n  FFileType.AddOrSetValue('png', 'image/png');\r\n  FFileType.AddOrSetValue('btif', 'image/prs.btif');\r\n  FFileType.AddOrSetValue('sgi', 'image/sgi');\r\n  FFileType.AddOrSetValue('svg', 'image/svg+xml');\r\n  FFileType.AddOrSetValue('svgz', 'image/svg+xml');\r\n  FFileType.AddOrSetValue('tiff', 'image/tiff');\r\n  FFileType.AddOrSetValue('tif', 'image/tiff');\r\n  FFileType.AddOrSetValue('psd', 'image/vnd.adobe.photoshop');\r\n  FFileType.AddOrSetValue('uvi', 'image/vnd.dece.graphic');\r\n  FFileType.AddOrSetValue('uvvi', 'image/vnd.dece.graphic');\r\n  FFileType.AddOrSetValue('uvg', 'image/vnd.dece.graphic');\r\n  FFileType.AddOrSetValue('uvvg', 'image/vnd.dece.graphic');\r\n  FFileType.AddOrSetValue('sub', 'image/vnd.dvb.subtitle');\r\n  FFileType.AddOrSetValue('djvu', 'image/vnd.djvu');\r\n  FFileType.AddOrSetValue('djv', 'image/vnd.djvu');\r\n  FFileType.AddOrSetValue('dwg', 'image/vnd.dwg');\r\n  FFileType.AddOrSetValue('dxf', 'image/vnd.dxf');\r\n  FFileType.AddOrSetValue('fbs', 'image/vnd.fastbidsheet');\r\n  FFileType.AddOrSetValue('fpx', 'image/vnd.fpx');\r\n  FFileType.AddOrSetValue('fst', 'image/vnd.fst');\r\n  FFileType.AddOrSetValue('mmr', 'image/vnd.fujixerox.edmics-mmr');\r\n  FFileType.AddOrSetValue('rlc', 'image/vnd.fujixerox.edmics-rlc');\r\n  FFileType.AddOrSetValue('mdi', 'image/vnd.ms-modi');\r\n  FFileType.AddOrSetValue('wdp', 'image/vnd.ms-photo');\r\n  FFileType.AddOrSetValue('npx', 'image/vnd.net-fpx');\r\n  FFileType.AddOrSetValue('wbmp', 'image/vnd.wap.wbmp');\r\n  FFileType.AddOrSetValue('xif', 'image/vnd.xiff');\r\n  FFileType.AddOrSetValue('webp', 'image/webp');\r\n  FFileType.AddOrSetValue('3ds', 'image/x-3ds');\r\n  FFileType.AddOrSetValue('ras', 'image/x-cmu-raster');\r\n  FFileType.AddOrSetValue('cmx', 'image/x-cmx');\r\n  FFileType.AddOrSetValue('fh', 'image/x-freehand');\r\n  FFileType.AddOrSetValue('fhc', 'image/x-freehand');\r\n  FFileType.AddOrSetValue('fh4', 'image/x-freehand');\r\n  FFileType.AddOrSetValue('fh5', 'image/x-freehand');\r\n  FFileType.AddOrSetValue('fh7', 'image/x-freehand');\r\n  FFileType.AddOrSetValue('ico', 'image/x-icon');\r\n  FFileType.AddOrSetValue('sid', 'image/x-mrsid-image');\r\n  FFileType.AddOrSetValue('pcx', 'image/x-pcx');\r\n  FFileType.AddOrSetValue('pic', 'image/x-pict');\r\n  FFileType.AddOrSetValue('pct', 'image/x-pict');\r\n  FFileType.AddOrSetValue('pnm', 'image/x-portable-anymap');\r\n  FFileType.AddOrSetValue('pbm', 'image/x-portable-bitmap');\r\n  FFileType.AddOrSetValue('pgm', 'image/x-portable-graymap');\r\n  FFileType.AddOrSetValue('ppm', 'image/x-portable-pixmap');\r\n  FFileType.AddOrSetValue('rgb', 'image/x-rgb');\r\n  FFileType.AddOrSetValue('tga', 'image/x-tga');\r\n  FFileType.AddOrSetValue('xbm', 'image/x-xbitmap');\r\n  FFileType.AddOrSetValue('xpm', 'image/x-xpixmap');\r\n  FFileType.AddOrSetValue('xwd', 'image/x-xwindowdump');\r\n  FFileType.AddOrSetValue('eml', 'message/rfc822');\r\n  FFileType.AddOrSetValue('mime', 'message/rfc822');\r\n  FFileType.AddOrSetValue('igs', 'model/iges');\r\n  FFileType.AddOrSetValue('iges', 'model/iges');\r\n  FFileType.AddOrSetValue('msh', 'model/mesh');\r\n  FFileType.AddOrSetValue('mesh', 'model/mesh');\r\n  FFileType.AddOrSetValue('silo', 'model/mesh');\r\n  FFileType.AddOrSetValue('dae', 'model/vnd.collada+xml');\r\n  FFileType.AddOrSetValue('dwf', 'model/vnd.dwf');\r\n  FFileType.AddOrSetValue('gdl', 'model/vnd.gdl');\r\n  FFileType.AddOrSetValue('gtw', 'model/vnd.gtw');\r\n  FFileType.AddOrSetValue('mts', 'model/vnd.mts');\r\n  FFileType.AddOrSetValue('vtu', 'model/vnd.vtu');\r\n  FFileType.AddOrSetValue('wrl', 'model/vrml');\r\n  FFileType.AddOrSetValue('vrml', 'model/vrml');\r\n  FFileType.AddOrSetValue('x3db', 'model/x3d+binary');\r\n  FFileType.AddOrSetValue('x3dbz', 'model/x3d+binary');\r\n  FFileType.AddOrSetValue('x3dv', 'model/x3d+vrml');\r\n  FFileType.AddOrSetValue('x3dvz', 'model/x3d+vrml');\r\n  FFileType.AddOrSetValue('x3d', 'model/x3d+xml');\r\n  FFileType.AddOrSetValue('x3dz', 'model/x3d+xml');\r\n  FFileType.AddOrSetValue('appcache', 'text/cache-manifest');\r\n  FFileType.AddOrSetValue('manifest', 'text/cache-manifest');\r\n  FFileType.AddOrSetValue('ics', 'text/calendar');\r\n  FFileType.AddOrSetValue('ifb', 'text/calendar');\r\n  FFileType.AddOrSetValue('cmd', 'text/cmd');\r\n  FFileType.AddOrSetValue('css', 'text/css');\r\n  FFileType.AddOrSetValue('csv', 'text/csv');\r\n  FFileType.AddOrSetValue('html', 'text/html');\r\n  FFileType.AddOrSetValue('htm', 'text/html');\r\n  FFileType.AddOrSetValue('n3', 'text/n3');\r\n  FFileType.AddOrSetValue('txt', 'text/plain');\r\n  FFileType.AddOrSetValue('text', 'text/plain');\r\n  FFileType.AddOrSetValue('conf', 'text/plain');\r\n  FFileType.AddOrSetValue('def', 'text/plain');\r\n  FFileType.AddOrSetValue('list', 'text/plain');\r\n  FFileType.AddOrSetValue('log', 'text/plain');\r\n  FFileType.AddOrSetValue('in', 'text/plain');\r\n  FFileType.AddOrSetValue('dsc', 'text/prs.lines.tag');\r\n  FFileType.AddOrSetValue('rtx', 'text/richtext');\r\n  FFileType.AddOrSetValue('sgml', 'text/sgml');\r\n  FFileType.AddOrSetValue('sgm', 'text/sgml');\r\n  FFileType.AddOrSetValue('tsv', 'text/tab-separated-values');\r\n  FFileType.AddOrSetValue('t', 'text/troff');\r\n  FFileType.AddOrSetValue('tr', 'text/troff');\r\n  FFileType.AddOrSetValue('roff', 'text/troff');\r\n  FFileType.AddOrSetValue('man', 'text/troff');\r\n  FFileType.AddOrSetValue('me', 'text/troff');\r\n  FFileType.AddOrSetValue('ms', 'text/troff');\r\n  FFileType.AddOrSetValue('ttl', 'text/turtle');\r\n  FFileType.AddOrSetValue('uri', 'text/uri-list');\r\n  FFileType.AddOrSetValue('uris', 'text/uri-list');\r\n  FFileType.AddOrSetValue('urls', 'text/uri-list');\r\n  FFileType.AddOrSetValue('vcard', 'text/vcard');\r\n  FFileType.AddOrSetValue('curl', 'text/vnd.curl');\r\n  FFileType.AddOrSetValue('dcurl', 'text/vnd.curl.dcurl');\r\n  FFileType.AddOrSetValue('scurl', 'text/vnd.curl.scurl');\r\n  FFileType.AddOrSetValue('mcurl', 'text/vnd.curl.mcurl');\r\n  FFileType.AddOrSetValue('sub', 'text/vnd.dvb.subtitle');\r\n  FFileType.AddOrSetValue('fly', 'text/vnd.fly');\r\n  FFileType.AddOrSetValue('flx', 'text/vnd.fmi.flexstor');\r\n  FFileType.AddOrSetValue('gv', 'text/vnd.graphviz');\r\n  FFileType.AddOrSetValue('3dml', 'text/vnd.in3d.3dml');\r\n  FFileType.AddOrSetValue('spot', 'text/vnd.in3d.spot');\r\n  FFileType.AddOrSetValue('jad', 'text/vnd.sun.j2me.app-descriptor');\r\n  FFileType.AddOrSetValue('wml', 'text/vnd.wap.wml');\r\n  FFileType.AddOrSetValue('wmls', 'text/vnd.wap.wmlscript');\r\n  FFileType.AddOrSetValue('s', 'text/x-asm');\r\n  FFileType.AddOrSetValue('asm', 'text/x-asm');\r\n  FFileType.AddOrSetValue('c', 'text/x-c');\r\n  FFileType.AddOrSetValue('cc', 'text/x-c');\r\n  FFileType.AddOrSetValue('cxx', 'text/x-c');\r\n  FFileType.AddOrSetValue('cpp', 'text/x-c');\r\n  FFileType.AddOrSetValue('h', 'text/x-c');\r\n  FFileType.AddOrSetValue('hh', 'text/x-c');\r\n  FFileType.AddOrSetValue('dic', 'text/x-c');\r\n  FFileType.AddOrSetValue('f', 'text/x-fortran');\r\n  FFileType.AddOrSetValue('for', 'text/x-fortran');\r\n  FFileType.AddOrSetValue('f77', 'text/x-fortran');\r\n  FFileType.AddOrSetValue('f90', 'text/x-fortran');\r\n  FFileType.AddOrSetValue('java', 'text/x-java-source');\r\n  FFileType.AddOrSetValue('opml', 'text/x-opml');\r\n  FFileType.AddOrSetValue('p', 'text/x-pascal');\r\n  FFileType.AddOrSetValue('pas', 'text/x-pascal');\r\n  FFileType.AddOrSetValue('nfo', 'text/x-nfo');\r\n  FFileType.AddOrSetValue('etx', 'text/x-setext');\r\n  FFileType.AddOrSetValue('sfv', 'text/x-sfv');\r\n  FFileType.AddOrSetValue('uu', 'text/x-uuencode');\r\n  FFileType.AddOrSetValue('vcs', 'text/x-vcalendar');\r\n  FFileType.AddOrSetValue('vcf', 'text/x-vcard');\r\n  FFileType.AddOrSetValue('vcf', 'text/x-yaml');\r\n  FFileType.AddOrSetValue('xml', 'text/xml');\r\n  FFileType.AddOrSetValue('xsl', 'text/xml');\r\n  FFileType.AddOrSetValue('dtd', 'text/xml-dtd');\r\n  FFileType.AddOrSetValue('yaml', 'text/yaml');\r\n  FFileType.AddOrSetValue('3gp', 'video/3gpp');\r\n  FFileType.AddOrSetValue('3g2', 'video/3gpp2');\r\n  FFileType.AddOrSetValue('h261', 'video/h261');\r\n  FFileType.AddOrSetValue('h263', 'video/h263');\r\n  FFileType.AddOrSetValue('h264', 'video/h264');\r\n  FFileType.AddOrSetValue('jpgv', 'video/jpeg');\r\n  FFileType.AddOrSetValue('jpm', 'video/jpm');\r\n  FFileType.AddOrSetValue('jpgm', 'video/jpm');\r\n  FFileType.AddOrSetValue('mj2', 'video/mj2');\r\n  FFileType.AddOrSetValue('mjp2', 'video/mj2');\r\n  FFileType.AddOrSetValue('mp4', 'video/mp4');\r\n  FFileType.AddOrSetValue('mp4v', 'video/mp4');\r\n  FFileType.AddOrSetValue('mpg4', 'video/mp4');\r\n  FFileType.AddOrSetValue('mpeg', 'video/mpeg');\r\n  FFileType.AddOrSetValue('mpg', 'video/mpeg');\r\n  FFileType.AddOrSetValue('mpe', 'video/mpeg');\r\n  FFileType.AddOrSetValue('m1v', 'video/mpeg');\r\n  FFileType.AddOrSetValue('m2v', 'video/mpeg');\r\n  FFileType.AddOrSetValue('ogv', 'video/ogg');\r\n  FFileType.AddOrSetValue('qt', 'video/quicktime');\r\n  FFileType.AddOrSetValue('mov', 'video/quicktime');\r\n  FFileType.AddOrSetValue('uvh', 'video/vnd.dece.hd');\r\n  FFileType.AddOrSetValue('uvvh', 'video/vnd.dece.hd');\r\n  FFileType.AddOrSetValue('uvm', 'video/vnd.dece.mobile');\r\n  FFileType.AddOrSetValue('uvvm', 'video/vnd.dece.mobile');\r\n  FFileType.AddOrSetValue('uvp', 'video/vnd.dece.pd');\r\n  FFileType.AddOrSetValue('uvvp', 'video/vnd.dece.pd');\r\n  FFileType.AddOrSetValue('uvs', 'video/vnd.dece.sd');\r\n  FFileType.AddOrSetValue('uvvs', 'video/vnd.dece.sd');\r\n  FFileType.AddOrSetValue('uvv', 'video/vnd.dece.video');\r\n  FFileType.AddOrSetValue('uvvv', 'video/vnd.dece.video');\r\n  FFileType.AddOrSetValue('dvb', 'video/vnd.dvb.file');\r\n  FFileType.AddOrSetValue('fvt', 'video/vnd.fvt');\r\n  FFileType.AddOrSetValue('mxu', 'video/vnd.mpegurl');\r\n  FFileType.AddOrSetValue('m4u', 'video/vnd.mpegurl');\r\n  FFileType.AddOrSetValue('pyv', 'video/vnd.ms-playready.media.pyv');\r\n  FFileType.AddOrSetValue('uvu', 'video/vnd.uvvu.mp4');\r\n  FFileType.AddOrSetValue('uvvu', 'video/vnd.uvvu.mp4');\r\n  FFileType.AddOrSetValue('viv', 'video/vnd.vivo');\r\n  FFileType.AddOrSetValue('webm', 'video/webm');\r\n  FFileType.AddOrSetValue('f4v', 'video/x-f4v');\r\n  FFileType.AddOrSetValue('fli', 'video/x-fli');\r\n  FFileType.AddOrSetValue('flv', 'video/x-flv');\r\n  FFileType.AddOrSetValue('m4v', 'video/x-m4v');\r\n  FFileType.AddOrSetValue('mkv', 'video/x-matroska');\r\n  FFileType.AddOrSetValue('mk3d', 'video/x-matroska');\r\n  FFileType.AddOrSetValue('mks', 'video/x-matroska');\r\n  FFileType.AddOrSetValue('mng', 'video/x-mng');\r\n  FFileType.AddOrSetValue('asf', 'video/x-ms-asf');\r\n  FFileType.AddOrSetValue('asx', 'video/x-ms-asf');\r\n  FFileType.AddOrSetValue('vob', 'video/x-ms-vob');\r\n  FFileType.AddOrSetValue('wm', 'video/x-ms-wm');\r\n  FFileType.AddOrSetValue('wmv', 'video/x-ms-wmv');\r\n  FFileType.AddOrSetValue('wmx', 'video/x-ms-wmx');\r\n  FFileType.AddOrSetValue('wvx', 'video/x-ms-wvx');\r\n  FFileType.AddOrSetValue('avi', 'video/x-msvideo');\r\n  FFileType.AddOrSetValue('movie', 'video/x-sgi-movie');\r\n  FFileType.AddOrSetValue('smv', 'video/x-smv');\r\n  FFileType.AddOrSetValue('ice', 'x-conference/x-cooltalk');\r\n  {$ENDREGION}\r\nend;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Agendamento_Linha171_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelAgendamento.EnviarEmail(const AAssunto, ADestino, AAnexo: String; ACorpo: String): Boolean;\r\nvar\r\n  IniFile              : TIniFile;\r\n  sFrom                : String;\r\n  sBccList             : String;\r\n  sHost                : String;\r\n  iPort                : Integer;\r\n  sUserName            : String;\r\n  sPassword            : String;\r\n\r\n  idMsg                : TIdMessage;\r\n  IdText               : TIdText;\r\n  idSMTP               : TIdSMTP;\r\n  IdSSLIOHandlerSocket : TIdSSLIOHandlerSocketOpenSSL;\r\nbegin\r\n  try\r\n    try\r\n      //Cria\u00E7\u00E3o e leitura do arquivo INI com as configura\u00E7\u00F5es\r\n      IniFile                          := TIniFile.Create(ExtractFilePath(ParamStr(0)) + 'Config.ini');\r\n      sFrom                            := IniFile.ReadString('Email' , 'From'     , sFrom);\r\n      sBccList                         := IniFile.ReadString('Email' , 'BccList'  , sBccList);\r\n      sHost                            := IniFile.ReadString('Email' , 'Host'     , sHost);\r\n      iPort                            := IniFile.ReadInteger('Email', 'Port'     , iPort);\r\n      sUserName                        := IniFile.ReadString('Email' , 'UserName' , sUserName);\r\n      sPassword                        := IniFile.ReadString('Email' , 'Password' , sPassword);\r\n\r\n      //Configura os par\u00E2metros necess\u00E1rios para SSL\r\n      IdSSLIOHandlerSocket                   := TIdSSLIOHandlerSocketOpenSSL.Create(nil);\r\n      IdSSLIOHandlerSocket.SSLOptions.Method := sslvSSLv23;\r\n      IdSSLIOHandlerSocket.SSLOptions.Mode   := sslmClient;\r\n\r\n      //Vari\u00E1vel referente a mensagem\r\n      idMsg                            := TIdMessage.Create;\r\n      idMsg.CharSet                    := 'utf-8';\r\n      idMsg.Encoding                   := meMIME;\r\n      idMsg.From.Name                  := 'Agendamento do Centro de Distribui\u00E7\u00E3o Nome do Centro';\r\n      idMsg.From.Address               := sFrom;\r\n      idMsg.Priority                   := mpNormal;\r\n      idMsg.Subject                    := AAssunto;\r\n\r\n      //Add Destinat\u00E1rio(s)\r\n      idMsg.Recipients.Add;\r\n      idMsg.Recipients.EMailAddresses := ADestino;\r\n      idMsg.CCList.EMailAddresses     := 'Comercial@conectsolutionsti.COM.BR';\r\n      idMsg.BccList.EMailAddresses    := sBccList;\r\n      //idMsg.BccList.EMailAddresses    := 'conectsolutions@hotmail.COM'; //C\u00F3pia Oculta\r\n\r\n      //Vari\u00E1vel do texto\r\n      idText := TIdText.Create(idMsg.MessageParts);\r\n      idText.Body.Add(ACorpo);\r\n      idText.ContentType := 'text/html; text/plain; charset=iso-8859-1';\r\n\r\n      //Prepara o Servidor\r\n      IdSMTP                           := TIdSMTP.Create;\r\n      IdSMTP.IOHandler                 := IdSSLIOHandlerSocket;\r\n      IdSMTP.UseTLS                    := utUseExplicitTLS;//utUseImplicitTLS;\r\n      IdSMTP.AuthType                  := satDefault;\r\n      IdSMTP.Host                      := sHost;\r\n      IdSMTP.Port                      := iPort;\r\n      IdSMTP.Username                  := sUserName;\r\n      IdSMTP.Password                  := sPassword;\r\n\r\n      //Conecta e Autentica\r\n      IdSMTP.Authenticate;\r\n      IdSMTP.Connect;\r\n\r\n\r\n      if AAnexo <> EmptyStr then\r\n        if FileExists(AAnexo) then\r\n          TIdAttachmentFile.Create(idMsg.MessageParts, AAnexo);\r\n\r\n      //Se a conex\u00E3o foi bem sucedida, envia a mensagem\r\n      if IdSMTP.Connected then\r\n      begin\r\n        try\r\n          IdSMTP.Send(idMsg);\r\n        except on E:Exception do\r\n          begin\r\n            ShowMessage('Erro ao tentar enviar: ' + E.Message);\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Agendamento_Linha275_Muitospar\u00E2metros.pas","smell":"Muitos par\u00E2metros","linha":7,"trecho":"class function TModelAgendamento.enviarEmail2(aSubject: string;aPlaca: String;aNF: Integer;aLocais: string;aTelefone: string;aEmail:string; aData: TDateTime; aHora: string; aObs:String): Boolean;"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Agendamento_Linha81_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"      procedure SetAllDayEvent(const Value: Boolean);\r\n      procedure SetEmail(const Value: string);\r\n      procedure SetEndTime(const Value: TDateTime);\r\n      procedure SetLabel01(const Value: string);\r\n      procedure SetLocais(const Value: string);\r\n      procedure SetLocation(const Value: string);\r\n      procedure SetMenssagem(const Value: string);\r\n      procedure SetNF(const Value: Integer);\r\n      procedure SetOption(const Value: Integer);\r\n      procedure SetParentID(const Value: Integer);\r\n      procedure SetPlaca(const Value: string);\r\n      procedure SetRecurrenceIndex(const Value: Integer);\r\n      procedure SetRecurrenceInfo(const Value: TBlob);\r\n      procedure SetReminderDate(const Value: TDateTime);\r\n      procedure SetReminderMinutesBeforeStart(const Value: Integer);\r\n      procedure SetRemindResourceData(const Value: TDateTime);\r\n      procedure SetResourceID(const Value: Integer);\r\n      procedure SetStart(const Value: TDateTime);\r\n      procedure SetStarTime(const Value: TDateTime);\r\n      procedure SetState(const Value: Integer);\r\n      procedure Setsubject(const Value: string);\r\n      procedure SetTaskCompleteField(const Value: Integer);\r\n      procedure SetTaskIndexField(const Value: Integer);\r\n      procedure SetTaskLinksField(const Value: TBlob);\r\n      procedure SetTaskStatusField(const Value: Integer);\r\n      procedure SetTelefone(const Value: string);\r\n      procedure SetObs(const Value: string);\r\n      procedure SetHora(const Value: TTime);\r\n\r\n\r\n    public\r\n      //Campos originais da tabela\r\n      property subject  : string read Fsubject write Setsubject;\r\n      property Menssagem: string read FMenssagem write SetMenssagem;\r\n      property Option: Integer read FOption write SetOption;\r\n      property ParentID: Integer read FParentID write SetParentID;\r\n      property RecurrenceIndex: Integer read FRecurrenceIndex write SetRecurrenceIndex;\r\n      property RecurrenceInfo: TBlob read FRecurrenceInfo write SetRecurrenceInfo;\r\n      property ReminderDate: TDateTime read FReminderDate write SetReminderDate;\r\n      property ReminderMinutesBeforeStart: Integer read FReminderMinutesBeforeStart write SetReminderMinutesBeforeStart;\r\n      property RemindResourceData: TDateTime read FRemindResourceData write SetRemindResourceData;\r\n      property ResourceID: Integer read FResourceID write SetResourceID;\r\n      property Start: TDateTime read FStart write SetStart;\r\n      property State: Integer read FState write SetState;\r\n      property TaskCompleteField: Integer read FTaskCompleteField write SetTaskCompleteField;\r\n      property TaskIndexField: Integer read FTaskIndexField write SetTaskIndexField;\r\n      property TaskLinksField: TBlob read FTaskLinksField write SetTaskLinksField;\r\n      property TaskStatusField: Integer read FTaskStatusField write SetTaskStatusField;\r\n      property Placa: string read FPlaca write SetPlaca;\r\n\r\n      property Location : string read FLocation write SetLocation;\r\n      //da tela de agendamento\r\n      property Label01  : string read FLabel01 write SetLabel01;\r\n      property StarTime : TDateTime read FStarTime write SetStarTime;\r\n      property EndTime  : TDateTime read FEndTime write SetEndTime;\r\n      property AllDayEvent : Boolean read FAllDayEvent write SetAllDayEvent;\r\n\r\n      //Campo criados\r\n      property Locais: string read FLocais write SetLocais;\r\n      property NF: Integer read FNF write SetNF;\r\n      property Telefone: string read FTelefone write SetTelefone;\r\n      property Email: string read FEmail write SetEmail;\r\n      property Obs: string read FObs write SetObs;\r\n      property Hora: TTime read FHora write SetHora;\r\n\r\n      class function enviarEmail2(aSubject: string;aPlaca: String;aNF: Integer;aLocais: string;aTelefone: string;aEmail:string; aData: TDateTime; aHora: string; aObs:String): Boolean;\r\n      class function EnviarEmail(const AAssunto, ADestino, AAnexo: String; ACorpo: String): Boolean;\r\n\r\n      procedure EditarEmailEnviado;\r\n\r\n      constructor create;\r\n      destructor destroy;override;\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Categorias_Linha380_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelCategorias.SalvarCategoria(\r\n  aCategoria: TCategorias): Boolean;\r\nvar\r\n  qry             : TFDQuery;\r\n  Ativo           : string;\r\n  LogManager      : TLogManager;\r\n  CurrentDateTime : TDateTime;\r\n  DateTimeStr     : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' fulanorodas.categoria  ' +\r\n                '(idcategorias,          ' +   //1\r\n                'categoria,              ' +   //2\r\n                'ativo,                  ' +   //3\r\n                'datacadastro,           ' +   //4\r\n                'dataalteracao,          ' +   //5\r\n                'dataexclusao            ' +   //6\r\n                ')                       ' +\r\n                'VALUES (                ' +\r\n                ':idcategorias,          ' +   //1 ok\r\n                ':categoria,             ' +   //2 ok\r\n                ':ativo,                 ' +   //3 ok\r\n                ':datacadastro,          ' +   //4 ok\r\n                ':dataalteracao,         ' +   //5 ok\r\n                ':dataexclusao           ' +   //6 ok\r\n                ')                       ');\r\n\r\n     qry.ParamByName('idcategorias').DataType  := ftInteger;            //1\r\n\r\n     qry.ParamByName('categoria').DataType     := ftString;\r\n     qry.ParamByName('categoria').AsString     := aCategoria.categoria; //2\r\n\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString;\r\n     if Length(aCategoria.ativo) > 0 then\r\n       Ativo := Copy(aCategoria.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo;               //3\r\n\r\n     qry.ParamByName('datacadastro').DataType  := ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime:= Now;                 //4\r\n\r\n     qry.ParamByName('dataalteracao').DataType  := ftDateTime;         //5\r\n     qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n     qry.ParamByName('dataexclusao').DataType := ftDateTime;\r\n     qry.ParamByName('dataexclusao').AsDateTime:= aCategoria.dataExclusao; //6\r\n\r\n     //CarregarFGravarLog;\r\n\r\n     if FGravarLogs then\r\n       qry.SQL.SaveToFile('C:\\CategoriasSQL.txt');\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        Result := False;\r\n        ShowMessage('Ocorreu um erro ao salvar a categoria: ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n\r\n        if True then\r\n        begin\r\n          LogManager:= TLogManager.Create;\r\n          try\r\n            CurrentDateTime := Now;\r\n            DateTimeStr     := FormatDateTime('yyyy-mm-dd hh:nn:ss', CurrentDateTime);\r\n            LogManager.AddLog('Classe Model.Categoria - Linha : 460 - Finalizou o Alterar Categoria finalizou qry \u00E0s '+ DateTimeStr);\r\n            LogManager.SaveLogToFile('Log_Model_Categorias.txt');\r\n          finally\r\n            LogManager.Free;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Clientes_Linha580_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelCliente.SalvarCliente(aCliente: TClientes): Boolean;\r\nvar\r\n  qry             : TFDQuery;\r\n  Ativo           : string;\r\n  UF              : string;\r\n  LogManager      : TLogManager;\r\n  CurrentDateTime : TDateTime;\r\n  DateTimeStr     : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' fulanorodas.Clientes ' +\r\n                '(idclientes,          ' +   //1\r\n                'razao,                ' +   //2\r\n                'cnpj_cpf,             ' +   //3\r\n                'endereco,             ' +   //4\r\n                'numero,               ' +   //5\r\n                'complemento,          ' +   //6\r\n                'cep,                  ' +   //7\r\n                'cidade,               ' +   //8\r\n                'bairro,               ' +   //9\r\n                'ativo,                ' +   //10\r\n                'uf,                   ' +   //11\r\n                'datacadastro,         ' +   //12\r\n                'dataalteracao,        ' +   //13\r\n               // 'dataexclusao,       ' +   //14\r\n                'idmodelocarro         ' +   //15\r\n                ')                     ' +\r\n                'VALUES (              ' +\r\n                ':idclientes,          ' +   //1 ok\r\n                ':razao,               ' +   //2 ok\r\n                ':cnpj_cpf,            ' +   //3 ok\r\n                ':endereco,            ' +   //4 ok\r\n                ':numero,              ' +   //5 ok\r\n                ':complemento,         ' +   //6 ok\r\n                ':cep,                 ' +   //7 ok\r\n                ':cidade,              ' +   //8 ok\r\n                ':bairro,              ' +   //9 ok\r\n                ':ativo,               ' +   //10 ok\r\n                ':uf,                  ' +   //11 ok\r\n                ':datacadastro,        ' +   //12 ok\r\n                ':dataalteracao,       ' +   //13 ok\r\n              //  ':dataexclusao,        ' + //14 ok\r\n                ':idmodelocarro        ' +   //15 ok\r\n                ')                     ');\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;            //1\r\n\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := aCliente.razaosocial; //2\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := aCliente.cnpj ;       //3\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := aCliente.endereco;    //4\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := aCliente.numero;      //5\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := aCliente.complemento; //6\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := aCliente.CEP;         //7\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := aCliente.Cidade;      //8\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := aCliente.Bairro;      //9\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString;\r\n     if Length(aCliente.ativo) > 0 then\r\n       Ativo := Copy(aCliente.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo;               //10\r\n\r\n     qry.ParamByName('uf').DataType            := ftString;\r\n     if Length(aCliente.UF) > 0 then\r\n       UF := Copy(aCliente.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF;                  //11\r\n\r\n     qry.ParamByName('datacadastro').DataType  := ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime:= Now;                 //12\r\n\r\n     qry.ParamByName('dataalteracao').DataType  := ftDateTime;         //13\r\n     qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n//     qry.ParamByName('dataexclusao').DataType := ftDateTime;\r\n//     qry.ParamByName('dataexclusao').AsDateTime:= aCliente.dataExclusao; //14\r\n\r\n     qry.ParamByName('idmodelocarro').DataType := ftInteger;\r\n     qry.ParamByName('idmodelocarro').AsInteger:= aCliente.Idmodelocarro; //15\r\n\r\n     CarregarFGravarLog;\r\n\r\n     if FGravarLogs then\r\n       qry.SQL.SaveToFile('C:\\ClientesSQL.txt');\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        Result := False;\r\n        ShowMessage('Ocorreu um erro ao salvar o cliente: ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n\r\n        if True then\r\n        begin\r\n          LogManager:= TLogManager.Create;\r\n          try\r\n            CurrentDateTime := Now;\r\n            DateTimeStr     := FormatDateTime('yyyy-mm-dd hh:nn:ss', CurrentDateTime);\r\n            LogManager.AddLog('Classe Model.Clientes - Linha : 629 - Finalizou o Alterar Cliente finalizou qry \u00E0s '+ DateTimeStr);\r\n            LogManager.SaveLogToFile('Log_Model_Clientes.txt');\r\n          finally\r\n            LogManager.Free;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Contatos_Linha253_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelContato.SalvarContato(aContato: TContato; aCliente: TClientes): Boolean;\r\nvar\r\n  qry        : TFDQuery;\r\n  Ativo      : string;\r\n  UF         : string;\r\n  LogManager : TLogManager;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n     qry.Close;\r\n     qry.SQL.Clear;\r\n     qry.SQL.Add('INSERT INTO     ' +\r\n                  'idcontatos,     ' +\r\n                  'idcliente,      ' +\r\n                  'telefone,       ' +\r\n                  'celular,        ' +\r\n                  'email,          ' +\r\n                  'datacadastro    ' +\r\n                  'dataalteracao,  ' +\r\n                  'cnpjrevenda,    ' +\r\n                  'ativo,          ' +\r\n                  'nomecontato)    ' +\r\n                  'VALUES(         ' +\r\n                  ':idcontatos,    ' +\r\n                  ':idcliente,     ' +\r\n                  ':telefone,      ' +\r\n                  ':celular,       ' +\r\n                  ':email,         ' +\r\n                  ':datacadastro   ' +\r\n                  ':dataalteracao, ' +\r\n                  ':cnpjrevenda,   ' +\r\n                  ':ativo,         ' +\r\n                  ':nomecontato)   ');\r\n\r\n     qry.ParamByName('idcontatos').DataType      := ftInteger;\r\n     qry.ParamByName('idcliente').DataType       := ftInteger;\r\n     qry.ParamByName('idcliente').AsInteger      := aCliente.idcliente;\r\n     qry.ParamByName('telefone').DataType        := ftString;\r\n     qry.ParamByName('telefone').AsString        := aContato.telefone;\r\n     qry.ParamByName('celular').DataType         := ftString;\r\n     qry.ParamByName('celular').AsString         := aContato.celular;\r\n     qry.ParamByName('email').DataType           := ftString;\r\n     qry.ParamByName('email').AsString           := aContato.email;\r\n     qry.ParamByName('datacadastro').DataType    := ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime  := Now;\r\n     qry.ParamByName('dataalteracao').DataType   := ftDateTime;\r\n     qry.ParamByName('dataalteracao').AsDateTime := Now;\r\n     qry.ParamByName('cnpjrevenda').DataType     := ftString;\r\n     qry.ParamByName('cnpjrevenda').AsString     := aContato.cnpjrevenda;\r\n     qry.ParamByName('ativo').DataType           := ftString;\r\n\r\n     qry.ParamByName('ativo').DataType           := ftString;\r\n     if Length(aContato.ativo) > 0 then\r\n       Ativo := Copy(aContato.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString           := Ativo;\r\n\r\n     qry.ParamByName('ativo').AsString           := aContato.ativo;\r\n\r\n     qry.ParamByName('nomecontato').DataType     := ftString;\r\n     qry.ParamByName('nomecontato').AsString     := aContato.NomeContato;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result:=True;\r\n\r\n  Except\r\n    on E: Exception do\r\n    begin\r\n      Result:= False;\r\n      qry.Connection.Rollback;\r\n      ShowMessage('Houve um erro ao gravar os dados do contato' + E.Message);\r\n      qry.Close;\r\n      qry.Free;\r\n\r\n      if True then\r\n\r\n      LogManager := TLogManager.Create;\r\n      try\r\n        LogManager.SaveLogToFile('Log_Model_Contatos.txt');\r\n        LogManager.AddLog('Saiu na Model.Contatos - SalvarContato: Linha 320: e deu erro ao gravar o contato.');\r\n      finally\r\n        LogManager.Free;\r\n      end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Fabricantes_Linha306_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelFabricante.SalvarFabricante(\r\n  aFabricante: TFabricante): Boolean;\r\nvar\r\n  qry   : TFDQuery;\r\n  Ativo : string;\r\n  UF    : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '     +\r\n                ' fabricantes '    +\r\n                '(idfabricantes, ' +\r\n                'razao, '          +\r\n                'cnpj, '           +\r\n                'endereco, '       +\r\n                'numero, '         +\r\n                'complemento, '    +\r\n                'cep, '            +\r\n                'cidade, '         +\r\n                'bairro, '         +\r\n                'ativo, '          +\r\n                'datacadastro, '   +\r\n                'dataalteracao, '  +\r\n//                'dataexclusao, '   +\r\n                'uf) '             +\r\n                'VALUES ('         +\r\n                ':idclientes, '    +\r\n                ':razao, '         +\r\n                ':cnpj_cpf, '      +\r\n                ':endereco, '      +\r\n                ':numero,  '       +\r\n                ':complemento, '   +\r\n                ':cep, '           +\r\n                ':cidade, '        +\r\n                ':bairro, '        +\r\n                ':ativo, '         +\r\n                ':datacadastro, '  +\r\n                ':dataalteracao, ' +\r\n//                ':dataexclusao, '  +\r\n                ':uf)');\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := aFabricante.razaosocial;\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := aFabricante.cnpj ;\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := aFabricante.endereco;\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := aFabricante.numero;\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := aFabricante.complemento;\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := aFabricante.CEP;\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := aFabricante.Cidade;\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := aFabricante.Bairro;\r\n\r\n     qry.ParamByName('uf').DataType            := ftString;\r\n     if Length(aFabricante.UF) > 0 then\r\n       UF := Copy(aFabricante.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF;\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString;\r\n     if Length(aFabricante.ativo) > 0 then\r\n       Ativo := Copy(aFabricante.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo;\r\n\r\n     qry.ParamByName('datacadastro').DataType:= ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime:= Now;\r\n\r\n     qry.ParamByName('dataalteracao').DataType:= ftDateTime;\r\n     qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result:=True;\r\n\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        ShowMessage('Ocorreu um erro ao tentar salvar o fabricante : ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n        qry.Free;\r\n      end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Fabricantes_Linha64_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelFabricante.AlterarFabricante(\r\n  aFabricante: TFabricante): Boolean;\r\nvar\r\n   qry: TFDQuery;\r\n   UF: String;\r\n   Ativo: String;\r\nbegin\r\n  Result:=False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Text:='UPDATE FABRICANTES              ' +\r\n                  'SET                             ' +\r\n                  'idfabricantes = :idfabricantes, ' +\r\n                  'razao         = :razao,         ' +\r\n                  'cnpj          = :cnpj,          ' +\r\n                  'endereco      = :endereco,      ' +\r\n                  'numero        = :numero,        ' +\r\n                  'complemento   = :complemento,   ' +\r\n                  'cep           = :cep,           ' +\r\n                  'cidade        = :cidade,        ' +\r\n                  'bairro        = :bairro,        ' +\r\n                  'ativo         = :ativo,         ' +\r\n                  'uf            = :uf,            ' +\r\n                  'datacadastro  = now,            ' +\r\n                  'datalateracao = now,            ' +\r\n                  'WHERE                           ' +\r\n                  'CNPJ          = :CNPJ           ';\r\n\r\n    qry.ParamByName('idfabricantes').DataType   := ftInteger;\r\n    qry.ParamByName('idfabricantes').AsInteger  := aFabricante.idFabricantes;\r\n    qry.ParamByName('razao').DataType           := ftString;\r\n    qry.ParamByName('razao').AsString           := aFabricante.razaosocial;\r\n    qry.ParamByName('cnpj').DataType            := ftString;\r\n    qry.ParamByName('cnpj').AsString            := aFabricante.cnpj ;\r\n    qry.ParamByName('endereco').DataType        := ftString;\r\n    qry.ParamByName('endereco').AsString        := aFabricante.endereco;\r\n    qry.ParamByName('numero').DataType          := ftInteger;\r\n    qry.ParamByName('numero').AsInteger         := aFabricante.numero;\r\n    qry.ParamByName('complemento').DataType     := ftString;\r\n    qry.ParamByName('complemento').AsString     := aFabricante.complemento;\r\n    qry.ParamByName('cep').DataType             := ftString;\r\n    qry.ParamByName('cep').AsString             := aFabricante.CEP;\r\n    qry.ParamByName('cidade').DataType          := ftString;\r\n    qry.ParamByName('cidade').AsString          := aFabricante.Cidade;\r\n    qry.ParamByName('bairro').DataType          := ftString;\r\n    qry.ParamByName('bairro').AsString          := aFabricante.Bairro;\r\n\r\n    qry.ParamByName('uf').DataType              := ftString;\r\n\r\n    if Length(aFabricante.UF) > 0 then\r\n      UF := Copy(aFabricante.UF, 1, 2)\r\n    else\r\n      UF := '';\r\n\r\n    qry.ParamByName('uf').AsString              := UF;\r\n\r\n    qry.ParamByName('ativo').DataType           := ftString;\r\n    if Length(aFabricante.ativo) > 0 then\r\n      Ativo := Copy(aFabricante.ativo, 1, 1)\r\n    else\r\n      Ativo := '';\r\n\r\n    qry.ParamByName('ativo').AsString           := Ativo;\r\n\r\n    qry.ParamByName('dataalteracao').DataType   := ftDatetime;\r\n    qry.ParamByName('dataalteracao').AsDateTime := aFabricante.DataAlteracao;\r\n\r\n    qry.ParamByName('CNPJ').DataType            := ftString;\r\n    qry.ParamByName('CNPJ').AsString            := aFabricante.cnpj;\r\n\r\n    qry.ExecSQL;\r\n    qry.connection.Commit;\r\n\r\n    Result:=True;\r\n\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        ShowMessage('Ocorreu um erro ao tentar atualizar o fabricante : ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n        qry.Free;\r\n      end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Produtos_Linha630_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelProduto.SalvarProduto(aProduto: TProduto): Boolean;\r\nvar\r\n  qry             : TFDQuery;\r\n  Ativo           : string;\r\n  UF              : string;\r\n  LogManager      : TLogManager;\r\n  CurrentDateTime : TDateTime;\r\n  DateTimeStr     : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' fulanorodas.Produtos ' +\r\n                '(idprodutos,          ' +   //1\r\n                'produto,              ' +   //2\r\n                'foto,                 ' +   //3\r\n                'preco,                ' +   //4\r\n                'aro,                  ' +   //5\r\n                'idFabricante,         ' +   //6\r\n                'datainclusao,         ' +   //7\r\n                'dataalteracao,        ' +   //8\r\n                'dataexclusao,         ' +   //9\r\n                'ativo,                ' +   //10\r\n                'lancamento,           ' +   //11\r\n                'furacao,              ' +   //12\r\n                'offset_et,            ' +   //13\r\n                'idlinha,              ' +   //14\r\n                'idacabamento          ' +   //15\r\n                ')                     ' +\r\n                'VALUES (              ' +\r\n                ':idprodutos,          ' +   //1 ok\r\n                ':produto,             ' +   //2 ok\r\n                ':foto,                ' +   //3 ok\r\n                ':preco,               ' +   //4 ok\r\n                ':aro,                 ' +   //5 ok\r\n                ':idFabricante,        ' +   //6 ok\r\n                ':datainclusao,        ' +   //7 ok\r\n                ':dataalteracao,       ' +   //8 ok\r\n                ':dataexclusao,        ' +   //9 ok\r\n                ':ativo,               ' +   //10 ok\r\n                ':lancamento,          ' +   //11 ok\r\n                ':furacao,             ' +   //12 ok\r\n                ':offset_et,           ' +   //13 ok\r\n                ':idlinha,             ' +   //14 ok\r\n                ':idacabamento         ' +   //15 ok\r\n                ')                     ');\r\n\r\n     qry.ParamByName('idprodutos').DataType    := ftInteger;               //1\r\n\r\n     qry.ParamByName('produto').DataType         := ftString;\r\n     qry.ParamByName('produto').AsString         := aProduto.produto;      //2\r\n     qry.ParamByName('foto').DataType            := ftStream;\r\n     qry.ParamByName('foto').AsStream            := aProduto.foto;         //3 - Verificar\r\n     qry.ParamByName('preco').DataType           := ftCurrency;\r\n     qry.ParamByName('preco').AsCurrency         := aProduto.preco;        //4\r\n     qry.ParamByName('aro').DataType             := ftInteger;\r\n     qry.ParamByName('aro').AsInteger            := aProduto.aro;          //5\r\n     qry.ParamByName('idfabricante').DataType    := ftInteger;\r\n     qry.ParamByName('idfabricante').AsInteger   := aProduto.idfabricante; //6\r\n     qry.ParamByName('datainclusao').DataType    := ftDateTime;\r\n     qry.ParamByName('datainclusao').AsDateTime  := Now;                   //7\r\n     qry.ParamByName('dataalteracao').DataType   := ftDateTime;\r\n     qry.ParamByName('dataalteracao').AsDateTime := Now;                   //8\r\n     //qry.ParamByName('dataexclusao').DataType    := ftDateTime;\r\n     //qry.ParamByName('dataexclusao').AsDateTime  := Now;                 //9\r\n\r\n     qry.ParamByName('ativo').DataType           := ftString;\r\n     if Length(aProduto.ativo) > 0 then\r\n       Ativo := Copy(aProduto.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString           := Ativo;                 //10\r\n\r\n     qry.ParamByName('lancamento').DataType      := ftString;\r\n     qry.ParamByName('lancamento').AsString      := aProduto.lancamento;   //11\r\n     qry.ParamByName('furacao').DataType         := ftInteger;\r\n     qry.ParamByName('furacao').AsInteger        := aProduto.furacao;      //12\r\n     qry.ParamByName('offset_et').DataType       := ftInteger;\r\n     qry.ParamByName('offset_et').AsInteger      := aProduto.OffsetEt;     //13\r\n     qry.ParamByName('idlinha').DataType         := ftInteger;\r\n     qry.ParamByName('idlinha').AsInteger        := aProduto.idlinha;      //14\r\n     qry.ParamByName('idacabamento').DataType    := ftInteger;\r\n     qry.ParamByName('idacabamento').AsInteger   := aProduto.idacabamento; //15\r\n\r\n     CarregarFGravarLog;\r\n\r\n     if FGravarLogs then\r\n       qry.SQL.SaveToFile('C:\\ProdutosSQL.txt');\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        Result := False;\r\n        ShowMessage('Ocorreu um erro ao salvar o produto: ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n\r\n        if True then\r\n        begin\r\n          LogManager:= TLogManager.Create;\r\n          try\r\n            CurrentDateTime := Now;\r\n            DateTimeStr     := FormatDateTime('yyyy-mm-dd hh:nn:ss', CurrentDateTime);\r\n            LogManager.AddLog('Classe Model.Produtos - Linha : 271 - Finalizou o salvar produto finalizou qry \u00E0s ' + DateTimeStr);\r\n            LogManager.SaveLogToFile('Log_Model_Produtos.txt');\r\n          finally\r\n            LogManager.Free;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Registro_Linha273_M\u00E9todomuitolongo.pas","smell":"Uso de with","linha":38,"trecho":"with qry do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Registro_Linha273_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"function TModelRegistro.GerarSerial: string;\r\nvar\r\n  x:string;\r\n  Y:string;\r\n  z:string;\r\n  data : TDateTime;\r\n  qry, qry2: TFDQuery;\r\n  Registrarfrm: TFrmRegistrar;\r\nbegin\r\n  Result:= '';\r\n  FSWbemLocator := CreateOleObject('WbemScripting.SWbemLocator');\r\n  FWMIService   := FSWbemLocator.ConnectServer('localhost', 'root\\CIMV2', '', '');\r\n  X:=Trim(GetWMIstring('Win32_BIOS','SerialNumber')); //Serial da Bios\r\n  Y:=Trim(GetWMIstring('Win32_PhysicalMedia','SerialNumber')); //Serial do HD\r\n\r\n  //label6.Caption:= x;\r\n  //label4.Caption:= y;\r\n  z:=x+y+(DateToStr(date));\r\n  //label5.Caption:=z;\r\n  Result:= z;\r\n\r\n  qry:= TFDquery.Create(nil);\r\n  qry.Connection  := TConexaoLicencas.CreateConnection;\r\n  try\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('select * from registro');\r\n    qry.SQL.Add('');\r\n\r\n    qry.ExecSQL;\r\n    qry.Connection.Commit;\r\n\r\n    with qry do\r\n\r\n     //FDQuery1.Edit;\r\n     //Desabilitar botao Geral Serial\r\n     //Edit1.Enabled:=False;\r\n     //BtnRegistrar.Enabled:=False;\r\n     //Button1.Enabled:=False;\r\n     //PageControl1.Pages[1].TabVisible := False;\r\n     // fim\r\n\r\n\r\n     qry.FieldByName('chave').AsString      := z;\r\n     qry.FieldByName('Data_inc').AsDateTime := Date;\r\n     Data := date;\r\n     qry.FieldByName('Data_exp').AsDateTime:=Data;\r\n     //ShowMessage(DateToStr(Data+30));\r\n     qry.FieldByName('serialhd').AsString:=y;\r\n\r\n     qry.FieldByName('ID_Chave').AsInteger := qry2.FieldByName('ID_Chave').AsInteger;\r\n\r\n     qry.FieldByName('contrasenha').AsString:='0';\r\n     qry.FieldByName('ativado').AsString:='N';\r\n     qry.Post;\r\n\r\n  finally\r\n     qry.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Registro_Linha304_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with qry do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Registro_Linha354_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelRegistro.GravarContraSenha(\r\n  aRegistro: TModelRegistro): Boolean;\r\nvar\r\n  qry: TFDQuery;\r\nbegin\r\n  Result := False;\r\n  qry:= TFDQuery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  //Checar se a CONTRASENHA Existe se n\u00E3o avisar ao usu\u00E1rio que a Contra Senha est\u00E1 errada e encerrar o programa?\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('select contrasenha from registro');\r\n    qry.SQL.Add(' where contrasenha = :contrasenha');\r\n    qry.ParamByName('contrasenha').DataType := ftString;\r\n    qry.ParamByName('contrasenha').AsString := aRegistro.ContraSenha;\r\n    qry.Open;\r\n\r\n    if qry.RecordCount > 0 then //Encontrou a ContraSenha faz o update\r\n    begin\r\n      qry.Connection.StartTransaction;\r\n      try\r\n        qry.close;\r\n        qry.SQL.Clear;\r\n\r\n        qry.SQL.Text:='UPDATE LICENCAS.REGISTRO      ' +\r\n                      'SET                           ' +\r\n                     // 'ID           = :id,           ' +\r\n                     // 'ID_CHAVE     = :ID_CHAVE,     ' +\r\n                     // 'CHAVE        = :CHAVE,        ' +\r\n                      'DATA_INC     = :DATA_INC,     ' +\r\n                      'DATA_EXP     = :DATA_EXP,     ' +\r\n                      'CONTRASENHA  = :CONTRASENHA,  ' +\r\n                      'ATIVADO      = :ATIVADO,      ' +\r\n                    //  'SERIALHD     = :SERIALHD      ' +\r\n                      'WHERE                         ' +\r\n                      'CONTRASENHA     = :CONTRASENHA      ';\r\n\r\n\r\n        qry.ParamByName('DATA_INC').DataType     := ftDate;\r\n        qry.ParamByName('DATA_INC').AsDateTime   := Now;\r\n        qry.ParamByName('DATA_EXP').DataType     := ftDate;\r\n        qry.ParamByName('DATA_EXP').AsDate       := aRegistro.Data_exp + 30;\r\n        qry.ParamByName('CONTRASENHA').DataType  := ftString;\r\n        qry.ParamByName('CONTRASENHA').AsString  := aRegistro.ContraSenha;\r\n        qry.ParamByName('ATIVADO').DataType      := ftString;\r\n        qry.ParamByName('ATIVADO').AsString      := aRegistro.ativo;\r\n\r\n        qry.ExecSQL;\r\n        qry.Connection.Commit;\r\n\r\n        Result := True;\r\n      Except\r\n      On E: Exception do\r\n        begin\r\n           Showmessage('Erro ao gravar tabela registro!'+ E.Message);\r\n           qry.Connection.Rollback;\r\n           Result := False;\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Registro_Linha426_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelRegistro.GravarNoBancoLicencas(\r\n  aRegistro: TModelRegistro): Boolean;\r\nvar\r\n  qry   : TFDQuery;\r\n  Ativo : string;\r\n  UF    : string;\r\n  idChave : integer;\r\nbegin\r\n  //Testar se a Licen\u00E7a j\u00E1 existe no banco de dados  buscar pelo cnpj  trazer o id e pesquisar na tabela registro\r\n  //Se j\u00E1 existir o cnpj na tabela chaves e estiver aguardando a grava\u00E7\u00E3o da contrasenha na tabela registro o que fazer?\r\n  // Informar o usu\u00E1rio que est\u00E1 aguardando a contrasenha e pular fora?\r\n  qry:= TFDquery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('Select * from chaves');\r\n    qry.SQL.Add(' where cnpj =:cnpj');\r\n    qry.ParamByName('cnpj').DataType := ftString;\r\n    qry.ParamByName('cnpj').AsString := aRegistro.cnpj;\r\n    qry.Open;\r\n\r\n    if qry.RecordCount > 0 then //O registro dos dados do cliente existe na tabela chaves\r\n    begin\r\n      ShowMessage('Registro encontrado');\r\n      idChave:= qry.FieldByName('id_chave').AsInteger;\r\n\r\n      qry.Close;\r\n      qry.SQL.Clear;\r\n      qry.SQL.Add('Select contrasenha from registro');\r\n      qry.SQL.Add(' where id_chave=:id_chave');\r\n      qry.ParamByName('id_chave').DataType  := ftInteger;\r\n      qry.ParamByName('id_chave').AsInteger := idChave;\r\n      qry.Open;\r\n\r\n      if (qry.RecordCount > 0) and (qry.fieldbyname('contrasenha').AsString='') then\r\n      begin\r\n          //Gravar no Banco primeiro registro\r\n          qry:= TFDquery.Create(nil);\r\n          qry.Connection := TConexaoLicencas.CreateConnection;\r\n          qry.Connection.StartTransaction;\r\n          try\r\n            qry.Close;\r\n            qry.SQL.Clear;\r\n            qry.SQL.Add('INSERT INTO      ' +\r\n                        ' licencas.chaves ' +\r\n                        '(id_chave,       ' + //1\r\n                        'razao,           ' + //2\r\n                        'cnpj,            ' + //3\r\n                        'ie,              ' + //4\r\n                        'im,              ' + //5\r\n                        'endereco,        ' + //6\r\n                        'numero,          ' + //7\r\n                        'complemento,     ' + //8\r\n                        'bairro,          ' + //9\r\n                        'cidade,          ' + //10\r\n                        'cep,             ' + //11\r\n                        'uf,              ' + //12\r\n                        'ativo,           ' + //13\r\n                        'contato,         ' + //14\r\n                        'telcontato,      ' + //15\r\n                        'email,           ' + //16\r\n                        'datacadastro,    ' + //17\r\n                        'dataalteracao    ' + //18\r\n                       // 'dataexclusao   ' + //19\r\n                        ')                ' +\r\n                        'VALUES (         ' +\r\n                        ':id_chave,       ' + //1 ok\r\n                        ':razao,          ' + //2 ok\r\n                        ':cnpj,           ' + //3 ok\r\n                        ':ie,             ' + //4 ok\r\n                        ':im,             ' + //5 ok\r\n                        ':endereco,       ' + //6 ok\r\n                        ':numero,         ' + //7 ok\r\n                        ':complemento,    ' + //8 ok\r\n                        ':bairro,         ' + //9 ok\r\n                        ':cidade,         ' + //10 ok\r\n                        ':cep,            ' + //11 ok\r\n                        ':uf,             ' + //12 ok\r\n                        ':ativo,          ' + //13 ok\r\n                        ':contato,        ' + //14\r\n                        ':telcontato,     ' + //15\r\n                        ':email,          ' + //16\r\n                        ':datacadastro,   ' + //17 ok\r\n                        ':dataalteracao   ' + //18 ok\r\n                      //  ':dataexclusao, ' + //19 ok\r\n                        ')                ');\r\n\r\n             qry.ParamByName('id_chave').DataType    := ftInteger;             //1\r\n             qry.ParamByName('razao').DataType       := ftString;\r\n             qry.ParamByName('razao').AsString       := aRegistro.razao;       //2\r\n             qry.ParamByName('cnpj').DataType        := ftString;\r\n             qry.ParamByName('cnpj').AsString        := aRegistro.cnpj ;       //3\r\n             qry.ParamByName('ie').DataType          := ftString;\r\n             qry.ParamByName('ie').AsString          := aRegistro.ie;          //4\r\n             qry.ParamByName('im').DataType          := ftString;\r\n             qry.ParamByName('im').AsString          := aRegistro.im;          //5\r\n             qry.ParamByName('endereco').DataType    := ftString;\r\n             qry.ParamByName('endereco').AsString    := aRegistro.endereco;    //6\r\n             qry.ParamByName('numero').DataType      := ftInteger;\r\n             qry.ParamByName('numero').AsInteger     := aRegistro.numero;      //7\r\n             qry.ParamByName('complemento').DataType := ftString;\r\n             qry.ParamByName('complemento').AsString := aRegistro.complemento; //8\r\n             qry.ParamByName('cep').DataType         := ftString;\r\n             qry.ParamByName('cep').AsString         := aRegistro.CEP;         //9\r\n             qry.ParamByName('cidade').DataType      := ftString;\r\n             qry.ParamByName('cidade').AsString      := aRegistro.Cidade;      //10\r\n             qry.ParamByName('bairro').DataType      := ftString;\r\n             qry.ParamByName('bairro').AsString      := aRegistro.Bairro;      //11\r\n             qry.ParamByName('uf').DataType          := ftString;\r\n             if Length(aRegistro.UF) > 0 then\r\n               UF := Copy(aRegistro.UF, 1, 2)\r\n             else\r\n               UF := '';\r\n\r\n             qry.ParamByName('uf').AsString          := UF;                    //12\r\n\r\n             qry.ParamByName('ativo').DataType       := ftString;\r\n             if Length(aRegistro.ativo) > 0 then\r\n               Ativo := Copy(aRegistro.ativo, 1, 1)\r\n             else\r\n               Ativo := '';\r\n\r\n             qry.ParamByName('ativo').AsString       := Ativo;                 //13\r\n\r\n             qry.ParamByName('contato').DataType     := ftString;\r\n             qry.ParamByName('contato').AsString     := aRegistro.contato;     //14\r\n\r\n             qry.ParamByName('telcontato').DataType     := ftString;\r\n             qry.ParamByName('telcontato').AsString     := aRegistro.telcontato; //15\r\n\r\n             qry.ParamByName('email').DataType     := ftString;\r\n             qry.ParamByName('email').AsString     := aRegistro.email;           //16\r\n\r\n             qry.ParamByName('datacadastro').DataType  := ftDateTime;\r\n             qry.ParamByName('datacadastro').AsDateTime:= Now;                 //17\r\n\r\n             qry.ParamByName('dataalteracao').DataType  := ftDateTime;         //18\r\n             qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n        //     qry.ParamByName('dataexclusao').DataType := ftDateTime;\r\n        //     qry.ParamByName('dataexclusao').AsDateTime:= aCliente.dataExclusao; //19\r\n\r\n             qry.ExecSQL;\r\n             qry.Connection.Commit;\r\n\r\n             Result := True;\r\n          Except\r\n           On E: Exception do\r\n              begin\r\n                if aRegistro.Linguagem='Portugues' then\r\n                  ShowMessage('Erro ao tentar gravar licen\u00E7a!' + E.Message)\r\n                else\r\n                  ShowMessage('Error trying to write license!!' + E.Message);\r\n\r\n                qry.Connection.Rollback;\r\n                qry.Free;\r\n              end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Registro_Linha610_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelRegistro.GravarRegistro(\r\n  aRegistro: TModelRegistro; achave: String): Boolean;\r\nvar\r\n  qry: TFDQuery;\r\n  data: TDateTime;\r\nbegin\r\n  qry:= TFDQuery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n     qry.SQL.Clear;\r\n     qry.SQL.Add('INSERT INTO REGISTRO      ' +\r\n                 '(id,                      ' +\r\n                 'id_chave,                 ' +\r\n                 'chave,                    ' +\r\n                 'data_inc,                 ' +\r\n                 'data_exp,                 ' +\r\n                 'contrasenha,              ' +\r\n                 'ativado,                  ' +\r\n                 'serialhd                  ' +\r\n               //  'WHERE id_chave =:id_chave ' +\r\n                 ')                         ' +\r\n                 'VALUES (                  ' +\r\n                 ':id,                      ' +\r\n                 ':id_chave,                ' +\r\n                 ':chave,                   ' +\r\n                 ':data_inc,                ' +\r\n                 ':data_exp,                ' +\r\n                 ':contrasenha,             ' +\r\n                 ':ativado,                 ' +\r\n                 ':serialhd                 ' +\r\n                 ')                         ');\r\n\r\n     qry.ParamByName('chave').DataType     := ftString;\r\n     qry.ParamByName('chave').AsString      := aChave;\r\n\r\n     qry.ParamByName('Data_inc').DataType   := ftDateTime;\r\n     qry.ParamByName('Data_inc').AsDateTime := Date;\r\n\r\n     Data := Date;\r\n\r\n     qry.ParamByName('Data_exp').DataType    := ftDateTime;\r\n     qry.ParamByName('Data_exp').AsDateTime  :=Data;\r\n\r\n     //ShowMessage(DateToStr(Data+30));\r\n     qry.ParamByName('serialhd').DataType    := ftDateTime;\r\n     qry.ParamByName('serialhd').AsString    :=aRegistro.serialhd;\r\n\r\n     qry.ParamByName('contrasenha').AsString :='0';\r\n     qry.ParamByName('ativado').AsString     :='N';\r\n\r\n     //Ver como fazer?\r\n     //qry.ParamByName('id_chave').AsInteger := //qry2.FieldByName('ID_Chave').AsInteger;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n  On E: Exception do\r\n    begin\r\n       Showmessage('Erro ao gravar tabela registro!'+ E.Message);\r\n       qry.Connection.Rollback;\r\n       Result := False;\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Registro_Linha70_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"      procedure Setativo(const Value: string);\r\n      procedure Setbairro(const Value: string);\r\n      procedure Setcidade(const Value: string);\r\n      procedure Setcnpj(const Value: string);\r\n      procedure Setcomplemento(const Value: string);\r\n      procedure Setemail(const Value: string);\r\n      procedure Setendereco(const Value: string);\r\n      procedure Setnumero(const Value: integer);\r\n      procedure Setrazao(const Value: string);\r\n      procedure Setresponsavel(const Value: string);\r\n      procedure Settelefone(const Value: string);\r\n      procedure Setuf(const Value: string);\r\n      procedure Setdataregistro(const Value: TDatetime);\r\n      procedure SetCEP(const Value: string);\r\n      procedure Setie(const Value: string);\r\n      procedure Setim(const Value: string);\r\n      procedure SetLinguagem(const Value: string);\r\n      procedure Setcontato(const Value: string);\r\n      procedure Settelcontato(const Value: string);\r\n      procedure Setserial(const Value: string);\r\n      function  GetWMIstring(const WMIClass, WMIProperty:string): string;\r\n      procedure SetOnLabel6TextChanged(const Value: TNotifyEvent);\r\n      procedure Setserialhd(const Value: string);\r\n      procedure SetContraSenha(const Value: String);\r\n      procedure SetData_exp(const Value: TDateTime);\r\n    procedure Setid_chave(const Value: string);\r\n    public\r\n      property razao       : string    read Frazao write Setrazao;\r\n      property cnpj        : string    read Fcnpj write Setcnpj;\r\n      property ie          : string    read Fie write Setie;\r\n      property im          : string    read Fim write Setim;\r\n      property endereco    : string    read Fendereco write Setendereco;\r\n      property numero      : integer   read Fnumero write Setnumero;\r\n      property complemento : string    read Fcomplemento write Setcomplemento;\r\n      property bairro      : string    read Fbairro write Setbairro;\r\n      property cidade      : string    read Fcidade write Setcidade;\r\n      property uf          : string    read Fuf write Setuf;\r\n      property CEP         : string    read FCEP write SetCEP;\r\n      property ativo       : string    read Fativo write Setativo;\r\n      property responsavel : string    read Fresponsavel write Setresponsavel;\r\n      property contato     : string    read Fcontato write Setcontato;\r\n      property telcontato  : string    read Ftelcontato write Settelcontato;\r\n      property telefone    : string    read Ftelefone write Settelefone;\r\n      property email       : string    read Femail write Setemail;\r\n      property dataregistro: TDatetime read Fdataregistro write Setdataregistro;\r\n      property Linguagem   : string    read FLinguagem write SetLinguagem;\r\n      property serial      : string    read Fserial write Setserial;  //transferir do projeto antigo para esse\r\n      property serialhd    : string    read Fserialhd write Setserialhd;\r\n      property ContraSenha : String    read FContraSenha write SetContraSenha;\r\n      property Data_exp    : TDateTime read FData_exp write SetData_exp;\r\n      property id_chave    : string    read Fid_chave write Setid_chave;\r\n\r\n      //Verificar se ser\u00E1 necess\u00E1rio criar mais propertys para a tabela Registro\r\n      property OnLabel6TextChanged: TNotifyEvent read FOnLabel6TextChanged write SetOnLabel6TextChanged;\r\n      procedure enviarEmail; //J\u00E1 chama  aqui a grava\u00E7\u00E3o no banco de  licen\u00E7as\r\n      function GerarSerial: string;\r\n      class function validarDados(aRegistro: TModelRegistro ; aLingua: string) : boolean;\r\n      class function GravarNoBancoLicencas(aRegistro : TModelRegistro): Boolean;  //Tabela Chaves\r\n      class function ValidarLicenca(adata: TDateTime; acnpj: string): Boolean;\r\n      class function GravarRegistro(aRegistro: TModelRegistro; achave: String): Boolean;\r\n      class function GravarContraSenha(aRegistro: TModelRegistro): Boolean;\r\n\r\n      constructor create;\r\n      destructor destroy;override;\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Model.Registro_Linha739_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class function TModelRegistro.GravarRegistro(\r\n  aRegistro: TModelRegistro; achave: String): Boolean;\r\nvar\r\n  qry: TFDQuery;\r\n  data: TDateTime;\r\nbegin\r\n  qry:= TFDQuery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n     qry.SQL.Clear;\r\n     qry.SQL.Add('INSERT INTO REGISTRO      ' +\r\n                 '(id,                      ' +\r\n                 'id_chave,                 ' +\r\n                 'chave,                    ' +\r\n                 'data_inc,                 ' +\r\n                 'data_exp,                 ' +\r\n                 'contrasenha,              ' +\r\n                 'ativado,                  ' +\r\n                 'serialhd                  ' +\r\n               //  'WHERE id_chave =:id_chave ' +\r\n                 ')                         ' +\r\n                 'VALUES (                  ' +\r\n                 ':id,                      ' +\r\n                 ':id_chave,                ' +\r\n                 ':chave,                   ' +\r\n                 ':data_inc,                ' +\r\n                 ':data_exp,                ' +\r\n                 ':contrasenha,             ' +\r\n                 ':ativado,                 ' +\r\n                 ':serialhd                 ' +\r\n                 ')                         ');\r\n\r\n     qry.ParamByName('id').DataType :=ftinteger;\r\n     qry.ParamByName('id_chave').DataType:= ftInteger;\r\n\r\n     qry.ParamByName('chave').DataType     := ftString;\r\n     qry.ParamByName('chave').AsString      := aChave;\r\n\r\n     qry.ParamByName('Data_inc').DataType   := ftDateTime;\r\n     qry.ParamByName('Data_inc').AsDateTime := Date;\r\n\r\n     Data := Date;\r\n\r\n     qry.ParamByName('Data_exp').DataType    := ftDateTime;\r\n     qry.ParamByName('Data_exp').AsDateTime  :=Data;\r\n\r\n     //ShowMessage(DateToStr(Data+30));\r\n     qry.ParamByName('serialhd').DataType    := ftDateTime;\r\n     qry.ParamByName('serialhd').AsString    :=aRegistro.serialhd;\r\n\r\n     qry.ParamByName('contrasenha').AsString :='0';\r\n     qry.ParamByName('ativado').AsString     :='N';\r\n\r\n     //Ver como fazer?\r\n     //qry.ParamByName('id_chave').AsInteger := //qry2.FieldByName('ID_Chave').AsInteger;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n  On E: Exception do\r\n    begin\r\n       Showmessage('Erro ao gravar tabela registro!'+ E.Message);\r\n       qry.Connection.Rollback;\r\n       Result := False;\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\RESTRequest4D.Request.Client_Linha206_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with FRESTRequest.Params.AddItem do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\RESTRequest4D.Request.Client_Linha23_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    procedure ExecuteRequest;\r\n    procedure DoJoinComponents;\r\n    function PrepareUrlSegments(const AValue: string): string;\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function ClearBody: IRequest;\r\n    function AddParam(const AName, AValue: string; const AKind: TRESTRequestParameterKind = {$IF COMPILERVERSION < 33}TRESTRequestParameterKind.pkGETorPOST{$ELSE}TRESTRequestParameterKind.pkQUERY{$ENDIF}; const AOptions: TRESTRequestParameterOptions = []): IRequest;\r\n    function AddBody(const AContent: string; const AContentType: TRESTContentType = ctAPPLICATION_JSON): IRequest; overload;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function FallbackCharsetEncoding(const AFallbackCharsetEncoding: string): IRequest;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function SynchronizedEvents(const AValue: Boolean): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function AddHeader(const AName, AValue: string; const AOptions: TRESTRequestParameterOptions = []): IRequest;\r\n    function ClearParams: IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function AddCookies(const ACookies: TStrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: TRESTContentType = TRESTContentType.ctNone): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: TRESTContentType = TRESTContentType.ctNone): IRequest; overload;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n  protected\r\n    procedure DoAfterExecute(Sender: TCustomRESTRequest); virtual;\r\n    procedure DoBeforeExecute(Sender: TCustomRESTRequest); virtual;\r\n    procedure DoHTTPProtocolError(Sender: TCustomRESTRequest); virtual;\r\n  public\r\n    constructor Create; virtual;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\RESTRequest4D.Request.Contract_Linha29_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"  TRR4DCallbackOnBeforeExecute = procedure(const Req: IRequest);\r\n  TRR4DCallbackOnAfterExecute = procedure(const Req: IRequest; const Res: IResponse);\r\n{$ELSE}\r\n  TRR4DCallbackOnBeforeExecute = reference to procedure(const Req: IRequest);\r\n  TRR4DCallbackOnAfterExecute = reference to procedure(const Req: IRequest; const Res: IResponse);\r\n{$ENDIF}\r\n\r\n  IRequest = interface\r\n    ['{2C882459-F4C3-4854-8F7A-F68E8F8DE98E}']\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n\t{$IF DEFINED(RR4D_SYNAPSE)}\r\n    function MimeType: string; overload;\r\n    function MimeType(const AMimeType: string): IRequest; overload;\r\n\t{$ENDIF}\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    {$IF DEFINED(RR4D_NETHTTP)}\r\n    function Asynchronous(const AValue: Boolean): IRequest;\r\n    function SynchronizedEvents(const AValue: Boolean): IRequest;\r\n    function ConnectionTimeout(const AConnectiomTimeout: Integer): IRequest;\r\n    {$ENDIF}\r\n    {$IF DEFINED(RR4D_INDY) or DEFINED(FPC) or DEFINED(RR4D_SYNAPSE) or DEFINED(RR4D_NETHTTP) or DEFINED(RR4D_ICS)}\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    {$ELSE}\r\n    function SynchronizedEvents(const AValue: Boolean): IRequest;\r\n    function AddHeader(const AName, AValue: string; const AOptions: TRESTRequestParameterOptions = []): IRequest;\r\n    function AddParam(const AName, AValue: string; const AKind: TRESTRequestParameterKind = {$IF COMPILERVERSION < 33}TRESTRequestParameterKind.pkGETorPOST{$ELSE}TRESTRequestParameterKind.pkQUERY{$ENDIF}; const AOptions: TRESTRequestParameterOptions = []): IRequest;\r\n    function AddBody(const AContent: string; const AContentType: TRESTContentType = ctAPPLICATION_JSON): IRequest; overload;\r\n    function FallbackCharsetEncoding(const AFallbackCharsetEncoding: string): IRequest;\r\n    {$ENDIF}\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function ClearParams: IRequest;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function AddCookies(const ACookies: TStrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    {$IF DEFINED(RR4D_INDY) or DEFINED(FPC) or DEFINED(RR4D_SYNAPSE) or DEFINED(RR4D_NETHTTP)}\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: string = ''): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: string = ''): IRequest; overload;\r\n    {$ELSEIF DEFINED(RR4D_ICS)}\r\n    function AddFile(const AFileName: string; UploadStrat:THttpUploadStrat): IRequest; overload;\r\n    {$ELSE}\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: TRESTContentType = TRESTContentType.ctNone): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: TRESTContentType = TRESTContentType.ctNone): IRequest; overload;\r\n    {$ENDIF}\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n    {$IF DEFINED(RR4D_INDY) or DEFINED(RR4D_ICS) or DEFINED(RR4D_SYNAPSE)}\r\n    function CertFile(const APath: string): IRequest;\r\n    function KeyFile(const APath: string): IRequest;\r\n    {$ENDIF}\r\n    {$IF DEFINED(RR4D_INDY)}\r\n    function HTTPOptions(const AHTTPOptions: TIdHTTPOptions): IRequest;\r\n    {$ENDIF}\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\RESTRequest4D.Request.FPHTTPClient_Linha43_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    procedure ExecuteRequest(const AMethod: TMethodRequest);\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    function ClearParams: IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function AddCookies(const ACookies: Tstrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: string = ''): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: string = ''): IRequest; overload;\r\n    function MakeURL(const AIncludeParams: Boolean = True): string;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n  protected\r\n    procedure DoAfterExecute(const Sender: TObject; const AResponse: IResponse); virtual;\r\n    procedure DoBeforeExecute(const Sender: TFPHTTPClient); virtual;\r\n  public\r\n    constructor Create;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\RESTRequest4D.Request.ICS_Linha23_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    procedure ExecuteRequest(const AMethod: TMethodRequest);\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function ClearParams: IRequest;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function AddCookies(const ACookies: TStrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddFile(const AFileName: string; UploadStrat: THttpUploadStrat): IRequest; overload;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n    function CertFile(const APath: string): IRequest;\r\n    function KeyFile(const APath: string): IRequest;\r\n    function MakeURL(const AIncludeParams: Boolean = True): string;\r\n  protected\r\n    procedure DoBeforeExecute; virtual;\r\n    procedure DoAfterExecute; virtual;\r\n  public\r\n    constructor Create;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\RESTRequest4D.Request.Indy_Linha36_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    procedure ExecuteRequest(const AMethod: TMethodRequest);\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    function ClearParams: IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function AddCookies(const ACookies: TStrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: string = ''): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: string = ''): IRequest; overload;\r\n    function MakeURL(const AIncludeParams: Boolean = True): string;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n    function CertFile(const APath: string): IRequest;\r\n    function KeyFile(const APath: string): IRequest;\r\n    function HTTPOptions(const AHTTPOptions: TIdHTTPOptions): IRequest;\r\n    procedure OnStatusInfoEx(ASender: TObject; const AsslSocket: PSSL; const AWhere, Aret: TIdC_INT; const AType, AMsg: string);\r\n  protected\r\n    procedure DoBeforeExecute; virtual;\r\n    procedure DoAfterExecute; virtual;\r\n  public\r\n    constructor Create;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\RESTRequest4D.Request.NetHTTP_Linha27_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    function ExecuteRequest(const AMethod: TMethodRequest): IHTTPResponse;\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function ConnectionTimeout(const AConnectiomTimeout: Integer): IRequest;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    function ClearParams: IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function AddCookies(const ACookies: TStrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: string = ''): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: string = ''): IRequest; overload;\r\n    function Asynchronous(const AValue: Boolean): IRequest;\r\n    function SynchronizedEvents(const AValue: Boolean): IRequest;\r\n    function MakeURL(const AIncludeParams: Boolean = True): string;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n    procedure NetHTTPClientValidateServerCertificate(const Sender: TObject; const ARequest: TURLRequest; const Certificate: TCertificate; var Accepted: Boolean);    \r\n  protected\r\n    procedure DoAfterExecute(const Sender: TObject; const AResponse: IHTTPResponse); virtual;\r\n    procedure DoBeforeExecute(const Sender: TNetHTTPClient); virtual;\r\n    procedure DoHTTPProtocolError(const Sender: TObject; const AError: string); virtual;\r\n  public\r\n    constructor Create;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\RESTRequest4D.Request.Synapse_Linha47_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    procedure ExecuteRequest(const AMethod: TMethodRequest);\r\n    function AcceptEncoding: string; overload;\r\n    function AcceptEncoding(const AAcceptEncoding: string): IRequest; overload;\r\n    function AcceptCharset: string; overload;\r\n    function AcceptCharset(const AAcceptCharset: string): IRequest; overload;\r\n    function Adapters(const AAdapter: IRequestAdapter): IRequest; overload;\r\n    function Adapters(const AAdapters: TArray<IRequestAdapter>): IRequest; overload;\r\n    function Adapters: TArray<IRequestAdapter>; overload;\r\n    function Accept: string; overload;\r\n    function Accept(const AAccept: string): IRequest; overload;\r\n    function MimeType: string; overload;\r\n    function MimeType(const AMimeType: string): IRequest; overload;\r\n    function Timeout: Integer; overload;\r\n    function Timeout(const ATimeout: Integer): IRequest; overload;\r\n    function BaseURL(const ABaseURL: string): IRequest; overload;\r\n    function BaseURL: string; overload;\r\n    function Resource(const AResource: string): IRequest; overload;\r\n    function RaiseExceptionOn500: Boolean; overload;\r\n    function RaiseExceptionOn500(const ARaiseException: Boolean): IRequest; overload;\r\n    function Resource: string; overload;\r\n    function ResourceSuffix(const AResourceSuffix: string): IRequest; overload;\r\n    function ResourceSuffix: string; overload;\r\n    function Token(const AToken: string): IRequest;\r\n    function TokenBearer(const AToken: string): IRequest;\r\n    function BasicAuthentication(const AUsername, APassword: string): IRequest;\r\n    function Retry(const ARetries: Integer): IRequest;\r\n    function OnBeforeExecute(const AOnBeforeExecute: TRR4DCallbackOnBeforeExecute): IRequest;\r\n    function OnAfterExecute(const AOnAfterExecute: TRR4DCallbackOnAfterExecute): IRequest;\r\n    function Get: IResponse;\r\n    function Post: IResponse;\r\n    function Put: IResponse;\r\n    function Delete: IResponse;\r\n    function Patch: IResponse;\r\n    function FullRequestURL(const AIncludeParams: Boolean = True): string;\r\n    function ClearBody: IRequest;\r\n    function AddBody(const AContent: string): IRequest; overload;\r\n    function AddBody(const AContent: TJSONObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TJSONArray; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TObject; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddBody(const AContent: TStream; const AOwns: Boolean = True): IRequest; overload;\r\n    function AddUrlSegment(const AName, AValue: string): IRequest;\r\n    function ClearHeaders: IRequest;\r\n    function AddHeader(const AName, AValue: string): IRequest;\r\n    function ClearParams: IRequest;\r\n    function ContentType(const AContentType: string): IRequest; overload;\r\n    function ContentType: string; overload;\r\n    function UserAgent(const AName: string): IRequest;\r\n    function AddCookies(const ACookies: Tstrings): IRequest;\r\n    function AddCookie(const ACookieName, ACookieValue: string): IRequest;\r\n    function AddParam(const AName, AValue: string): IRequest;\r\n    function AddField(const AFieldName: string; const AValue: string): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AFileName: string; const AContentType: string = ''): IRequest; overload;\r\n    function AddFile(const AFieldName: string; const AValue: TStream; const AFileName: string = ''; const AContentType: string = ''): IRequest; overload;\r\n    function MakeURL(const AIncludeParams: Boolean = True): string;\r\n    function Proxy(const AServer, APassword, AUsername: string; const APort: Integer): IRequest;\r\n    function DeactivateProxy: IRequest;\r\n    function CertFile(const APath: string): IRequest;\r\n    function KeyFile(const APath: string): IRequest;\r\n  protected\r\n    procedure DoAfterExecute(const Sender: TObject; const AResponse: IResponse); virtual;\r\n    procedure DoBeforeExecute(const Sender: THTTPSend); virtual;\r\n  public\r\n    constructor Create;\r\n    class function New: IRequest;\r\n    destructor Destroy; override;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Tests.Horse.Core.Param_Linha25_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    function RequiredMessage(const AKey: String): string;\r\n    function ConvertErrorMessage(const AKey, AValue, AType: String): string;\r\n\r\n  public\r\n    [Setup]\r\n    procedure Setup;\r\n\r\n    [TearDown]\r\n    procedure TearDown;\r\n\r\n    [Test]\r\n    procedure ContainsKey;\r\n\r\n    [Test]\r\n    procedure NotContainsKey;\r\n\r\n    [Test]\r\n    procedure ContainsKeyDiferentCase;\r\n\r\n    [Test]\r\n    procedure ContainsValue;\r\n\r\n    [Test]\r\n    procedure NotContainsValue;\r\n\r\n    [Test]\r\n    procedure ToArray;\r\n\r\n    [Test]\r\n    procedure TryGetValueTrue;\r\n\r\n    [Test]\r\n    procedure TryGetValueFalse;\r\n\r\n    [Test]\r\n    procedure TryGetValueDiferentCase;\r\n\r\n    [Test]\r\n    procedure Content;\r\n\r\n    [Test]\r\n    procedure Count;\r\n\r\n    [Test]\r\n    procedure List;\r\n\r\n    [Test]\r\n    procedure Index;\r\n\r\n    [Test]\r\n    procedure IndexNotFound;\r\n\r\n    [Test]\r\n    procedure IndexDiferentCase;\r\n\r\n    [Test]\r\n    procedure AsBoolean;\r\n\r\n    [Test]\r\n    [TestCase('TrueValue1', 'True,true,true')]\r\n    [TestCase('TrueValue2', '1,1,true')]\r\n    [TestCase('FalseValue1', 'False,true,false')]\r\n    [TestCase('FalseValue2', '5,1,false')]\r\n    procedure AsBooleanParam(AParamValue, ATrueValue: string; AResult: Boolean);\r\n\r\n    [Test]\r\n    procedure AsBooleanNotRequired;\r\n\r\n    [Test]\r\n    procedure AsBooleanRequired;\r\n\r\n    [Test]\r\n    procedure AsCurrency;\r\n\r\n    [Test]\r\n    procedure AsCurrencyDecimalSeparator;\r\n\r\n    [Test]\r\n    procedure AsCurrencyNotRequired;\r\n\r\n    [Test]\r\n    procedure AsCurrencyRequired;\r\n\r\n    [Test]\r\n    procedure AsCurrencyErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsDateTime;\r\n\r\n    [Test]\r\n    procedure AsDateTimeRequired;\r\n\r\n    [Test]\r\n    procedure AsDateTimeNotRequired;\r\n\r\n    [Test]\r\n    procedure AsDateTimeOnlyData;\r\n\r\n    [Test]\r\n    procedure AsDateTimeChangeFormat;\r\n\r\n    [Test]\r\n    procedure AsDateTimeInvalidFormat;\r\n\r\n    [Test]\r\n    procedure AsDate;\r\n\r\n    [Test]\r\n    procedure AsDateRequired;\r\n\r\n    [Test]\r\n    procedure AsDateNotRequired;\r\n\r\n    [Test]\r\n    procedure AsDateChangeFormat;\r\n\r\n    [Test]\r\n    procedure AsDateInvalidFormat;\r\n\r\n    [Test]\r\n    procedure AsExtended;\r\n\r\n    [Test]\r\n    procedure AsExtendedDecimalSeparator;\r\n\r\n    [Test]\r\n    procedure AsExtendedNotRequired;\r\n\r\n    [Test]\r\n    procedure AsExtendedRequired;\r\n\r\n    [Test]\r\n    procedure AsExtendedErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsFloat;\r\n\r\n    [Test]\r\n    procedure AsFloatDecimalSeparator;\r\n\r\n    [Test]\r\n    procedure AsFloatNotRequired;\r\n\r\n    [Test]\r\n    procedure AsFloatRequired;\r\n\r\n    [Test]\r\n    procedure AsFloatErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsInteger;\r\n\r\n    [Test]\r\n    procedure AsIntegerNotRequired;\r\n\r\n    [Test]\r\n    procedure AsIntegerRequired;\r\n\r\n    [Test]\r\n    procedure AsIntegerErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsInt64;\r\n\r\n    [Test]\r\n    procedure AsInt64NotRequired;\r\n\r\n    [Test]\r\n    procedure AsInt64Required;\r\n\r\n    [Test]\r\n    procedure AsInt64ErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsISO8601DateTime;\r\n\r\n    [Test]\r\n    procedure AsISO8601DateTimeOnlyData;\r\n\r\n    [Test]\r\n    procedure AsISO8601DateTimeNotRequired;\r\n\r\n    [Test]\r\n    procedure AsISO8601DateTimeRequired;\r\n\r\n    [Test]\r\n    procedure AsISO8601DateTimeErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsStream;\r\n\r\n    [Test]\r\n    procedure AsStreamNotFoundNotRequired;\r\n\r\n    [Test]\r\n    procedure AsStreamNotFoundRequired;\r\n\r\n    [Test]\r\n    procedure AsStreamSaveToFile;\r\n\r\n    [Test]\r\n    procedure AsStreamNotFoundSaveToFile;\r\n\r\n    [Test]\r\n    procedure AsString;\r\n\r\n    [Test]\r\n    procedure AsStringRequired;\r\n\r\n    [Test]\r\n    procedure AsStringNotRequired;\r\n\r\n    [Test]\r\n    procedure AsStringDiferentCase;\r\n\r\n    [Test]\r\n    procedure AsTime;\r\n\r\n    [Test]\r\n    procedure AsTimeRequired;\r\n\r\n    [Test]\r\n    procedure AsTimeNotRequired;\r\n\r\n    [Test]\r\n    procedure AsTimeChangeFormat;\r\n\r\n    [Test]\r\n    procedure AsTimeInvalidFormat;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UBuscaDocWikiGoogle_Linha5_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"function BuscarDocWikiGoogle(const Codigo, Mensagem: string): string;\r\n\r\nimplementation\r\n\r\nuses\r\n  System.SysUtils, System.Classes, System.JSON, System.NetEncoding,\r\n  IdHTTP, IdSSLOpenSSL;\r\n\r\nconst\r\n  API_KEY = 'AIzaSyAOKWVgjABtxStLv-iRTYxheI_PX5y_H8Y'; // ?? Substitua por sua chave de API\r\n  CSE_ID = '03399718856334828';      // ? Seu ID de mecanismo de busca\r\n\r\nfunction BuscarDocWikiGoogle(const Codigo, Mensagem: string): string;\r\nvar\r\n  HTTP: TIdHTTP;\r\n  SSL: TIdSSLIOHandlerSocketOpenSSL;\r\n  URL, Resposta, Query: string;\r\n  JSONRoot, Item: TJSONObject;\r\n  Items: TJSONArray;\r\n  I: Integer;\r\n  Stream: TStringStream;\r\nbegin\r\n  Result := '';\r\n  HTTP := TIdHTTP.Create(nil);\r\n  SSL := TIdSSLIOHandlerSocketOpenSSL.Create(nil);\r\n  Stream := TStringStream.Create('', TEncoding.UTF8);\r\n  try\r\n    HTTP.IOHandler := SSL;\r\n    HTTP.HandleRedirects := True;\r\n    HTTP.Request.UserAgent := 'Mozilla/5.0 (Delphi Indy)';\r\n    HTTP.Request.AcceptEncoding := 'utf-8';\r\n\r\n    Query := TNetEncoding.URL.Encode('Delphi ' + Codigo + ' ' + Mensagem);\r\n    URL := Format(\r\n      'https://www.googleapis.com/customsearch/v1?key=%s&cx=%s&q=%s',\r\n      [API_KEY, CSE_ID, Query]\r\n    );\r\n\r\n    Resposta := HTTP.Get(URL);\r\n\r\n    JSONRoot := TJSONObject.ParseJSONValue(Resposta) as TJSONObject;\r\n    try\r\n      if Assigned(JSONRoot) and JSONRoot.TryGetValue<TJSONArray>('items', Items) then\r\n      begin\r\n        for I := 0 to Items.Count - 1 do\r\n        begin\r\n          Item := Items.Items[I] as TJSONObject;\r\n          if Item.TryGetValue<string>('link', Result) then\r\n          begin\r\n            if Result.StartsWith('https://docwiki.embarcadero.com/') then\r\n              Exit\r\n            else\r\n              Result := ''; // ignora se n\u00E3o for docwiki\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UCadastroClientes_Linha185_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    procedure FormShow(Sender: TObject);\r\n    procedure BtnNovoClick(Sender: TObject);\r\n    procedure FormCreate(Sender: TObject);\r\n    procedure BtnPrimeiroClick(Sender: TObject);\r\n    procedure btnAnteriorClick(Sender: TObject);\r\n    procedure BtnProximoClick(Sender: TObject);\r\n    procedure BtnUltimoClick(Sender: TObject);\r\n    procedure BtnAlterarClick(Sender: TObject);\r\n    procedure BtnGravarClick(Sender: TObject);\r\n    procedure CBAtivoExit(Sender: TObject);\r\n    procedure EdtNumeroKeyDown(Sender: TObject; var Key: Word;\r\n      var KeyChar: Char; Shift: TShiftState);\r\n    procedure EdtCnpjKeyDown(Sender: TObject; var Key: Word; var KeyChar: Char;\r\n      Shift: TShiftState);\r\n    procedure EdtCepKeyDown(Sender: TObject; var Key: Word; var KeyChar: Char;\r\n      Shift: TShiftState);\r\n    procedure BtnExcluirClick(Sender: TObject);\r\n    procedure BtnPesquisarClick(Sender: TObject);\r\n    procedure TabItemPesquisaClick(Sender: TObject);\r\n    procedure FormClose(Sender: TObject; var Action: TCloseAction);\r\n    procedure EdtCnpjExit(Sender: TObject);\r\n  private\r\n    { Private declarations }\r\n    FConexao: TFDConnection;\r\n    FCliente: TClientes;\r\n    FContato: TContato;\r\n    PodeGravar: Boolean;\r\n    FUFCliente: string;\r\n    FAtivoCliente: string;\r\n    qry: TFDQuery;\r\n    RegrasDeNegocios: TModelCliente;\r\n    FModelContato: TModelContato;\r\n    FTipo: String;\r\n    FController: TControllerCliente;\r\n    CDS: TClientDataSet;\r\n    FLinguagem: string;\r\n    CurrentDateTime: TDateTime; //Para uso com o Log\r\n    DateTimeStr: string;        //Para uso com o Log\r\n    FGravarLog: Boolean;        //Para uso com o Log\r\n    FHabilitarLogsSistema: string;\r\n    FNextIDContato: Integer;\r\n    FGravacaoSucesso: Boolean;\r\n    procedure DesabilitaBotoes(const BotaoSet:TBotaoSet);\r\n    Procedure PopularGridClientes;\r\n    procedure PreencheDadosEncontradosDoCliente;\r\n    procedure PopularDataSet;\r\n    procedure CarregarConfiguracao;\r\n    procedure PopularContatos;\r\n    function LerSalvarLogsBancoDeDados: Boolean;\r\n    function GravarLogsBancoDeDados: Boolean;\r\n  public\r\n    { Public declarations }\r\n    DataSet: TClientDataSet;\r\n    FSomenteAtivos: string;\r\n    FSemContatos  : string;\r\n    FBtnUltimo    : string;\r\n    Function CriarDataSet(aDadaSet: TClientDataSet): TClientDataSet;\r\n    procedure OnDataSetChange;\r\n    procedure PopularClientes;\r\n    procedure CarregarCores;\r\n    procedure CarregarLinguagem;\r\n    function ProximoIDContato: integer;\r\n\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UCadastroFabricantes_Linha417_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TFrmFabricantes.CarregarLinguagem;\r\nvar\r\n  IniFile: TIniFile;\r\n  I: Integer;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + '\\Config.ini');\r\n  try\r\n    FLinguagem :=IniFile.ReadString('Traducao', 'Linguagem', '');\r\n\r\n   if FLinguagem = 'Portuguese' then\r\n   begin\r\n     LblCodCliente.Text      := 'Cod. Fabricante';\r\n     LblRazao.Text           := 'Raz\u00E3o Social / Nome';\r\n     LblCnpj.Text            := 'CNPJ / CPF';\r\n     LblEndereco.Text        := 'Endere\u00E7o';\r\n     LblNumero.Text          := 'N\u00FAmero';\r\n     LblComplemento.Text     := 'Complemento';\r\n     LblCEP.Text             := 'CEP';\r\n     LblCidade.Text          := 'Cidade';\r\n     LblCEP.Text             := 'CEP';\r\n     LblUF.Text              := 'UF';\r\n     LblAtivo.Text           := 'Ativo';\r\n     LblPesquisar.Text       := 'Pesquisar';\r\n     BtnNovo.Text            := '&Novo';\r\n     BtnAlterar.Text         := '&Alterar';\r\n     BtnExcluir.Text         := '&Excluir';\r\n     BtnSalvar.Text          := '&Salvar';\r\n     TabItemCadastro.Text    := 'Cadastro';\r\n     TabItemPesquisa.Text    := 'Pesquisa';\r\n     TabItemContato.Text     := 'Contato';\r\n     lblTitulo.Text          := 'Cadastro do Fabricantes';\r\n     FrmFabricantes.Caption  := 'Cadastro do Fabricantes';\r\n\r\n   end\r\n   else if FLinguagem = 'Ingles' then\r\n   begin\r\n     LblCodCliente.Text      := 'Id. Manufacturer';\r\n     LblRazao.Text           := 'Corporate Name / Name';\r\n     LblCnpj.Text            := 'Tax Identification Number - TIN';\r\n     LblEndereco.Text        := 'Address';\r\n     LblNumero.Text          := 'Number';\r\n     LblComplemento.Text     := 'Complement';\r\n     LblCidade.Text          := 'City';\r\n     LblCEP.Text             := 'Zip Code';\r\n     LblUF.Text              := 'State';\r\n     LblAtivo.Text           := 'Active';\r\n     LblPesquisar.Text       := 'Search';\r\n     BtnNovo.Text            := '&New';\r\n     BtnAlterar.Text         := '&Alter';\r\n     BtnExcluir.Text         := '&Delete';\r\n     BtnSalvar.Text          := '&Save';\r\n     TabItemCadastro.Text    := 'Register';\r\n     TabItemPesquisa.Text    := 'Search';\r\n     TabItemContato.Text     := 'Contact';\r\n     lblTitulo.Text          := 'Manufacturer Registration';\r\n     FrmFabricantes.Caption  := 'Manufacturer Registration';\r\n   end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Categoria_Linha102_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Categoria_Linha118_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Categoria_Linha32_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Categoria_Linha53_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Categoria_Linha86_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Cliente_Linha137_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Cliente_Linha33_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Cliente_Linha55_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Cliente_Linha79_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Cliente_Linha95_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.FotoProcedimento_Linha103_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.FotoProcedimento_Linha32_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.FotoProcedimento_Linha51_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Procedimento_Linha121_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Procedimento_Linha32_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Procedimento_Linha54_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Procedimento_Linha76_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Procedimento_Linha92_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Servico_Linha31_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Servico_Linha53_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Servico_Linha76_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDAO.Servico_Linha92_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uDashboardHTMLUtils_Linha5_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure GerarGraficoHTMLEmbed;\r\n\r\nimplementation\r\n\r\nuses\r\n  System.SysUtils, System.Classes;\r\n\r\nprocedure GerarGraficoHTMLEmbed;\r\nvar\r\n  SL, SLJson: TStringList;\r\n  PastaGraficos, CaminhoHTML, LinhaJSON: string;\r\n  Ferramentas: TArray<string>;\r\n  i: Integer;\r\n  NomeJson, IDCanvas: string;\r\nbegin\r\n  SetLength(Ferramentas, 5);\r\n  Ferramentas[0] := 'queryanalizer';\r\n  Ferramentas[1] := 'solidchcker';\r\n  Ferramentas[2] := 'scanneracoplamento';\r\n  Ferramentas[3] := 'analisadorhints';\r\n  Ferramentas[4] := 'verificadorcodigomorto';\r\n\r\n  PastaGraficos := IncludeTrailingPathDelimiter(ExtractFilePath(ParamStr(0))) + 'graficos\\';\r\n  CaminhoHTML := PastaGraficos + 'grafico.html';\r\n\r\n  SL := TStringList.Create;\r\n  try\r\n    SL.Add('<!DOCTYPE html>');\r\n    SL.Add('<html><head>');\r\n    SL.Add('<meta charset=\"UTF-8\">');\r\n    SL.Add('<title>Dashboard</title>');\r\n    SL.Add('<script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>');\r\n    SL.Add('<style>');\r\n    SL.Add('body { font-family: Arial; margin: 40px; background: #f4f4f4; }');\r\n    SL.Add('.grid { display: grid; grid-template-columns: 1fr 1fr; gap: 40px; }');\r\n    SL.Add('.grafico { background: #fff; padding: 20px; border-radius: 10px; box-shadow: 0 2px 8px rgba(0,0,0,0.1); }');\r\n    SL.Add('canvas { width: 100%; height: 300px !important; }');\r\n    SL.Add('</style></head><body>');\r\n    SL.Add('<h1>?? Painel Integrado</h1>');\r\n    SL.Add('<div class=\"grid\">');\r\n\r\n    for i := 0 to High(Ferramentas) do\r\n    begin\r\n      NomeJson := PastaGraficos + Ferramentas[i] + '.json';\r\n      if FileExists(NomeJson) then\r\n      begin\r\n        SLJson := TStringList.Create;\r\n        try\r\n          SLJson.LoadFromFile(NomeJson, TEncoding.UTF8);\r\n          LinhaJSON := SLJson.Text.Replace(#13#10, '').Replace('\"', '\\\"');\r\n          IDCanvas := 'canvas' + IntToStr(i+1);\r\n\r\n          SL.Add('<div class=\"grafico\">');\r\n          SL.Add('<h3>' + Ferramentas[i] + '</h3>');\r\n          SL.Add('<canvas id=\"' + IDCanvas + '\"></canvas>');\r\n          SL.Add('<script>');\r\n          SL.Add('var data = JSON.parse(\"' + LinhaJSON + '\");');\r\n          SL.Add('new Chart(document.getElementById(\"' + IDCanvas + '\"), { type: \"line\", data: data, options: { responsive: true, plugins: { legend: { position: \"bottom\" } } } });');\r\n          SL.Add('</script>');\r\n          SL.Add('</div>');\r\n        finally\r\n          SLJson.Free;\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uFrmPix_Linha121_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uFrmPix_Linha123_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uFrmPix_Linha137_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UGeradorRelatorio_Linha14_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure GerarRelatorioUnico(const Relatorios: TList<TRelatorioProjeto>; const DestinoRelatorio: string);\r\nprocedure ExportarCSV(const Relatorios: TList<TRelatorioProjeto>; const DestinoRelatorio: string);\r\n\r\nimplementation\r\n\r\n\r\nprocedure GerarRelatorioUnico(const Relatorios: TList<TRelatorioProjeto>; const DestinoRelatorio: string);\r\nvar\r\n  HTML: TStringList;\r\n  Relatorio: TRelatorioProjeto;\r\n  Linha, HTMLFile, Codigo, Msg: string;\r\n  Match: TMatch;\r\n  Sugestao: TSugestaoIA;\r\nbegin\r\n  if DestinoRelatorio <> '' then\r\n    HTMLFile := TPath.Combine(DestinoRelatorio, 'RelatorioCompleto.html')\r\n  else\r\n    HTMLFile := 'RelatorioCompleto.html';\r\n\r\n  HTML := TStringList.Create;\r\n  try\r\n    HTML.Add('<html><head><meta charset=\"utf-8\"><style>');\r\n    HTML.Add('body{font-family:Arial;} h2{color:#003366;} h3{color:#333;} ul{margin-left:20px;}');\r\n    HTML.Add('li{margin-bottom:8px;} .hint{color:green;} .warning{color:orange;}');\r\n    HTML.Add('</style></head><body>');\r\n    HTML.Add('<h1>Relat\u00F3rio Consolidado de Hints e Warnings</h1>');\r\n\r\n    for Relatorio in Relatorios do\r\n    begin\r\n      HTML.Add('<hr><h2>' + Relatorio.NomeProjeto + '</h2>');\r\n\r\n      if Relatorio.Hints.Count > 0 then\r\n      begin\r\n        HTML.Add('<h3>Hints</h3><ul>');\r\n        for Linha in Relatorio.Hints do\r\n        begin\r\n          HTML.Add('<li class=\"hint\">' + Linha);\r\n\r\n          Match := TRegEx.Match(Linha, '^.+\\(\\d+\\):\\s+\\[([HW]\\d{4})\\]\\s+(.*)$');\r\n          if Match.Success then\r\n          begin\r\n            Codigo := Match.Groups[1].Value;\r\n            Msg := Match.Groups[2].Value;\r\n\r\n            if USugestoesCache.ObterCache.TryGetValue(Codigo, Sugestao) then\r\n            begin\r\n              if Sugestao.Origem = osDocWiki then\r\n                HTML.Add('<br><i>?? <a href=\"' +\r\n                         Sugestao.Solucao.Replace('Consulte a documenta\u00E7\u00E3o oficial: ', '') +\r\n                         '\">Ver documenta\u00E7\u00E3o oficial</a></i>')\r\n              else\r\n                HTML.Add('<br><i>? Nenhuma sugest\u00E3o encontrada</i>');\r\n            end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uModelJSON_Linha57_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class procedure TJSONModel.CarregarJSONArrayGenerico(\r\n  const Caminho: string;\r\n  Pagina, LinhasPorPagina: Integer;\r\n  DataSet: TClientDataSet;\r\n  TreeView: TTreeView;\r\n  out Total: Integer;\r\n  ProgressBar: TProgressBar = nil);\r\nvar\r\n  JSONStr: string;\r\n  JSONValue: TJSONValue;\r\n  JSONArray: TJSONArray;\r\n  Campos: TDictionary<string, TFieldType>;\r\n  ListaCampos: TArray<string>;\r\n  Campo: string;\r\n  Pair: TJSONPair;\r\n  DummyInt: Integer;\r\n  i, j, StartIdx, EndIdx: Integer;\r\n  Obj: TJSONObject;\r\n  Fld: TField;\r\n  Objeto: TJSONObject;\r\n  RootNode, Sub: TTreeNode;\r\nbegin\r\n  JSONStr := TFile.ReadAllText(Caminho, TEncoding.UTF8);\r\n  JSONStr := CorrigirJSONSimples(JSONStr);\r\n  JSONValue := TJSONObject.ParseJSONValue(JSONStr);\r\n\r\n  if not Assigned(JSONValue) then\r\n    raise Exception.Create('Conte\u00FAdo JSON inv\u00E1lido.');\r\n\r\n  if JSONValue is TJSONArray then\r\n    JSONArray := TJSONArray(JSONValue)\r\n  else if JSONValue is TJSONObject then\r\n  begin\r\n    JSONArray := TJSONArray.Create;\r\n    JSONArray.AddElement(JSONValue); // transfere a posse\r\n  end\r\n  else\r\n    raise Exception.Create('JSON n\u00E3o \u00E9 um array ou objeto.');\r\n\r\n  Total := JSONArray.Count;\r\n  if Total = 0 then Exit;\r\n\r\n  Campos := TDictionary<string, TFieldType>.Create;\r\n  try\r\n    for i := 0 to JSONArray.Count - 1 do\r\n    begin\r\n      if JSONArray.Items[i] is TJSONObject then\r\n      begin\r\n        Obj := JSONArray.Items[i] as TJSONObject;\r\n        for j := 0 to Obj.Count - 1 do\r\n        begin\r\n          Pair := Obj.Pairs[j];\r\n          Campo := Pair.JsonString.Value;\r\n          if not Campos.ContainsKey(Campo) then\r\n          begin\r\n            if TryStrToInt(Pair.JsonValue.Value, DummyInt) then\r\n              Campos.Add(Campo, ftInteger)\r\n            else if SameText(Pair.JsonValue.Value, 'true') or SameText(Pair.JsonValue.Value, 'false') then\r\n              Campos.Add(Campo, ftBoolean)\r\n            else\r\n              Campos.Add(Campo, ftString);\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha101_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TForm1.VerificaFila;\r\nbegin\r\n  // Criar a Thread anonima\r\n  TThread.CreateAnonymousThread(\r\n    procedure\r\n    var\r\n      QryLocal, QryBoNota, QryChamados: TFDquery;\r\n      LBoNota: String;\r\n      Fila: TQueue<string>;\r\n      Placa, Local: string;\r\n      proximo: string;\r\n      i: Integer;\r\n\r\n      SearchString: string;\r\n      LineIndex: Integer;\r\n    begin\r\n      Fila := TQueue<string>.Create;\r\n      Queue := TQueue<string>.Create;\r\n\r\n      QryLocal := TFDquery.Create(nil);\r\n      QryLocal.Connection := FDConnection1;\r\n      try\r\n        QryLocal.Close;\r\n        QryLocal.SQL.Clear;\r\n        QryLocal.SQL.Add('select f.*, v.*, v.placa,l.local from fila f');\r\n        QryLocal.SQL.Add\r\n          (' inner join veiculos v on(f.idveiculo = v.idveiculos) ');\r\n        QryLocal.SQL.Add(' inner join locais l on(f.idlocal = l.idlocais)');\r\n        QryLocal.SQL.Add(' where f.ativo=''S'' '); // se comentar pega todos os\r\n        QryLocal.SQL.Add(' order by f.datahoraentrada');\r\n\r\n        // Se a conex\u00E3o cair reconectar\r\n        if not FDConnection1.Connected then\r\n          FDConnection1.Connected := True;\r\n\r\n        QryLocal.Open();\r\n\r\n        {$IFDEF DEBUG}\r\n          Showmessage('QryLocal Qtde Registros \u00E9 de: ' +\r\n          IntToStr(QryLocal.RecordCount));\r\n        {$ENDIF}\r\n\r\n        if QryLocal.RecordCount > 0 then\r\n        begin\r\n\r\n          // Adicionar Todas as placas ao Memo1\r\n          Memo1.Clear; // Limpa o Memo1 antes de adicionar novos dados\r\n          QryLocal.First;\r\n          while not QryLocal.Eof do\r\n          begin\r\n            Placa := QryLocal.FieldByName('placa').AsString;\r\n            Local := QryLocal.FieldByName('local').AsString;\r\n            TThread.Synchronize(nil,\r\n              procedure\r\n              begin\r\n                Memo1.Lines.Add(Placa + ' - ' + Local);\r\n                // Adiciona a linha ao Memo1\r\n              end);\r\n            Placa := QryLocal.FieldByName('placa').AsString;\r\n            Fila.Enqueue(Placa);\r\n            QryLocal.Next;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha106_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with FDQuery1 do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha136_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha166_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha349_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with ListView1.Columns.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha355_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with ListView1.Columns.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha361_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with ListView1.Columns.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha557_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TForm1.ToggleFullScreen;\r\nconst\r\n  ID_FULLSCREEN = 897;\r\nbegin\r\n  if MPCHandle = 0 then Exit;\r\n\r\n  if not MPCFullScreenMode then\r\n  begin\r\n    // === Entrar em tela cheia ===\r\n\r\n    // Remove do painel\r\n    Winapi.Windows.SetParent(MPCHandle, 0);\r\n\r\n    // Restaura bordas/janela\r\n    SetWindowLong(MPCHandle, GWL_STYLE,\r\n      GetWindowLong(MPCHandle, GWL_STYLE) or WS_CAPTION or WS_THICKFRAME);\r\n\r\n    // Traz para frente\r\n    SetForegroundWindow(MPCHandle);\r\n\r\n    // Entra em fullscreen (Alt+Enter)\r\n    SendMessage(MPCHandle, WM_COMMAND, ID_FULLSCREEN, 0);\r\n\r\n    // Marca estado\r\n    MPCFullScreenMode := True;\r\n\r\n    // Atualiza texto do bot\u00E3o\r\n    btnToggleFull.Caption := 'Voltar ao Painel';\r\n  end\r\n  else\r\n  begin\r\n    // === Voltar ao painel ===\r\n\r\n    // Sai do fullscreen\r\n    SendMessage(MPCHandle, WM_COMMAND, ID_FULLSCREEN, 0);\r\n    Sleep(300);\r\n\r\n    // Remove bordas\r\n    SetWindowLong(MPCHandle, GWL_STYLE,\r\n      GetWindowLong(MPCHandle, GWL_STYLE) and not WS_CAPTION and not WS_THICKFRAME);\r\n\r\n    // Volta ao painel\r\n    Winapi.Windows.SetParent(MPCHandle, Panel3.Handle);\r\n\r\n    // Redimensiona\r\n    SetWindowPos(MPCHandle, 0, 0, 0, Panel3.Width, Panel3.Height, SWP_NOZORDER or SWP_SHOWWINDOW);\r\n\r\n    // Marca estado\r\n    MPCFullScreenMode := False;\r\n\r\n    // Atualiza texto do bot\u00E3o\r\n    btnToggleFull.Caption := 'Tela Cheia';\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha64_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha67_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha87_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with PrismControl.AsMainMenu do  //or in SideMenu use asSideMenu"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha90_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TForm1.ListWMIClasses;\r\nvar\r\n  Locator: OLEVariant;\r\n  Services: OLEVariant;\r\n  ClassesEnum: IEnumvariant;\r\n  WMIClass: OLEVariant;\r\n  PropertiesEnum: IEnumvariant;\r\n  Prop: OLEVariant;\r\n  Fetched: Cardinal;\r\n  CurrClass: string;\r\n  ScriptBuilder: TStringList;\r\n  ClassProps: TStringList;\r\n  i: Integer;\r\n  FirebirdType: string;\r\n  DatabasePath, User, Password: string;\r\nbegin\r\n  ScriptBuilder := TStringList.Create;\r\n  ClassProps := TStringList.Create;\r\n  ClassProps.Sorted := True;\r\n  ClassProps.Duplicates := dupIgnore;\r\n\r\n  // Ajuste aqui o caminho, usu\u00E1rio e senha do banco Firebird desejado\r\n  DatabasePath := 'C:\\bancoWMI.fdb';\r\n  User := 'SYSDBA';\r\n  Password := 'masterkey';\r\n\r\n  CoInitialize(nil);\r\n  try\r\n    try\r\n      Locator := CreateOleObject('WbemScripting.SWbemLocator');\r\n      Services := Locator.ConnectServer('.', 'root\\cimv2');\r\n      ClassesEnum := IUnknown(Services.ExecQuery('SELECT * FROM meta_class', 'WQL', 0)._NewEnum) as IEnumVariant;\r\n\r\n      // Cria\u00E7\u00E3o do banco de dados no script\r\n      ScriptBuilder.Add('-- Script gerado para cria\u00E7\u00E3o do banco Firebird e tabelas das classes WMI');\r\n      ScriptBuilder.Add(Format('CREATE DATABASE ''%s'' USER ''%s'' PASSWORD ''%s'';', [DatabasePath, User, Password]));\r\n      ScriptBuilder.Add('');\r\n\r\n      while ClassesEnum.Next(1, WMIClass, Fetched) = 0 do\r\n      begin\r\n        CurrClass := WMIClass.Path_.Class;\r\n\r\n        Memo1.Lines.Add('Classe: ' + CurrClass);\r\n        Memo1.Lines.Add('  Propriedades:');\r\n\r\n        ClassProps.Clear;\r\n\r\n        PropertiesEnum := IUnknown(WMIClass.Properties_._NewEnum) as IEnumVariant;\r\n\r\n        while PropertiesEnum.Next(1, Prop, Fetched) = 0 do\r\n        begin\r\n          FirebirdType := CIMTypeToFirebirdType(Prop.CIMType);\r\n\r\n          ClientDataSet1.Append;\r\n          ClientDataSet1.FieldByName('Tabela').AsString := CurrClass;\r\n          ClientDataSet1.FieldByName('Campos').AsString := Prop.Name;\r\n          ClientDataSet1.FieldByName('Tamanho').AsString := VarToStr(Prop.CIMType);\r\n          ClientDataSet1.Post;\r\n\r\n          Memo1.Lines.Add('    ' + Prop.Name + ' : ' + VarToStr(Prop.CIMType));\r\n\r\n          ClassProps.Add(Format('  \"%s\" %s', [Prop.Name, FirebirdType]));\r\n\r\n          Prop := Unassigned;\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit1_Linha90_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with PrismControl.AsMainMenu do  //or in SideMenu use asSideMenu"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominioCad_Linha100_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominioCad_Linha102_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominioCad_Linha115_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominioCad_Linha81_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominioCad_Linha83_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominioCad_Linha92_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominio_Linha119_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominio_Linha121_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominio_Linha130_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominio_Linha133_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Popup('PopupCondominioCad', 'Cadastro de Condominios').Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominio_Linha164_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominio_Linha166_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominio_Linha176_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominio_Linha179_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Popup('PopupCondominioCad', 'Cadastro de Condominios').Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondominio_Linha182_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Popup('PopupPix', 'Pagamento Pix').Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondonimosCad_Linha100_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondonimosCad_Linha102_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondonimosCad_Linha115_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondonimos_Linha134_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondonimos_Linha136_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondonimos_Linha138_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondonimos_Linha145_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondonimos_Linha147_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondonimos_Linha148_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Popup('PopupCondominioCad', 'Cadastro de Condominios').Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitCondonimos_Linha150_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With Popup('PopupCondominioCad', 'Cadastro de Condominios').Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitGerarContrasenha_Linha134_M\u00E9todomuitolongo.pas","smell":"Uso de with","linha":32,"trecho":"with FDQuery1 do;"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitGerarContrasenha_Linha134_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TFRMGerarContraSenha.Button1Click(Sender: TObject);\r\nvar\r\n  strsql: string;\r\n  strsql2: string;\r\n  contrasenha: string;\r\n  senhafinal: string;\r\n  i: Integer;\r\nconst\r\n  str = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%?';\r\n  max = 15;\r\nbegin\r\n  if Edit1.Text = '' then\r\n  begin\r\n    ShowMessage('Entre com a chave.');\r\n    Edit1.SetFocus;\r\n  end\r\n  else\r\n  begin\r\n    if EdtData.Text = '' then\r\n    begin\r\n      ShowMessage('Entre com a data de vencimento.');\r\n      EdtData.SetFocus;\r\n    end\r\n    else\r\n    begin\r\n      with FDQuery1 do;\r\n      begin\r\n        strsql := 'select * from registro where chave=' + #39 +\r\n          Edit1.Text + #39;\r\n        strsql := strsql + ' and contrasenha=0';\r\n\r\n        strsql2 :=\r\n          'select razao from chaves,registro where chaves.id_chave= registro.id_chave and registro.chave='\r\n          + #39 + Edit1.Text + #39;\r\n        FDQuery2.SQL.Clear;\r\n        FDQuery2.SQL.Add(strsql2);\r\n        FDQuery2.Open();\r\n        Label6.Caption := FDQuery2.FieldByName('razao').AsString;\r\n\r\n        // ShowMessage(strsql);\r\n        FDQuery1.SQL.Clear;\r\n        FDQuery1.SQL.Add(strsql);\r\n        FDQuery1.Open();\r\n        if (FDQuery1.RecordCount) = 1 then\r\n        begin\r\n          ShowMessage('Chave encontrada');\r\n          // rotina de gerar a contra-senha\r\n          contrasenha := FDQuery1.FieldByName('chave').AsString;\r\n          // ShowMessage(contrasenha);\r\n          // Gerar contra-senha\r\n          Randomize;\r\n          Label3.Caption := '';\r\n          for i := 1 to max do\r\n          begin\r\n            try\r\n              FDConnection1.StartTransaction;\r\n\r\n              FDQuery1.Edit;\r\n              Label3.Caption := Label3.Caption + str[Random(Length(str)) + 1];\r\n              FDQuery1.FieldByName('contrasenha').AsString := contrasenha +\r\n              Label3.Caption;\r\n              senhafinal := contrasenha + Label3.Caption;\r\n\r\n              Memo1.Lines.Clear;\r\n              Memo1.Lines.Add(senhafinal);\r\n\r\n              // Encriptar\r\n              // Memo1.Lines.Add(Crypt('D',senhafinal));\r\n              // fim de encriptar\r\n\r\n              FDQuery1.FieldByName('ativado').AsString := 'S';\r\n              FDQuery1.FieldByName('data_exp').AsDateTime :=\r\n              StrToDateTime(EdtData.Text);\r\n              FDQuery1.Post;\r\n              FDCOnnection1.Commit;\r\n\r\n             Except\r\n             on E: Exception do\r\n             begin\r\n               ShowMessage('Erro ao gravar Contra Senha' + e.Message);\r\n               FDConnection1.Rollback;\r\n               Exit;\r\n             end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitGerarContrasenha_Linha159_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with FDQuery1 do;"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitGerarSerial_Linha181_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with FDQuery1,FDQuery2 do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitGerarSerial_Linha220_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitGerarSerial_Linha250_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitGerarSerial_Linha306_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TFRMGERARSERIAL.Button4Click(Sender: TObject);\r\nvar\r\n    IdSMTP1: TIdSMTP;\r\n    Idmessage: TIdMessage;\r\n    TextoMsg: TidText;\r\n    IdSSL: TIdSSLIOHandlerSocketOpenSSL;\r\n    contatol:string;\r\n    emaill:string;\r\n    telcontatol:string;\r\n    const\r\n    CRFL = #13#10;\r\n\r\nbegin\r\n    IdSMTP1                 := TIdSMTP.create(nil);\r\n    IdSMTP1.ConnectTimeout  := 10000;\r\n    IdSMTP1.ReadTimeout     := 10000;\r\n\r\n    IdMessage               := TIdMessage.create(nil);\r\n    IdMessage.Clear;\r\n    IdMessage.CharSet       := 'iso-8859-1';\r\n    IdMessage.Encoding      := MeMIME;\r\n    IdMessage.ContentType   := 'multipart/related'   ;\r\n    IdMessage.subject       := 'Novo Serial Gerado do cliente: ' +FDQuery2.FieldByName('razao').AsString ;\r\n\r\n    textomsg                := TIdText.Create(IdMessage.MessageParts);\r\n    //textomsg.Body.Text      := 'Se voc\u00EA consegue ler isto ent\u00E3o \u00E9 porque funcionou o teste!';\r\n    contatol    := FDQuery2.FieldByName('contato').AsString;\r\n    emaill      := FDQuery2.FieldByName('email').AsString;\r\n    telcontatol := FDQuery2.FieldByName('telcontato').AsString;\r\n    Memo1.Lines.Add(contatol);\r\n    Memo1.Lines.Add(emaill);\r\n    Memo1.Lines.Add(telcontatol);\r\n    //TextoMsg.Body.Text      :=Memo1.Lines.Text + #13 + 'Serial gerado: '+Label5.Caption;\r\n\r\n    //TextoMsg.Body.Text      :=Memo1.Lines.Text;\r\n    TextoMsg.Body.Add('Chave Gerada: '+Label5.Caption+'<br/>');\r\n    TextoMsg.Body.Add(contatol+'<br/>');\r\n    TextoMsg.Body.Add(emaill+'<br/>');\r\n    TextoMsg.Body.Add(telcontatol+'<br/>');\r\n\r\n\r\n    textomsg.ContentType    := 'text/html';\r\n\r\n    if ((cbtipo.itemindex = 0) or (cbtipo.itemindex = 2)) then\r\n    begin\r\n        // GMAIL e YAHOO\r\n\r\n        if cbtipo.itemindex = 0 then\r\n        begin\r\n            idSMTP1.Host            := 'smtp.gmail.com';\r\n            idSMTP1.Username        := 'delphi.send@gmail.com';\r\n            idSMTP1.Password        := 'delphi.send12345';\r\n        end\r\n        else begin\r\n            idSMTP1.Host            := 'smtp.mail.yahoo.com';\r\n            idSMTP1.Username        := 'email@yahoo.com.br';\r\n            idSMTP1.Password        := 'senha';\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitGerarSerial_Linha368_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitGerarSerial_Linha418_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitPrincipal_Linha120_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with PrismControl.AsMainMenu do  //or in SideMenu use asSideMenu"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitPrincipal_Linha121_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitPrincipal_Linha163_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with PrismControl.AsMainMenu do  //or in SideMenu use asSideMenu"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UnitPrincipal_Linha96_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unitsendemail_Linha126_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unitsendemail_Linha77_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_D2Bridge_Server_Console_Linha220_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class procedure TD2BridgeServerConsole.Run;\r\nbegin\r\n D2BridgeServerController:= TCRMWebAppGlobal.Create(TApplication.Create(nil));\r\n vServerPort:= D2BridgeServerController.Prism.INIConfig.ServerPort(8888);\r\n vServerName:= D2BridgeServerController.Prism.INIConfig.ServerName('D2Bridge Server');\r\n\r\n D2BridgeServerController.APPName:= 'CRM';\r\n //D2BridgeServerController.APPDescription:= 'My D2Bridge Web APP';\r\n\r\n //Security\r\n {\r\n D2BridgeServerController.Prism.Options.Security.Enabled:= false; //True Default\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSpamhausList:= false; //Disable Default Blocked Spamhaus list\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('192.168.10.31'); //Block just IP\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('200.200.200.0/24'); //Block CDIR\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSelfDelist:= false; //Disable Delist\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4WhiteList.Add('192.168.0.1'); //Add IP or CDIR to WhiteList\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitNewConnPerIPMin:= 30; //Limite Connections from IP *minute\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitActiveSessionsPerIP:= 50; //Limite Sessions from IP\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.EnableCrawlerUserAgents:= false; //Disable Default Blocked Crawler User Agents\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Add('NewUserAgent'); //Block User Agent\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Delete('MyUserAgent'); //Allow User Agent\r\n }\r\n\r\n D2BridgeServerController.PrimaryFormClass:= TFrmPrincipal;\r\n\r\n //seconds to Send Session to TimeOut and Destroy after Disconnected\r\n //D2BridgeServerController.Prism.Options.SessionTimeOut:= 300;\r\n\r\n //secounds to set Session in Idle\r\n //D2BridgeServerController.Prism.Options.SessionIdleTimeOut:= 0;\r\n\r\n\r\n D2BridgeServerController.Prism.Options.IncludeJQuery:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.DataSetLog:= true;\r\n\r\n D2BridgeServerController.Prism.Options.CoInitialize:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.VCLStyles:= false;\r\n\r\n //D2BridgeServerController.Prism.Options.ShowError500Page:= false;\r\n\r\n //Uncomment to Dual Mode force http just in Debug Mode\r\n //if IsDebuggerPresent then\r\n // D2BridgeServerController.Prism.Options.SSL:= false\r\n //else\r\n //D2BridgeServerController.Prism.Options.SSL:= true;\r\n\r\n D2BridgeServerController.Languages:= [TD2BridgeLang.Portuguese];\r\n\r\n if D2BridgeServerController.Prism.Options.SSL then\r\n begin\r\n  //Cert File\r\n  D2BridgeServerController.Prism.SSLOptions.CertFile:= '';\r\n  //Cert Key Domain File\r\n  D2BridgeServerController.Prism.SSLOptions.KeyFile:= '';\r\n  //Cert Intermediate (case Let?s Encrypt)\r\n  D2BridgeServerController.Prism.SSLOptions.RootCertFile:= '';\r\n end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_D2Bridge_Server_Console_Linha231_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"class procedure TD2BridgeServerConsole.Run;\r\nbegin\r\n D2BridgeServerController:= TLoja2WebAppGlobal.Create(nil);\r\n \r\n //App Information\r\n {\r\n D2BridgeServerController.ServerAppTitle:= 'My App D2Bridge';\r\n D2BridgeServerController.ServerAppDescription:= 'My App Descrition';\r\n D2BridgeServerController.ServerAppAuthor:= 'Talis Jonatas Gomes';\r\n }\r\n  \r\n vServerPort:= D2BridgeServerController.Prism.INIConfig.ServerPort(8888);\r\n vServerName:= D2BridgeServerController.Prism.INIConfig.ServerName('D2Bridge Server');\r\n\r\n D2BridgeServerController.APPName:= 'Loja2';\r\n //D2BridgeServerController.APPDescription:= 'My D2Bridge Web APP';\r\n\r\n //Security\r\n {\r\n D2BridgeServerController.Prism.Options.Security.Enabled:= false; //True Default\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSpamhausList:= false; //Disable Default Blocked Spamhaus list\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('192.168.10.31'); //Block just IP\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('200.200.200.0/24'); //Block CDIR\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSelfDelist:= false; //Disable Delist\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4WhiteList.Add('192.168.0.1'); //Add IP or CDIR to WhiteList\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitNewConnPerIPMin:= 30; //Limite Connections from IP *minute\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitActiveSessionsPerIP:= 50; //Limite Sessions from IP\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.EnableCrawlerUserAgents:= false; //Disable Default Blocked Crawler User Agents\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Add('NewUserAgent'); //Block User Agent\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Delete('MyUserAgent'); //Allow User Agent\r\n }\r\n\r\n D2BridgeServerController.PrimaryFormClass:= TForm1;\r\n\r\n //seconds to Send Session to TimeOut and Destroy after Disconnected\r\n //D2BridgeServerController.Prism.Options.SessionTimeOut:= 300;\r\n\r\n //secounds to set Session in Idle\r\n //D2BridgeServerController.Prism.Options.SessionIdleTimeOut:= 0;\r\n\r\n\r\n D2BridgeServerController.Prism.Options.IncludeJQuery:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.DataSetLog:= true;\r\n\r\n D2BridgeServerController.Prism.Options.CoInitialize:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.VCLStyles:= false;\r\n\r\n //D2BridgeServerController.Prism.Options.ShowError500Page:= false;\r\n\r\n //Uncomment to Dual Mode force http just in Debug Mode\r\n //if IsDebuggerPresent then\r\n // D2BridgeServerController.Prism.Options.SSL:= false\r\n //else\r\n //D2BridgeServerController.Prism.Options.SSL:= true;\r\n\r\n D2BridgeServerController.Languages:= [TD2BridgeLang.Portuguese];\r\n\r\n if D2BridgeServerController.Prism.Options.SSL then\r\n begin\r\n  //Cert File\r\n  D2BridgeServerController.Prism.SSLOptions.CertFile:= '';\r\n  //Cert Key Domain File\r\n  D2BridgeServerController.Prism.SSLOptions.KeyFile:= '';\r\n  //Cert Intermediate (case Let\u00EF\u00BF\u00BDs Encrypt)\r\n  D2BridgeServerController.Prism.SSLOptions.RootCertFile:= '';\r\n end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_D2Bridge_Server_Linha93_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Button_Options.ClientToScreen(point(0, 1 + Button_Options.Height)) do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_D2Bridge_Server_Linha97_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TForm_D2Bridge_Server.Button_StartClick(Sender: TObject);\r\nbegin\r\n D2BridgeServerController.PrimaryFormClass:= TForm_Login;\r\n\r\n D2BridgeServerController.APPName:= 'Loja3';\r\n //D2BridgeServerController.APPDescription:= 'My D2Bridge Web APP';\r\n\r\n //Security\r\n {\r\n D2BridgeServerController.Prism.Options.Security.Enabled:= false; //True Default\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSpamhausList:= false; //Disable Default Blocked Spamhaus list\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('192.168.10.31'); //Block just IP\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('200.200.200.0/24'); //Block CDIR\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSelfDelist:= false; //Disable Delist\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4WhiteList.Add('192.168.0.1'); //Add IP or CDIR to WhiteList\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitNewConnPerIPMin:= 30; //Limite Connections from IP *minute\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitActiveSessionsPerIP:= 50; //Limite Sessions from IP\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.EnableCrawlerUserAgents:= false; //Disable Default Blocked Crawler User Agents\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Add('NewUserAgent'); //Block User Agent\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Delete('MyUserAgent'); //Allow User Agent\r\n }\r\n\r\n //seconds to Send Session to TimeOut and Destroy after Disconnected\r\n //D2BridgeServerController.Prism.Options.SessionTimeOut:= 300;\r\n\r\n //secounds to set Session in Idle\r\n //D2BridgeServerController.Prism.Options.SessionIdleTimeOut:= 0;\r\n\r\n\r\n D2BridgeServerController.Prism.Options.IncludeJQuery:= true;\r\n\r\n D2BridgeServerController.Prism.Options.DataSetLog:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.CoInitialize:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.VCLStyles:= false;\r\n\r\n //D2BridgeServerController.Prism.Options.ShowError500Page:= false;\r\n\r\n //Uncomment to Dual Mode force http just in Debug Mode\r\n //if IsDebuggerPresent then\r\n // D2BridgeServerController.Prism.Options.SSL:= false\r\n //else\r\n //D2BridgeServerController.Prism.Options.SSL:= true;\r\n\r\n D2BridgeServerController.Languages:= [TD2BridgeLang.Portuguese];\r\n\r\n if D2BridgeServerController.Prism.Options.SSL then\r\n begin\r\n  //Cert File\r\n  D2BridgeServerController.Prism.SSLOptions.CertFile:= '';\r\n  //Cert Key Domain File\r\n  D2BridgeServerController.Prism.SSLOptions.KeyFile:= '';\r\n  //Cert Intermediate (case Let\u00EF\u00BF\u00BDs Encrypt)\r\n  D2BridgeServerController.Prism.SSLOptions.RootCertFile:= '';\r\n end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_Login_Linha104_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_Login_Linha109_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Card do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_Login_Linha115_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with BodyItems.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_Login_Linha117_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_Login_Linha120_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_Login_Linha123_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_Login_Linha124_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Col.Items.add do //Example Edit + Button same row and col"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\Unit_Login_Linha130_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UPrincipal_Linha109_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    procedure Button1Click(Sender: TObject);\r\n    procedure Edit1Change(Sender: TObject);\r\n    procedure DBGrid1DblClick(Sender: TObject);\r\n    procedure Edit3Change(Sender: TObject);\r\n    procedure FormShow(Sender: TObject);\r\n    procedure DBGrid1MouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Integer);\r\n    procedure DBGrid1MouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Integer);\r\n    procedure Button2Click(Sender: TObject);\r\n    procedure FormCreate(Sender: TObject);\r\n    procedure DBNavigator1Click(Sender: TObject; Button: TNavigateBtn);\r\n    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;\r\n      DataCol: Integer; Column: TColumn; State: TGridDrawState);\r\n    procedure DBGrid1ColEnter(Sender: TObject);\r\n    procedure FDQuery1ativoGetText(Sender: TField; var Text: string;\r\n      DisplayText: Boolean);\r\n    procedure DBGrid1CellClick(Column: TColumn);\r\n    procedure SpeedButton1Click(Sender: TObject);\r\n    procedure Button3Click(Sender: TObject);\r\n    procedure BtnDesmarcarItensClick(Sender: TObject);\r\n    procedure BtnExrpotarTabelaDeItensClick(Sender: TObject);\r\n    procedure CBCabosClick(Sender: TObject);\r\n    procedure ClientDataSet1FilterRecord(DataSet: TDataSet;\r\n      var Accept: Boolean);\r\n\r\n  private\r\n    { Private declarations }\r\n     ShiftClick: Boolean;\r\n     ShiftStartRow, ShiftEndRow: Integer;\r\n     ListaItens: TStringList;\r\n\r\n     procedure CarregarGrid;\r\n    procedure DesmarcarTodosItens;\r\n    procedure ExpDOC(DataSet: TDataSet; Arq: string);\r\n    procedure FiltrarRegistros;\r\n    procedure CriarDataSet;\r\n  public\r\n    { Public declarations }\r\n    qryFabricantes: TFDQuery;\r\n    numero: integer;\r\n    PartNumbers: TPartNumberInfo; //TStringList;\r\n    procedure ExportToUTF8Text(descritivo: string; outputPath: string);\r\n    procedure CopiarParaAreaDeTransferencia(const texto: string);\r\n    procedure ExportSelectedRecordsToTextFiles;\r\n    procedure SelectRows(StartRow, EndRow: Integer);\r\n    procedure Swap(var A, B: Integer);\r\n    procedure GerarArquivoWord;\r\n    procedure ConcatenateWordFiles(const FilePaths: array of string; const OutputFile: string);\r\n    function FindAllDocxFiles(const DirectoryPath: string): TArray<string>;\r\n    function FiltrarNomeArquivo(const NomeOriginal: string): string;\r\n    procedure GerarAruivoWordunico;\r\n    function ExtrairNomeArquivo(const NomeOriginal: string): string;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UPrincipal_Linha1459_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With FrmPrincipal do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UPrincipal_Linha1480_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"With FrmPrincipal do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UPrincipal_Linha209_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"    procedure Circle1Gesture(Sender: TObject;\r\n      const EventInfo: TGestureEventInfo; var Handled: Boolean);\r\n    procedure FormCreate(Sender: TObject);\r\n    procedure Circle1Click(Sender: TObject);\r\n    procedure Circle1MouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Circle1MouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Layout1MouseMove(Sender: TObject; Shift: TShiftState; X,\r\n      Y: Single);\r\n    procedure Image4Gesture(Sender: TObject; const EventInfo: TGestureEventInfo;\r\n      var Handled: Boolean);\r\n    procedure Image4MouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Image4MouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Circle1DblClick(Sender: TObject);\r\n    procedure Image4DblClick(Sender: TObject);\r\n    procedure MenuItemFabricantesCategoriasClick(Sender: TObject);\r\n    procedure NewImagemDbClick(Sender: TObject);\r\n    procedure NewImagemMouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure NewImagemGesture(Sender: TObject;\r\n              const EventInfo: TGestureEventInfo;\r\n              var Handled: Boolean);\r\n    procedure NewImagemMouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure FormShow(Sender: TObject);\r\n    procedure BtnCarregarFotoClick(Sender: TObject);\r\n    procedure MenuItemConfiguracoesSistemaClick(Sender: TObject);\r\n    procedure MenuItem16Click(Sender: TObject);\r\n    procedure BtnCopiarFotoClick(Sender: TObject);\r\n    procedure Image4MouseWheel(Sender: TObject; Shift: TShiftState;\r\n      WheelDelta: Integer; var Handled: Boolean);\r\n    procedure TrackBar1Change(Sender: TObject);\r\n    procedure CBMarcasChange(Sender: TObject);\r\n    procedure CBModeloChange(Sender: TObject);\r\n    procedure CBFabricantesChange(Sender: TObject);\r\n    procedure CBCategoriasChange(Sender: TObject);\r\n    procedure CBLinhasChange(Sender: TObject);\r\n    procedure CBProdutosChange(Sender: TObject);\r\n    procedure BtnCopiarRodaClick(Sender: TObject);\r\n    procedure MenuItemClientesDadosClick(Sender: TObject);\r\n    procedure MenuItemClientesVeiculosClick(Sender: TObject);\r\n    procedure MenuItemFabricantesDadosClick(Sender: TObject);\r\n    procedure MenuItemClientesOrcamentosClick(Sender: TObject);\r\n    procedure MenuItemRegistrarClick(Sender: TObject);\r\n    procedure BtnCarregarRodaCalotaClick(Sender: TObject);\r\n    procedure SairExecute(Sender: TObject);\r\n    procedure LogOffExecute(Sender: TObject);\r\n    procedure FormClose(Sender: TObject; var Action: TCloseAction);\r\n    procedure MediaReceiverProfileResourceReceived(const Sender: TObject;\r\n      const AResource: TRemoteResource);\r\n    procedure MediaReceiverManagerRequestManagerPassword(const Sender: TObject;\r\n      const ARemoteIdentifier: string; var Password: string);\r\n    procedure MenuItemFabricanteProdutosClick(Sender: TObject);\r\n    procedure MenuItemFabricantesDeVeiculosClick(Sender: TObject);\r\n    procedure Image5Click(Sender: TObject);\r\n    procedure ImageLogoClick(Sender: TObject);\r\n    procedure MenuItem2Click(Sender: TObject);\r\n    procedure MenuItem3Click(Sender: TObject);\r\n    procedure MenuItem4Click(Sender: TObject);\r\n    procedure MenuItemBackupClick(Sender: TObject);\r\n    procedure Button5Click(Sender: TObject);\r\n\r\n\r\n  private\r\n    { Private declarations }\r\n    MoveObjeto: Boolean;\r\n    OffSet: TPointF;\r\n    NewCircle: TCircle;\r\n    NewImagem: TImage;\r\n    FIdMarcaSelecionada: integer;\r\n    FIdFabricante: integer;\r\n    FIdCategoria: integer;\r\n    FidLinha: integer;\r\n    FMemoryStream: TMemoryStream;\r\n    FBlobStream: TStream;\r\n    FIdProduto: integer;\r\n    FValorTotalOrcamento: Double;\r\n    ProdutoDS: TDataSet;\r\n    qry: TFDQuery;\r\n    FConexao: TFDConnection;\r\n    CurrentDateTime: TDateTime; //Para uso com o Log\r\n    DateTimeStr: string;        //Para uso com o Log\r\n    FArquivoLogo: String; //Nome do Arquivo da Logo a Ser carregado\r\n\r\n    procedure Modo_Edicao(editar: Boolean);\r\n    procedure Modo_Edicao2(editar: Boolean);\r\n    procedure NewImagemMouseWheel(Sender: TObject; Shift: TShiftState;\r\n      WheelDelta: Integer; var Handled: Boolean);\r\n    procedure SetidUsuario(const Value: Integer);\r\n    procedure SaveBitmapToFile(Bitmap: TBitmap; const FileName: string);\r\n    procedure EnviarImagemWhatsApp(const FileName: string);\r\n    procedure EnviarAnexoWhatsApp(const FileName: string);\r\n    function ImageToBase64(const FileName: string): string;\r\n    function DesabilitaEdtWhatsApp:Boolean;\r\n\r\n    function CapturaTela:TBitMap;\r\n\r\n  public\r\n    { Public declarations }\r\n     FidUsuario: Integer;\r\n     FLinguagem: string;\r\n     property idUsuario: Integer read FidUsuario write SetidUsuario;\r\n     procedure CarregarCores;\r\n     procedure CarregarLinguagem;\r\n     procedure CarregarLogo;\r\n     constructor create;\r\n     destructor destroy;override;\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\UPrincipal_Linha416_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TFrmPrincipal.BtnCopiarRodaClick(Sender: TObject);\r\nbegin\r\n  if MoveObjeto then\r\n    Modo_Edicao(False);\r\n\r\n  if NOT Assigned(NewCircle) then\r\n    begin\r\n      // Create a new TCircle component\r\n      NewCircle := TCircle.Create(Self);\r\n\r\n      // Copy the properties of the original TCircle component\r\n      NewCircle.Position.X := Circle1.Position.X + 50;\r\n      NewCircle.Position.Y := Circle1.Position.Y + 50;\r\n      NewCircle.Width      := Circle1.Width;\r\n      NewCircle.Height     := Circle1.Height;\r\n      NewCircle.Fill.Color := Circle1.Fill.Color;\r\n\r\n      //Criar o TImage dentro do NewCircle\r\n      NewImagem:= TImage.Create(NewCircle);\r\n      NewImagem.Parent:= NewCircle;\r\n      NewImagem.Bitmap.Assign(TImage(Circle1.Children[0]).Bitmap);\r\n      NewImagem.Align:=  TalignLayout.Client;\r\n\r\n      // Eventos\r\n      //NewImagem.OnClick      :=  NewImagemClick;\r\n      NewImagem.OnDblClick   :=  NewImagemDbClick;\r\n      NewImagem.OnGesture    :=  NewImagemGesture;\r\n      NewImagem.OnMouseDown  :=  NewImagemMouseDown;\r\n      NewImagem.OnMouseUp    :=  NewImagemMouseUp;\r\n      NewImagem.OnMouseWheel :=  NewImagemMouseWheel;\r\n\r\n      NewCircle.Parent := Self; //Cria no Formul\u00E1rio Principal\r\n    end\r\n    else //apagar o mesmo ou receber a copia da Matrix Atual\r\n    begin\r\n      //Criar o TImage dentro do NewCircle\r\n      NewImagem.BitMap.Clear($000000);\r\n      NewImagem:= TImage.Create(nil); //NewCircle - original\r\n      NewImagem.Parent:= NewCircle;\r\n      NewImagem.Bitmap.Assign(TImage(Circle1.Children[0]).Bitmap);\r\n      NewImagem.Align:=  TalignLayout.Client;\r\n\r\n      // Copy the events from the original TImage to the new TImage\r\n      //NewImagem.OnClick      :=  NewImagemClick; //Ficou com o clique esquerdo sem fun\u00E7\u00E3o\r\n      NewImagem.OnDblClick   :=  NewImagemDbClick;\r\n      NewImagem.OnGesture    :=  NewImagemGesture;\r\n      NewImagem.OnMouseDown  :=  NewImagemMouseDown;\r\n      NewImagem.OnMouseUp    :=  NewImagemMouseUp;\r\n      NewImagem.OnMouseWheel :=  NewImagemMouseWheel;\r\n\r\n      //Exit;\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uPrincipal_Linha94_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TFrmPrincipal.BtnCriarBaseClick(Sender: TObject);\r\nvar\r\n  Connection: TFDConnection;\r\n  Query: TFDQuery;\r\n  ScriptFile: TStringList;\r\n  OpenDialog: TOpenDialog;\r\n  ScriptText: string;\r\n  ScriptsPath: string;\r\n  DatabaseName: string;\r\nbegin\r\n  ScriptsPath := ExtractFilePath(Application.ExeName) + 'scripts\\'; // Caminho para a pasta \"scripts\" da aplica\u00E7\u00E3o\r\n\r\n  OpenDialog            := TOpenDialog.Create(nil);\r\n  OpenDialog.Filter     := 'Arquivos SQL (*.sql)|*.sql'; // Filtro para selecionar apenas arquivos SQL\r\n  OpenDialog.InitialDir := ScriptsPath; // Define a pasta inicial do OpenDialog como a pasta \"scripts\" da aplica\u00E7\u00E3o\r\n\r\n  if OpenDialog.Execute then\r\n  begin\r\n    Connection := TFDConnection.Create(nil);\r\n    try\r\n      Connection.DriverName := 'MySQL'; // Driver do FireDAC para MySQL\r\n      Connection.Params.Add('Server=localhost'); // Endere\u00E7o do servidor MySQL\r\n      Connection.Params.Add('User_Name=root'); // Usu\u00E1rio do MySQL\r\n      Connection.Params.Add('Password=19741974'); // Senha do MySQL\r\n\r\n      Connection.Connected := True;\r\n\r\n      Query := TFDQuery.Create(nil);\r\n      try\r\n        Query.Connection := Connection;\r\n\r\n        ScriptFile := TStringList.Create;\r\n        try\r\n          ScriptFile.LoadFromFile(OpenDialog.FileName); // Carrega o script do arquivo selecionado\r\n\r\n          ScriptText := ScriptFile.Text; // Obt\u00E9m o texto do script\r\n\r\n          // Substitui o texto \"fulanorodas2\" pelo valor do TEdit (Edit1.Text)\r\n          ScriptText := StringReplace(ScriptText, 'fulanorodas2', Edit1.Text, [rfReplaceAll]);\r\n\r\n          Query.SQL.Text := ScriptText; // Define o script carregado como texto SQL do Query\r\n\r\n          // Procura o nome do banco de dados dentro do script\r\n          DatabaseName := ExtractDatabaseNameFromScript(ScriptText);\r\n\r\n          if DatabaseName <> '' then\r\n          begin\r\n            // Adiciona informa\u00E7\u00F5es ao Memo1.Text\r\n            Memo1.Lines.Add('Criando o banco de dados: ' + DatabaseName);\r\n\r\n            // Cria o banco de dados com o nome extra\u00EDdo\r\n            Query.SQL.Text := 'CREATE SCHEMA IF NOT EXISTS `' + DatabaseName + '`';\r\n            Query.ExecSQL;\r\n\r\n            Memo1.Lines.Add('Banco de dados criado com sucesso.');\r\n\r\n            // Adiciona informa\u00E7\u00F5es ao Memo1.Text\r\n            Memo1.Lines.Add('Executando o restante do script...');\r\n\r\n            // Executa o restante do script\r\n            Query.SQL.Text := ScriptText;\r\n            Query.ExecSQL;\r\n\r\n            // Adicionar registro \u00E0 tabela de login\r\n            Memo1.Lines.Add('Adicionando o usuario admin \u00E0 tabela de login...');\r\n\r\n            Query.SQL.Text :=\r\n              'INSERT INTO login (usuario, senha, email, tipo, ativo, idcliente) ' +\r\n              'VALUES (:usuario, :senha, :email, :tipo, :ativo, :idcliente)';\r\n            Query.Params.ParamByName('usuario').AsString    := 'admin';\r\n            Query.Params.ParamByName('senha').AsString      := '123';\r\n            Query.Params.ParamByName('email').AsString      := Edit2.Text;\r\n            Query.Params.ParamByName('tipo').AsString       := 'A';\r\n            Query.Params.ParamByName('ativo').AsString      := 'S';\r\n            Query.Params.ParamByName('idcliente').AsInteger := 1;\r\n            Query.ExecSQL;\r\n\r\n            Memo1.Lines.Add('Banco de dados criado e script executado com sucesso: ' + DatabaseName);\r\n\r\n            //se \u00E9 demo temos que adicionar a data do termino do demo na tabela registro\r\n            if cbDemo.Checked then\r\n            begin\r\n\r\n              //id, id_chave, chave, data_inc (now) ,  data_exp now+30, contrasenha, ativado ='S' e serialhd\r\n              Query.SQL.Clear;\r\n              Query.SQL.Text :=\r\n              'INSERT INTO registro (id, id_chave, data_inc, data_exp, contrasenha, ativo, serialhd ) ' +\r\n              'VALUES (:id, :id_chave, :data_inc, :data_exp, :contrasenha, :ativo, :serialhd)';\r\n              Query.Params.ParamByName('id').AsString          := '1';\r\n              Query.Params.ParamByName('id_chave').AsString    := '1';\r\n              Query.Params.ParamByName('data_inc').AsDate      := now;\r\n              Query.Params.ParamByName('data_exp').AsDate      := now+30;\r\n              Query.Params.ParamByName('contrasenha').AsString := 'Conect';\r\n              Query.Params.ParamByName('ativo').AsString       := 'S';\r\n              Query.Params.ParamByName('serialhd').AsString    := '0';\r\n              Query.ExecSQL;\r\n\r\n              Memo1.Lines.Add('Foi criada uma data de expira\u00E7\u00E3o ' + DateToStr(Now+30) + ' , pois o programa foi marcado como Demo');\r\n            end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\URegistrar_Linha349_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TFrmRegistrar.CarregarLinguagem;\r\nvar\r\n  IniFile: TIniFile;\r\n  I: Integer;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + '\\Config.ini');\r\n  try\r\n    FLinguagem :=IniFile.ReadString('Traducao', 'Linguagem', '');\r\n\r\n   if FLinguagem = 'Portuguese' then\r\n   begin\r\n     lblRazao.Text        := 'Raz\u00E3o Social / Nome';\r\n     lblCnpj_cpf.Text     := 'CNPJ / CPF';\r\n     lblIe.Text           := 'Inscri\u00E7\u00E3o Estadual';\r\n     lblIm.Text           := 'Inscri\u00E7\u00E3o Municipal';\r\n     lblEndereco.Text     := 'Endere\u00E7o';\r\n     lblNumero.Text       := 'N\u00FAmero';\r\n     LblComplemento.Text  := 'Complemento';\r\n     LblBairro.Text       := 'Bairro';\r\n     LblCidade.Text       := 'Cidade';\r\n     LblResponnsavel.Text := 'Nome do respons\u00E1vel pelo registro';\r\n     LblTelefone.Text     := 'Telefone/WhatsApp';\r\n     LblEmail.Text        := 'E-mail';\r\n     BtnRegistrar.Text    := '&Registrar';\r\n     LblTitulo.Text       := 'Registro do Wheel Pro';\r\n     lblCEP.Text          := 'CEP';\r\n     FrmRegistrar.Caption := 'Registro do Wheel Pro';\r\n     TabItem1.Text        := 'Cadastro';\r\n     TabItem2.Text        := 'Gerar senha';\r\n     TabItem3.Text        := 'Enviar Serial';\r\n     TabItem4.Text        := 'Inserir Contra-Senha';\r\n     lblEntreseuCNPJ.Text := 'Entre seu CNPJ';\r\n     lblSeuSerial.Text    := 'Seu Serial';\r\n     lblNumserialHD.Text  := 'O n\u00FAmero serial do seu HD \u00E9:';\r\n     lblseuSErialBios.Text:= 'Seu Serial da Bios \u00E9 :';\r\n     lblContraSenha.Text  := 'Contra - Senha';\r\n   end\r\n   else if FLinguagem = 'Ingles' then\r\n   begin\r\n     lblRazao.Text        := 'Corporate Name / Name';\r\n     lblCnpj_cpf.Text     := 'Tax Identification Number - TIN';\r\n     lblIe.Visible        := False;\r\n     EdtInscricaoEstadual.Visible:= False;\r\n     lblIe.Text           := 'Inscri\u00E7\u00E3o Estadual';\r\n     lblIm.Visible        := False;\r\n     EdtIncricaoMunicipal.Visible:= False;\r\n     lblIm.Text           := 'Inscri\u00E7\u00E3o Municipal';\r\n     lblEndereco.Text     := 'Address';\r\n     lblNumero.Text       := 'Number';\r\n     LblComplemento.Text  := 'Complement';\r\n     LblBairro.Text       := 'Neighborhood';\r\n     LblCidade.Text       := 'City';\r\n     LblResponnsavel.Text := 'Name of person responsible for registration';\r\n     LblTelefone.Text     := 'Phone/WhatsApp';\r\n     LblEmail.Text        := 'E-mail';\r\n     lblCEP.Text          := 'ZIP CODE';\r\n     BtnRegistrar.Text    := '&Register';\r\n     LblTitulo.Text       := 'Wheel Pro registration';\r\n     FrmRegistrar.Caption := 'Wheel Pro registration';\r\n     TabItem1.Text        := 'Register';\r\n     TabItem2.Text        := 'Generate Password';\r\n     TabItem3.Text        := 'Send Serial';\r\n     TabItem4.Text        := 'Enter Password';\r\n     lblEntreseuCNPJ.Text := 'Enter your EIN';\r\n     lblSeuSerial.Text    := 'Your Serial';\r\n     lblNumserialHD.Text  := 'Serial number of your HD is:';\r\n     lblseuSErialBios.Text:= 'Your Bios Serial is:';\r\n     lblContraSenha.Text  := 'Password';\r\n   end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\uView.CadastroDePedidos_Linha208_Usodewith.pas","smell":"Uso de with","linha":7,"trecho":"with mtbItensPedido.FieldDefs do"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\View.CustomizedEventEditorForm_Linha135_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TcxSchedulerEventEditorCustomized.btnOkClick(Sender: TObject);\r\nvar\r\n  //EnviarConfirmacao: TModelAgendamento;\r\n  LIdLocal: integer;\r\n  qryIdLocal: TFDQuery;\r\n  qryIdVeiculo:TFDQuery;\r\n  qryFila: TFDQuery;\r\nbegin\r\n  inherited;\r\n\r\n  //localizar o veiculo pela placa no cadastro para pegar o idveiculo\r\n  qryIdVeiculo:= TFDQuery.Create(nil);\r\n  qryIdVeiculo.Connection:= DataModule3.FDConnection1;\r\n  try\r\n    qryIdVeiculo.SQL.Add('select idveiculos from veiculos');\r\n    qryIdVeiculo.SQL.Add(' where placa = :placa');\r\n    qryIdVeiculo.parambyname('placa').AsString := Event.GetCustomFieldValueByName('Placa'); //CBPlacasVeiculos.EditValue;//cxTextEdit1.editValue;\r\n    qryIdVeiculo.open;\r\n\r\n    if qryIdVeiculo.RecordCount > 0 then\r\n    begin\r\n      //Preenche par\u00E2metros a serem enviados no e-mail\r\n      LSubject    := teSubject.EditValue;\r\n      LLocal      := Event.GetCustomFieldValueByName('Locais');// cxDBComboBoxLocais.;//cxDBComboBoxLocais.EditValue;     //como pegar o valor selecionado\r\n      LPlaca      := Event.GetCustomFieldValueByName('Placa');//CBPlacasVeiculos.Text;//cxTextEdit1.EditValue;\r\n      LNF         := cxTextEdit2.EditValue;\r\n      LidVeiculo  := qryIdVeiculo.FieldByName('idveiculos').AsInteger;\r\n      LNotaFiscal := cxTextEdit2.editValue;\r\n      LTelefone   := cxTextEdit3.EditValue;\r\n      LEmail      := cxTextEdit4.EditValue;\r\n      LData       := deStart.EditingValue;\r\n      LHora       := teStart.EditValue;\r\n      LObs        := meMessage.EditValue;\r\n\r\n      LMemo := TStringList.Create;\r\n      LMemo.Add(LSubject);\r\n      LMemo.Add('Local    :' + LLocal);\r\n      LMemo.Add('Placa    :' + LPlaca);\r\n      LMemo.Add('NF       :' + IntToStr(LNotaFiscal));\r\n      LMemo.Add('Telefone :' + LTelefone);\r\n      LMemo.Add('E-mail   :' + LEMail);\r\n      LMemo.Add('Data     :' + DateTimeToStr(LData));\r\n      LMemo.Add('Hora     :' + LHora);\r\n      LMemo.Add('Obs.     :' + LObs);\r\n\r\n    end\r\n    else\r\n    begin\r\n      TThread.Synchronize(nil,\r\n      procedure\r\n      begin\r\n        ShowMessage('Veiculo N\u00E3o cadastrado!');\r\n        //Inserir o veiculo na tabela veiculos\r\n        Application.CreateForm(TFrmEntradaVeiculos, FrmEntradaVeiculos);\r\n        FrmEntradaVeiculos.ShowModal;\r\n      end);\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\View.GerenciaFila_Linha112_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TFrmGerenciarFila.FormShow(Sender: TObject);\r\nbegin\r\n  //Enviar os e-mails do agendamento - ver a Thread para essa parte\r\n  TTHread.CreateAnonymousThread(procedure\r\n  var\r\n    qryEmviarEmail, qry2: TFDQuery;\r\n    LEnviar : TModelAgendamento;\r\n    LSubject: string;\r\n    LEmail: String;\r\n    LMemo: String;\r\n    LDataEnvio: TDate;\r\n    LPlaca: String;\r\n    LLocal: String;\r\n    LNF: Integer;\r\n    LTelefone: String;\r\n    LHora: TTime;\r\n    LOBs: String;\r\n  begin\r\n    qryEmviarEmail:= TFDquery.Create(nil);\r\n    qryEmviarEmail.Connection:= DataModule3.FDConnection1;\r\n    try\r\n      qryEmviarEmail.Close;\r\n      qryEmviarEmail.SQL.Clear;\r\n      qryEmviarEmail.SQL.Add('select * from email');\r\n      qryEmviarEmail.sql.Add(' where enviado=''N'' ');\r\n      qryEmviarEmail.Open;\r\n\r\n      if qryEmviarEmail.RecordCount > 0 then\r\n      begin\r\n        LSubject   := qryEmviarEmail.FieldByName('subject').AsString;\r\n        LEmail     := qryEmviarEmail.FieldByName('email').AsString;\r\n        LMemo      := qryEmviarEmail.FieldByName('memo').AsString;\r\n        LDataEnvio := qryEmviarEmail.FieldByName('dataenvio').AsDateTime;\r\n        LPlaca     := qryEmviarEmail.FieldByName('placa').AsString;;\r\n        LLocal     := qryEmviarEmail.FieldByName('local').AsString;;\r\n        LNF        := qryEmviarEmail.FieldByName('nf').AsInteger;\r\n        LTelefone  := qryEmviarEmail.FieldByName('telefone').AsString;\r\n        LHora      := qryEmviarEmail.FieldByName('hora').AsVariant;\r\n        LOBs       := qryEmviarEmail.FieldByName('memo').AsString;\r\n\r\n\r\n        qryEmviarEmail.First;\r\n        while not qryEmviarEmail.Eof do\r\n        begin\r\n          LEnviar := TModelAgendamento.Create;\r\n          try\r\n            if LEnviar.EnviarEmail2(LSubject, LPlaca, LNF, LLocal, LTelefone, LEmail, LDataEnvio, TimeToStr(LHora) , LObs) then\r\n            begin\r\n                LEnviar.EditarEmailEnviado;\r\n                //update da tabela email o campo enviado tem que mudar para S\r\n                qry2:= TFDquery.Create(nil);\r\n                qry2.Connection:= DM.DataModule3.FDConnection1;\r\n                try\r\n                  qry2.SQL.clear;\r\n                  qry2.SQL.Text :=\r\n                  'UPDATE email  ' +\r\n                  'SET enviado = ''S'' ' +  //Nono N veiculos n\u00E3o v\u00E3o para o monitor\r\n                  'WHERE idemail = :idemail';\r\n\r\n                  qry2.ParamByName('idemail').AsInteger := qryEmviarEmail.FieldByName('idemail').AsInteger;\r\n\r\n                  qry2.ExecSQL;\r\n                finally\r\n                  qry2.Free;\r\n                end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\View.Principal_Linha133_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TFrmPrincipal.CarregarEdits;\r\nvar\r\n  IniFile: TIniFile;\r\n  EncryptedServer    : string;\r\n  DecryptedServer    : string;\r\n  EncryptedPassword  : string;\r\n  DecryptedPassword  : string;\r\n  EncryptedDataBase  : string;\r\n  DescryptedDataBase : string;\r\n  EncryptedUserName  : string;\r\n  DescryptedUserName : string;\r\n\r\n  EncryptedServerLicencas    : string;\r\n  DecryptedServerLicencas    : string;\r\n  EncryptedPasswordLicencas  : string;\r\n  DecryptedPasswordLicencas  : string;\r\n  EncryptedDataBaseLicencas  : string;\r\n  DescryptedDataBaseLicencas : string;\r\n  EncryptedUserNameLicencas  : string;\r\n  DescryptedUserNameLicencas : string;\r\n\r\n  Funcao: TCriptografia;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + '\\Server.ini');\r\n  Funcao  := TCriptografia.Create;\r\n  try\r\n    EncryptedServer   := IniFile.ReadString('Banco de Dados', 'Server', '');\r\n    EncryptedPassword := IniFile.ReadString('Banco de Dados', 'Password', '');\r\n    EncryptedDataBase := IniFile.ReadString('Banco de Dados', 'Database', '');\r\n    EncryptedUserName := IniFile.ReadString('Banco de Dados', 'User_Name', '');\r\n\r\n    DecryptedServer    := Funcao.DecryptString(EncryptedServer, 123);\r\n    DecryptedPassword  := Funcao.DecryptString(EncryptedPassword, 123);\r\n    DescryptedDataBase := Funcao.DecryptString(EncryptedDataBase, 123);\r\n    DescryptedUserName := Funcao.DecryptString(EncryptedUserName, 123);\r\n\r\n    EncryptedServerLicencas   := IniFile.ReadString('BancoLicencas', 'Server', '');\r\n    EncryptedPasswordLicencas := IniFile.ReadString('BancoLicencas', 'Password', '');\r\n    EncryptedDataBaseLicencas := IniFile.ReadString('BancoLicencas', 'Database', '');\r\n    EncryptedUserNameLicencas := IniFile.ReadString('BancoLicencas', 'User_Name', '');\r\n\r\n    DecryptedServerLicencas    := Funcao.DecryptString(EncryptedServer, 123);\r\n    DecryptedPasswordLicencas  := Funcao.DecryptString(EncryptedPassword, 123);\r\n    DescryptedDataBaseLicencas := Funcao.DecryptString(EncryptedDataBase, 123);\r\n    DescryptedUserNameLicencas := Funcao.DecryptString(EncryptedUserName, 123);\r\n\r\n    // Carregar Edits Aba Banco - GroupBox Banco\r\n    EdtDadosBancoServer.Text   := DecryptedServer;\r\n    EdtDadosBancoPassword.Text := DecryptedPassword;\r\n    EdtDadosBancoDataBase.Text := DescryptedDataBase;\r\n    EdtDadosBancoUserName.Text := DescryptedUserName;\r\n\r\n    //Carregar Edits Aba Dados Encryptados - GroupBox Licen\u00E7as\r\n    EdtEncryptadosBancoLicencasServer.Text   := DecryptedServerLicencas;\r\n    EdtEncryptadosBancoLicencasPassword.Text := DecryptedPasswordLicencas;\r\n    EdtEncryptadosBancoLicencasDataBase.Text := DescryptedDataBaseLicencas;\r\n    EdtEncryptadosBancoLicencasUserName.Text := DescryptedUserNameLicencas;\r\n\r\n  finally\r\n    IniFile.Free;\r\n    Funcao.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CodeSmellDetector\\Win32\\Debug\\relatorios\\sugestoes\\View.Principal_Linha75_M\u00E9todomuitolongo.pas","smell":"M\u00E9todo muito longo","linha":7,"trecho":"procedure TFrmPrincipal.BtnEncriptarClick(Sender: TObject);\r\nvar\r\n  IniFile: TIniFile;\r\n  EncryptedServer   : string;\r\n  EncryptedPassword : string;\r\n  EncryptedDataBase : string;\r\n  EncryptedUserName : string;\r\n  EncryptedServerLicencas   : string;\r\n  EncryptedPasswordLicencas : string;\r\n  EncryptedDataBaseLicencas : string;\r\n  EncryptedUserNameLicencas : string;\r\n  Funcoes: TCriptografia;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + 'Server.ini');\r\n  Funcoes:= TCriptografia.Create;\r\n  try\r\n     EncryptedServer   := Funcoes.EncryptString(EdtDadosBancoServer.Text, 123);\r\n     EncryptedPassword := Funcoes.EncryptString(EdtDadosBancoPassword.Text, 123);\r\n     EncryptedDataBase := Funcoes.EncryptString(EdtDadosBancoDataBase.Text,123);\r\n     EncryptedUserName := Funcoes.EncryptString(EdtDadosBancoUserName.Text,123);\r\n\r\n     EncryptedServerLicencas   := Funcoes.EncryptString(EdtDadosLicenasServer.Text,123);\r\n     EncryptedPasswordLicencas := Funcoes.EncryptString(EdtDadosLicencasPassword.Text,123);\r\n     EncryptedDataBaseLicencas := Funcoes.EncryptString(EdtDadosLicenasDataBase.Text,123);\r\n     EncryptedUserNameLicencas := Funcoes.EncryptString(EdtDadosLicencasUserName.Text,123);\r\n\r\n     //Escreve no arquivo ini\r\n     IniFile.WriteString('Banco de Dados', 'Server', EncryptedServer);\r\n     IniFile.WriteString('Banco de Dados', 'Password', EncryptedPassword);\r\n     IniFile.WriteString('Banco de Dados', 'Database', EncryptedDataBase);\r\n     IniFile.WriteString('Banco de Dados', 'User_Name', EncryptedUserName);\r\n\r\n     IniFile.WriteString('BancoLicencas', 'Server',    EncryptedServerLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'Password',  EncryptedPasswordLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'Database',  EncryptedDataBaseLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'User_Name', EncryptedUserNameLicencas);\r\n\r\n     //Preenche os Edits da Aba Encriptada - Banco\r\n     EdtEncryptadosBancoServer.Text   := EncryptedServer;\r\n     EdtEncryptadosBancoPassword.Text := EncryptedPassword;\r\n     EdtEncryptadosBancoDataBase.Text := EncryptedDataBase;\r\n     EdtEncryptadosBancoUserName.Text := EncryptedUserName;\r\n\r\n     //Preenche os Edits da Aba Encriptada - Banco Licen\u00E7as\r\n     EdtEncryptadosBancoLicencasServer.Text   := EncryptedServerLicencas;\r\n     EdtEncryptadosBancoLicencasPassword.Text := EncryptedPasswordLicencas;\r\n     EdtEncryptadosBancoLicencasDataBase.Text := EncryptedDataBaseLicencas;\r\n     EdtEncryptadosBancoLicencasUserName.Text := EncryptedUserNameLicencas;\r\n\r\n     inifile.UpdateFile;\r\n\r\n  finally\r\n    IniFile.Free;\r\n    Funcoes.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CRM\\backup\\UnitCondonimos.pas","smell":"Uso de with","linha":134,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CRM\\backup\\UnitCondonimos.pas","smell":"Uso de with","linha":136,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\backup\\UnitCondonimos.pas","smell":"Uso de with","linha":145,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\backup\\UnitCondonimos.pas","smell":"Uso de with","linha":148,"trecho":"With Popup('PopupCondominioCad', 'Cadastro de Condominios').Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\FSPix-VCL\\uFrmPix.pas","smell":"Uso de with","linha":121,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CRM\\FSPix-VCL\\uFrmPix.pas","smell":"Uso de with","linha":123,"trecho":"With row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\FSPix-VCL\\uFrmPix.pas","smell":"Uso de with","linha":137,"trecho":"with row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\MainMenu\\FSD.MainMenu.Wizard.pas","smell":"M\u00E9todo muito longo","linha":36,"trecho":"     function GetWindowsDefaultLanguage: string;\r\n\r\n     procedure CreateMenu;\r\n\r\n     procedure OnClickNovoWizard(Sender: TObject);\r\n     procedure OnClickDocWiki(Sender: TObject);\r\n     //procedure OnClickLoja(Sender: TObject);\r\n     procedure OnClickMenuHistoryProjects(Sender: TObject);\r\n\r\n     {Vagas}\r\n     procedure OnClickVagasDelphi(Sender: TObject);\r\n\r\n     {Utilit\u00E1rios}\r\n     procedure OnClickSQLite(Sender: TObject);\r\n     procedure OnClickMySQL(Sender: TObject);\r\n     procedure OnClickForumDelphi(Sender: TObject);\r\n     procedure OnClickPostGres(Sender: TObject);\r\n     procedure OnClickPostman(Sender: TObject);\r\n     procedure OnClickChatGPT(Sender: TObject);\r\n     procedure OnClickAnalisarHints(Sender: TObject);\r\n     procedure OnClickIBExpert(Sender: TObject);\r\n     procedure OnClickSQLSErverManagerStudio(Sender: TObject);\r\n     procedure OnClickJSONtoDelphiClass(Sender: TObject);\r\n     procedure OnClickJSONFormater(Sender: TObject);\r\n     procedure OnClickIconFinder(Sender: TObject);\r\n     procedure OnClickIcons8(Sender: TObject);\r\n     procedure OnClickAcoplamentosUnits(Sender: TObject);\r\n     procedure OnClickimGetIt(Sender: TObject);\r\n\r\n\r\n     {Cursos}\r\n     procedure OnClickNutror(Sender: TOBject);\r\n     procedure OnClickNovoEAD(Sender: TObject);\r\n     procedure OnClickDevPoint(Sender: TObject);\r\n     procedure OnclickGitHubBozon(Sender: TObject);\r\n     procedure OnclickPostGresBozon(Sender: TObject);\r\n\r\n     {YouTube}\r\n     procedure OnClickEmbarcaderoBrasil(Sender: TObject);\r\n     procedure OnClickEmbarcadero(Sender: TObject);\r\n     procedure onClickYouTubeConectSolutions(Sender: Tobject);\r\n     procedure onClickVoiceEnabledApp(Sender: TObject);\r\n     procedure OnClickGitHubCurso(Sender: TObject);\r\n     procedure OnClickCursoApiREst(Sender: TObject);\r\n     procedure OnClickOpenToosAPI(Sender: TObject);\r\n     procedure OnClickBossSSH(Sender: TObject);\r\n     procedure OnClickDelphicon2023_day1(Sender: TObject);\r\n     procedure OnClickDelphicon2023_day2(Sender: TObject);\r\n     procedure OnClickDelphicon2023_day3(Sender: TObject);\r\n     procedure OnClickmqfb(Sender: TObject);\r\n     procedure OnClickChapmanWorld(Sender: TObject);\r\n\r\n     procedure OnClickOTA(Sender: TObject);\r\n     procedure OnclickDelphiBasics(Sender: TObject);\r\n\r\n     procedure OnClickHorseBasicAuth(Sender: TObject);\r\n     procedure OnClickHandleException(Sender: TObject);\r\n     procedure OnClickHorseJWT(Sender: TObject);\r\n\r\n     {Git Hubs}\r\n     procedure OnClickSynopseSynPDF(Sender: TObject);\r\n     procedure OnClickNewAudio(Sender: TObject);\r\n     procedure OnClickRedisClient(Sender: TObject);\r\n     procedure OnClickFireBase4Delphi(Sender: TObject);\r\n     procedure OnClickTurboPackVCL(Sender: TObject);\r\n     procedure OnClickFortesReportCE(Sender: TObject);\r\n     procedure OnClickDelphiJose(Sebder: TObject);\r\n     procedure OnClickXPAD(Sender: TObject);\r\n     procedure OnClickHorse(Sender: TObject);\r\n     procedure OnClickSimpleORM(Sender: TObject);\r\n     procedure OnClickHorseETag(Sender: TObject);\r\n     procedure OnClickDelphiMVCFrameWork(Sender: TObject);\r\n     procedure OnclickJEDIJCL(Sender: TObject);\r\n     procedure OnclickJEDIJVCL(Sender: TObject);\r\n     procedure OnclickJediInc(Sender: TObject);\r\n     procedure OnclickDelphiMessageBus(Sender: TObject);\r\n     procedure OnclickDelphiDocker(Sender: TObject);\r\n     procedure OnclickEmbarcaderoGitHub(Sender: TObject);\r\n     procedure OnclickChromiumGitHub(Sender: TObject);\r\n     procedure OnclickSkia4Delphi(Sender: TObject);\r\n     procedure OnclickUserControl(Sender: TObject);\r\n     procedure OnclickAeggys(Sender: TObject);\r\n\r\n     {Blogs}\r\n     procedure OnClickBlogConectSolutions(Sender: TObject);\r\n     procedure OnClickBlogAndreCelestino(Sender: TObject);\r\n     procedure OnClickBlogEmbarcadero(Sender: TObject);\r\n     procedure OnClickBlogMarcoCantu(Sender: TObject);\r\n     procedure OnClickBlogZettaOmmnis(Sender: TObject);\r\n     procedure OnClickBlogChapmanWorld(Sender: TObject);\r\n     procedure OnClickBlogRoadToDelphi(Sender: TObject);\r\n     procedure OnClickBlogLandgrafDev(Sender: TObject);\r\n     procedure OnClickBlogStephenBalls(Sender: TObject);\r\n     procedure OnClickBlogKonopka(Sender: TObject);\r\n     procedure OnClickBlogAndys(Sender: TObject);\r\n\r\n     {Ferramentas para Download}\r\n     procedure OnClickFerramentasIbExpert(Sender: TObject);\r\n     procedure OnClickFerramentasFirebird(Sender: TObject);\r\n     procedure OnClickFerramentasMySQL(Sender: TObject);\r\n     procedure OnClickFerramentasSQLiteExpert(Sender: TObject);\r\n     procedure OnClickFerramentasInnoSetup(Sender: TObject);\r\n     procedure OnClickFerramentasCNPack(Sender: TObject);\r\n     procedure OnClickFerramentasInnoScriptStudio(Sender: TObject);\r\n     procedure OnClickFerramentasInsomnia(Sender: TObject);\r\n     procedure OnClickFerramentasNavicat(Sender: TObject);\r\n     procedure OnClickFerramentasIdeFixPack(Sender: TObject);\r\n     procedure OnClickFerramentasToolsFree(Sender: TObject);\r\n     procedure OnClickFerramentasSiteGitIgnore(Sender: TObject);\r\n     procedure OnClickFerramentasSiteRegexLib(Sender: TObject);\r\n     procedure OnClickFerramentasGoogleMeeting(Sender: TObject);\r\n     procedure OnClickFaceBookVideo(Sender: TObject);\r\n     procedure OnClickLinkedinVideo(Sender: TObject);\r\n\r\n\r\n     {Grupos de Facebook}\r\n     procedure OnClickFacebookDelphiTips(Sender: TObject);\r\n     procedure OnClickFacebookLiteratudaDelphi(Sender: TObject);\r\n\r\n     {Livros}\r\n     procedure OnClickLivroDelphiAndroid(Sender: TObject);\r\n     procedure OnClickLivroObjectPascal(Sender: TObject);\r\n\r\n\r\n\r\n     function CreateSubMenu(AParent: TMenuItem;\r\n                            ACaption: String;\r\n                            AName: String;\r\n                            AOnClick: TNotifyEvent;\r\n                            AImageIndex: Integer = -1): TMenuItem;\r\n\r\n     procedure AddImageToImageList;\r\n     procedure OnClickYouTube(Sender: TObject);\r\n     procedure VoiceEnabledApp(Sender: TObject);\r\n\r\n\r\n\r\n  protected\r\n     function GetIDString: string;\r\n     function GetName: string;\r\n     function GetState: TWizardState;\r\n\r\n\r\n    { Launh the AddIn }\r\n    procedure Execute;\r\n\r\n  public\r\n\r\n  constructor create;\r\nend;\r\n"},{"arquivo":"c:\\fontes\\CRM\\MainMenu\\FSD.MainMenu.Wizard.pas","smell":"M\u00E9todo muito longo","linha":282,"trecho":"procedure TFSDMainMenuWizard.CreateMenu;\r\nvar\r\n  menu: TMainMenu;\r\n  menuName: string;\r\n  itemFormacao: TMenuItem;\r\n  itemUtilitarios: TMenuItem;\r\n  itemCursos: TMenuItem;\r\n  itemGitHubs: TMenuItem;\r\n  itemYoutube: TMenuItem;\r\n  itemAPI: TMenuItem;\r\n  itemBlogs: TMenuItem;\r\n  itemGruposFaceBook: TMenuItem;\r\n  itemFerramentas: TMenuItem;\r\n  itemLivros: TMenuItem;\r\n  itemLoja: TMenuItem;\r\n  itemVagas: TMenuItem;\r\n\r\n  Lingua: string;\r\nbegin\r\n  menu := (BorlandIDEServices as INTAServices).MainMenu;\r\n  menuName := 'Informacao';\r\n\r\n  if menu.FindComponent(menuName) <> nil then\r\n    menu.FindComponent(menuName).Free;\r\n\r\n  itemFormacao := TMenuItem.Create(menu);\r\n  itemFormacao.Name := menuName;\r\n  itemFormacao.Caption := 'Estagi\u00E1rio Eletr\u00F4nico';\r\n\r\n  menu.Items.Add(itemFormacao);\r\n\r\n // CreateSubMenu(itemFormacao, 'Novo Wirzard', 'imNovoWizard', OnClickNovoWizard);\r\n  CreateSubMenu(itemFormacao, 'Hist\u00F3rico Projetos', 'imHistoricoProjetos', OnclickMenuHistoryProjects);\r\n  CreateSubMenu(itemFormacao, 'Embarcadero Doc Wiki', 'imDocWiki', OnClickDocWiki);\r\n  CreateSubMenu(itemFormacao, 'Transmitir via Google Meeting', 'imFerramentasGoogleMeeeting', OnClickFerramentasGoogleMeeting);\r\n  CreateSubMenu(itemFormacao, 'Transmitir via FaceBook', 'imFaceBookVideo', OnClickFaceBookVideo);\r\n  CreateSubMenu(itemFormacao, 'Transmitir via Linkedin', 'imLinkedinVideo', OnClickLinkedinVideo);\r\n\r\n\r\n  //CreateSuBMenu(itemFormacao, 'Loja', 'imLoja', OnClickLoja);\r\n\r\n  {Livros} //Recurso de Linguagem ainda em testes.\r\n  FLingua:= GetWindowsDefaultLanguage;\r\n  if FLingua <> 'Portugu\u00EAs(Brasil)' then\r\n  begin\r\n    itemLivros := CreateSubMenu(itemFormacao, 'Livros de Delphi (Compras)', 'imLivros', nil);\r\n    CreateSubMenu(itemLivros, 'Delphi para Android e iOS: Desenvolvendo Aplicativos M\u00F3veis', 'imLivrosDelphiAndroid', OnClickLivroDelphiAndroid);\r\n    CreateSubMenu(itemLivros, 'Object Pascal Para Delphi', 'imLivrosObjectPascal', OnClickLivroObjectPascal);\r\n  end\r\n  else\r\n  begin\r\n    itemLivros := CreateSubMenu(itemFormacao, 'Books Delphi (Buy)', 'imLivros', nil);\r\n    CreateSubMenu(itemLivros, 'Delphi for Android and iOS: Desenvolvendo Aplicativos M\u00F3veis', 'imLivrosDelphiAndroid', OnClickLivroDelphiAndroid);\r\n    CreateSubMenu(itemLivros, 'Object Pascal for Delphi', 'imLivrosObjectPascal', OnClickLivroObjectPascal);\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewFormMain.Source.pas","smell":"Uso de with","linha":38,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewFormMain.SourceFile.pas","smell":"Uso de with","linha":50,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewFormMain.SourceFile.pas","smell":"Uso de with","linha":115,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewUnit.Behaviors.pas","smell":"Uso de with","linha":27,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewUnit.Behaviors.pas","smell":"M\u00E9todo muito longo","linha":10,"trecho":"procedure CreateUnitBehaviors(ProjectPath, NameSpace : string);\r\n\r\n\r\nimplementation\r\n\r\nprocedure CreateUnitBehaviors(ProjectPath, NameSpace : string);\r\nvar\r\n unitName: string;\r\n unitPath: string;\r\n unitFileName: string;\r\nbegin\r\n  unitPath := ProjectPath  + 'src\\Model\\Behaviors\\';\r\n  unitName := NameSpace + '.Model.Behaviors';\r\n  unitFileName := unitPath + unitName + '.pas';\r\n\r\n  ForceDirectories(unitPath);\r\n\r\n  with TStringList.Create do\r\n  try\r\n    Add('unit %0:s.Model.Behaviors;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t');\r\n    Add('                                                                                   ');\r\n    Add('interface                                                                          ');\r\n    Add('                                                                                   ');\r\n    Add('uses                                                                               ');\r\n    Add('  System.SysUtils,                                                                 ');\r\n    Add('  System.UITypes,                                                                  ');\r\n    Add('  Vcl.Dialogs,                                                                     ');\r\n    Add('  Vcl.Forms;                                                                       ');\r\n    Add('                                                                                   ');\r\n    Add('type T%0:sBehaviors = class                                                        ');\r\n    Add('                                                                                   ');\r\n    Add('  private                                                                          ');\r\n    Add('    procedure BehaviorException(Sender: TObject; E: Exception);                    ');\r\n    Add('                                                                                   ');\r\n    Add('  public                                                                           ');\r\n    Add('    constructor create;                                                            ');\r\n    Add('    destructor Destroy; override;                                                  ');\r\n    Add('end;                                                                               ');\r\n    Add('                                                                                   ');\r\n    Add('var                                                                                ');\r\n    Add('  ModelBehaviors : T%0:sBehaviors;                                                 ');\r\n    Add('                                                                                   ');\r\n    Add('implementation                                                                     ');\r\n    Add('                                                                                   ');\r\n    Add('{ T%0:sBehaviors }                                                                 ');\r\n    Add('                                                                                   ');\r\n    Add('procedure T%0:sBehaviors.BehaviorException(Sender: TObject; E: Exception);         ');\r\n    Add('begin                                                                              ');\r\n    Add('  MessageDlg(E.Message, mtWarning, [mbOK], 0);                                     ');\r\n    Add('end;                                                                               ');\r\n    Add('                                                                                   ');\r\n    Add('constructor T%0:sBehaviors.create;                                                 ');\r\n    Add('begin                                                                              ');\r\n    Add('  ReportMemoryLeaksOnShutdown := True;                                             ');\r\n    Add('  Application.OnException := BehaviorException;                                    ');\r\n    Add('end;                                                                               ');\r\n    Add('                                                                                   ');\r\n    Add('destructor T%0:sBehaviors.Destroy;                                                 ');\r\n    Add('begin                                                                              ');\r\n    Add('                                                                                   ');\r\n    Add('  inherited;                                                                       ');\r\n    Add('end;                                                                               ');\r\n    Add('                                                                                   ');\r\n    Add('initialization                                                                     ');\r\n    Add('  ModelBehaviors := T%0:sBehaviors.Create;                                         ');\r\n    Add('                                                                                   ');\r\n    Add('finalization                                                                       ');\r\n    Add('  ModelBehaviors.DisposeOf;                                                        ');\r\n    Add('                                                                                   ');\r\n    Add('end.                                                                               ');\r\n\r\n    Text := Format(Text, [Namespace, TGuid.NewGuid.ToString]);\r\n    SaveToFile(unitFileName);\r\n\r\n    GetActiveProject.AddFile(unitFileName, True);\r\n\r\n  finally\r\n    Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewUnit.Component.ConnectionFiredac.pas","smell":"Uso de with","linha":26,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewUnit.Component.ConnectionFiredac.pas","smell":"Uso de with","linha":154,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewUnit.Component.ConnectionFiredac.pas","smell":"M\u00E9todo muito longo","linha":10,"trecho":"procedure CreateUnitComponentConnectionFiredac(ProjectPath, Namespace: string);\r\n\r\nimplementation\r\n\r\nprocedure CreateUnitComponentConnectionFiredac(ProjectPath, Namespace: string);\r\nvar\r\n  unitName: string;\r\n  unitPath: string;\r\n  unitFileName: string;\r\nbegin\r\n  unitPath := ProjectPath + '\\src\\Model\\Components\\Connection\\';\r\n  unitName := NameSpace + '.Components.Connection.Firedac';\r\n  unitFileName := unitPath + unitName + '.pas';\r\n\r\n  ForceDirectories(unitPath);\r\n\r\n  with TStringList.Create do\r\n  try\r\n    Add('unit %0:s.Components.Connection.Firedac;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t');\r\n    Add('                                                                                                                                   ');\r\n    Add('interface                                                                                                                          ');\r\n    Add('                                                                                                                                   ');\r\n    Add('uses                                                                                                                               ');\r\n    Add('  %0:s.Components.Connection.Interfaces,                                                                                           ');\r\n    Add('  FireDAC.Stan.Intf,                                                                                                               ');\r\n    Add('  FireDAC.Stan.Option,                                                                                                             ');\r\n    Add('  FireDAC.Stan.Error,                                                                                                              ');\r\n    Add('  FireDAC.UI.Intf,                                                                                                                 ');\r\n    Add('  FireDAC.Phys.Intf,                                                                                                               ');\r\n    Add('  FireDAC.Stan.Def,                                                                                                                ');\r\n    Add('  FireDAC.Stan.Pool,                                                                                                               ');\r\n    Add('  FireDAC.Stan.Async,                                                                                                              ');\r\n    Add('  FireDAC.Phys,                                                                                                                    ');\r\n    Add('  FireDAC.Phys.SQLite,                                                                                                             ');\r\n    Add('  FireDAC.Phys.SQLiteDef,                                                                                                          ');\r\n    Add('  FireDAC.Stan.ExprFuncs,                                                                                                          ');\r\n    Add('  FireDAC.VCLUI.Wait,                                                                                                              ');\r\n    Add('  FireDAC.DApt,                                                                                                                    ');\r\n    Add('  Data.DB,                                                                                                                         ');\r\n    Add('  FireDAC.Comp.Client,                                                                                                             ');\r\n    Add('  FireDAC.Stan.Param,                                                                                                              ');\r\n    Add('  System.SysUtils,                                                                                                                 ');\r\n    Add('  System.Classes;                                                                                                                  ');\r\n    Add('                                                                                                                                   ');\r\n    Add('type T%0:sComponentsConnectionFiredac = class(TInterfacedObject, I%0:sComponentsConnection)                                       ');\r\n    Add('  private                                                                                                                          ');\r\n    Add('    FConnection : TFDConnection;                                                                                                   ');\r\n    Add('    FQuery : TFDQuery;                                                                                                             ');\r\n    Add('  public                                                                                                                           ');\r\n    Add('    constructor Create;                                                                                                            ');\r\n    Add('    destructor Destroy; override;                                                                                                  ');\r\n    Add('    class function New : I%0:sComponentsConnection;                                                                                ');\r\n    Add('    function Active ( aValue : Boolean ) : I%0:sComponentsConnection;                                                              ');\r\n    Add('    function AddParam ( aParam : String; aValue : Variant ) : I%0:sComponentsConnection; overload;                                 ');\r\n    Add('    function AddParam ( aParam : String; aValue : TPersistent ) : I%0:sComponentsConnection; overload;                             ');\r\n    Add('    function DataSet : TDataSet;                                                                                                   ');\r\n    Add('    function ExecSQL : I%0:sComponentsConnection;                                                                                  ');\r\n    Add('    function Open : I%0:sComponentsConnection;                                                                                     ');\r\n    Add('    function SQL ( aValue : String ) : I%0:sComponentsConnection;                                                                  ');\r\n    Add('    function SQLClear : I%0:sComponentsConnection;                                                                                 ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('implementation                                                                                                                     ');\r\n    Add('                                                                                                                                   ');\r\n    Add('{ T%0:sComponentsConnectionFiredac }                                                                                              ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.Active(aValue: Boolean): I%0:sComponentsConnection;                                     ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.Active := aValue;                                                                                                         ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.AddParam(aParam: String; aValue: Variant): I%0:sComponentsConnection;                   ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.ParamByName(aParam).Value := aValue;                                                                                      ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.AddParam(aParam: String; aValue: TPersistent): I%0:sComponentsConnection;               ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.ParamByName(aParam).Assign(aValue);                                                                                       ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('constructor T%0:sComponentsConnectionFiredac.Create;                                                                              ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  FConnection := TFDConnection.Create(nil);                                                                                        ');\r\n    Add('  FQuery := TFDQuery.Create(nil);                                                                                                  ');\r\n    Add('  FQuery.Connection := FConnection;                                                                                                ');\r\n    Add('  FConnection.Params.DriverID := ''SQLite'';                                                                                         ');\r\n    Add('  FConnection.Params.Database := ExtractFilePath(GetModuleName(HInstance)) + ''%0:s.db3'';                                           ');\r\n    Add('  FConnection.Params.Add(''LockingMode=Normal'');                                                                                    ');\r\n    Add('  FConnection.Connected;                                                                                                           ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.DataSet: TDataSet;                                                                      ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := FQuery;                                                                                                                ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('destructor T%0:sComponentsConnectionFiredac.Destroy;                                                                              ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  FQuery.DisposeOf;                                                                                                                ');\r\n    Add('  FConnection.DisposeOf;                                                                                                           ');\r\n    Add('  inherited;                                                                                                                       ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.ExecSQL: I%0:sComponentsConnection;                                                     ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.ExecSQL;                                                                                                                  ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('class function T%0:sComponentsConnectionFiredac.New: I%0:sComponentsConnection;                                                   ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self.Create;                                                                                                           ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.Open: I%0:sComponentsConnection;                                                        ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.Open;                                                                                                                     ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.SQL(aValue: String): I%0:sComponentsConnection;                                         ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.SQL.Add(aValue);                                                                                                          ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('function T%0:sComponentsConnectionFiredac.SQLClear: I%0:sComponentsConnection;                                                    ');\r\n    Add('begin                                                                                                                              ');\r\n    Add('  Result := Self;                                                                                                                  ');\r\n    Add('  FQuery.SQL.Clear;                                                                                                                ');\r\n    Add('end;                                                                                                                               ');\r\n    Add('                                                                                                                                   ');\r\n    Add('end.                                                                                                                               ');\r\n\r\n    Text := Format(Text, [Namespace]);\r\n    SaveToFile(unitFileName);\r\n\r\n    GetActiveProject.AddFile(unitFileName, True);\r\n\r\n    // Criar Arquivo de Banco SQLite\r\n    with TStringList.Create do\r\n    try\r\n      SaveToFile(ProjectPath + Namespace + '.db3');\r\n    finally\r\n      Free;\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewUnit.Component.ConnectionInterfaces.pas","smell":"Vari\u00E1vel global","linha":16,"trecho":"var"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewUnit.Component.ConnectionInterfaces.pas","smell":"Uso de with","linha":27,"trecho":"with TStringList.Create do"},{"arquivo":"c:\\fontes\\CRM\\NewProject\\FSD.NewProject.NewUnit.Component.ConnectionInterfaces.pas","smell":"M\u00E9todo muito longo","linha":10,"trecho":"procedure CreateUnitComponentConnectionInterfaces(ProjectPath, NameSpace: string);\r\n\r\nimplementation\r\n\r\n\r\nprocedure CreateUnitComponentConnectionInterfaces(ProjectPath, NameSpace: string);\r\nvar\r\n  unitName: string;\r\n  unitPath: string;\r\n  unitFileName: string;\r\nbegin\r\n   unitPath := ProjectPath + '\\src\\Model\\Components\\Connection\\';\r\n   unitName := NameSpace + '.Components.Connection.Interfaces';\r\n   unitFileName := unitPath + unitName + '.pas';\r\n\r\n   ForceDirectories(unitPath);\r\n\r\n   with TStringList.Create do\r\n  try\r\n    Add('unit %0:s.Components.Connection.Interfaces;');\r\n    Add('');\r\n    Add('interface');\r\n    Add('');\r\n    Add('uses');\r\n    Add('  Data.DB, ');\r\n    Add('  System.SysUtils,');\r\n    Add('  System.Classes;');\r\n    Add('');\r\n    Add('type');\r\n    Add('  I%0:sComponentsConnection = interface');\r\n    Add('    [''%1:s'']');\r\n    Add('    function Active ( aValue : Boolean ) : IEstoqueComponentsConnection;');\r\n    Add('    function AddParam ( aParam : String; aValue : Variant ) : IEstoqueComponentsConnection; overload;');\r\n    Add('    function AddParam ( aParam : String; aValue : TPersistent ) : IEstoqueComponentsConnection; overload;');\r\n    Add('    function DataSet : TDataSet;');\r\n    Add('    function ExecSQL : IEstoqueComponentsConnection;');\r\n    Add('    function Open : IEstoqueComponentsConnection;');\r\n    Add('    function SQL ( aValue : String ) : IEstoqueComponentsConnection;');\r\n    Add('    function SQLClear : IEstoqueComponentsConnection;');\r\n    Add('  end;');\r\n    Add('');\r\n    Add('implementation');\r\n    Add('');\r\n    Add('end.');\r\n\r\n    Text := Format(Text, [Namespace, TGuid.NewGuid.ToString]);\r\n    SaveToFile(unitFileName);\r\n\r\n    GetActiveProject.AddFile(unitFileName, True);\r\n\r\n  finally\r\n    Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\CRM\\UnitCondominio.pas","smell":"Uso de with","linha":164,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondominio.pas","smell":"Uso de with","linha":166,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondominio.pas","smell":"Uso de with","linha":176,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondominio.pas","smell":"Uso de with","linha":179,"trecho":"With Popup('PopupCondominioCad', 'Cadastro de Condominios').Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondominio.pas","smell":"Uso de with","linha":182,"trecho":"With Popup('PopupPix', 'Pagamento Pix').Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondominioCad.pas","smell":"Uso de with","linha":100,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondominioCad.pas","smell":"Uso de with","linha":102,"trecho":"With row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondominioCad.pas","smell":"Uso de with","linha":115,"trecho":"with row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondonimos.pas","smell":"Uso de with","linha":136,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondonimos.pas","smell":"Uso de with","linha":138,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondonimos.pas","smell":"Uso de with","linha":147,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondonimos.pas","smell":"Uso de with","linha":150,"trecho":"With Popup('PopupCondominioCad', 'Cadastro de Condominios').Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondonimosCad.pas","smell":"Uso de with","linha":100,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondonimosCad.pas","smell":"Uso de with","linha":102,"trecho":"With row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitCondonimosCad.pas","smell":"Uso de with","linha":115,"trecho":"with row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM\\UnitPrincipal.pas","smell":"Uso de with","linha":121,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CRM\\UnitPrincipal.pas","smell":"Uso de with","linha":163,"trecho":"with PrismControl.AsMainMenu do  //or in SideMenu use asSideMenu"},{"arquivo":"c:\\fontes\\CRM\\Unit_D2Bridge_Server_Console.pas","smell":"M\u00E9todo muito longo","linha":220,"trecho":"class procedure TD2BridgeServerConsole.Run;\r\nbegin\r\n D2BridgeServerController:= TCRMWebAppGlobal.Create(TApplication.Create(nil));\r\n vServerPort:= D2BridgeServerController.Prism.INIConfig.ServerPort(8888);\r\n vServerName:= D2BridgeServerController.Prism.INIConfig.ServerName('D2Bridge Server');\r\n\r\n D2BridgeServerController.APPName:= 'FZ Admin';\r\n //D2BridgeServerController.APPDescription:= 'My D2Bridge Web APP';\r\n\r\n //Security\r\n {\r\n D2BridgeServerController.Prism.Options.Security.Enabled:= false; //True Default\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSpamhausList:= false; //Disable Default Blocked Spamhaus list\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('192.168.10.31'); //Block just IP\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('200.200.200.0/24'); //Block CDIR\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSelfDelist:= false; //Disable Delist\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4WhiteList.Add('192.168.0.1'); //Add IP or CDIR to WhiteList\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitNewConnPerIPMin:= 30; //Limite Connections from IP *minute\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitActiveSessionsPerIP:= 50; //Limite Sessions from IP\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.EnableCrawlerUserAgents:= false; //Disable Default Blocked Crawler User Agents\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Add('NewUserAgent'); //Block User Agent\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Delete('MyUserAgent'); //Allow User Agent\r\n }\r\n\r\n D2BridgeServerController.PrimaryFormClass:= TFrmPrincipal;\r\n\r\n //seconds to Send Session to TimeOut and Destroy after Disconnected\r\n //D2BridgeServerController.Prism.Options.SessionTimeOut:= 300;\r\n\r\n //secounds to set Session in Idle\r\n //D2BridgeServerController.Prism.Options.SessionIdleTimeOut:= 0;\r\n\r\n\r\n D2BridgeServerController.Prism.Options.IncludeJQuery:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.DataSetLog:= true;\r\n\r\n D2BridgeServerController.Prism.Options.CoInitialize:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.VCLStyles:= false;\r\n\r\n //D2BridgeServerController.Prism.Options.ShowError500Page:= false;\r\n\r\n //Uncomment to Dual Mode force http just in Debug Mode\r\n //if IsDebuggerPresent then\r\n // D2BridgeServerController.Prism.Options.SSL:= false\r\n //else\r\n //D2BridgeServerController.Prism.Options.SSL:= true;\r\n\r\n D2BridgeServerController.Languages:= [TD2BridgeLang.Portuguese];\r\n\r\n if D2BridgeServerController.Prism.Options.SSL then\r\n begin\r\n  //Cert File\r\n  D2BridgeServerController.Prism.SSLOptions.CertFile:= '';\r\n  //Cert Key Domain File\r\n  D2BridgeServerController.Prism.SSLOptions.KeyFile:= '';\r\n  //Cert Intermediate (case Let\uFFFDs Encrypt)\r\n  D2BridgeServerController.Prism.SSLOptions.RootCertFile:= '';\r\n end;\r\n"},{"arquivo":"c:\\fontes\\CRM2\\crm-master\\UnitCondominio.pas","smell":"Uso de with","linha":119,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CRM2\\crm-master\\UnitCondominio.pas","smell":"Uso de with","linha":121,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM2\\crm-master\\UnitCondominio.pas","smell":"Uso de with","linha":130,"trecho":"With Row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM2\\crm-master\\UnitCondominio.pas","smell":"Uso de with","linha":133,"trecho":"With Popup('PopupCondominioCad', 'Cadastro de Condominios').Items.Add do"},{"arquivo":"c:\\fontes\\CRM2\\crm-master\\UnitCondominioCad.pas","smell":"Uso de with","linha":81,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CRM2\\crm-master\\UnitCondominioCad.pas","smell":"Uso de with","linha":83,"trecho":"With row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM2\\crm-master\\UnitCondominioCad.pas","smell":"Uso de with","linha":92,"trecho":"with row.Items.Add do"},{"arquivo":"c:\\fontes\\CRM2\\crm-master\\UnitPrincipal.pas","smell":"Uso de with","linha":96,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\CRM2\\crm-master\\UnitPrincipal.pas","smell":"Uso de with","linha":120,"trecho":"with PrismControl.AsMainMenu do  //or in SideMenu use asSideMenu"},{"arquivo":"c:\\fontes\\CRM2\\crm-master\\Unit_D2Bridge_Server_Console.pas","smell":"M\u00E9todo muito longo","linha":220,"trecho":"class procedure TD2BridgeServerConsole.Run;\r\nbegin\r\n D2BridgeServerController:= TCRMWebAppGlobal.Create(TApplication.Create(nil));\r\n vServerPort:= D2BridgeServerController.Prism.INIConfig.ServerPort(8888);\r\n vServerName:= D2BridgeServerController.Prism.INIConfig.ServerName('D2Bridge Server');\r\n\r\n D2BridgeServerController.APPName:= 'CRM';\r\n //D2BridgeServerController.APPDescription:= 'My D2Bridge Web APP';\r\n\r\n //Security\r\n {\r\n D2BridgeServerController.Prism.Options.Security.Enabled:= false; //True Default\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSpamhausList:= false; //Disable Default Blocked Spamhaus list\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('192.168.10.31'); //Block just IP\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('200.200.200.0/24'); //Block CDIR\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSelfDelist:= false; //Disable Delist\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4WhiteList.Add('192.168.0.1'); //Add IP or CDIR to WhiteList\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitNewConnPerIPMin:= 30; //Limite Connections from IP *minute\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitActiveSessionsPerIP:= 50; //Limite Sessions from IP\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.EnableCrawlerUserAgents:= false; //Disable Default Blocked Crawler User Agents\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Add('NewUserAgent'); //Block User Agent\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Delete('MyUserAgent'); //Allow User Agent\r\n }\r\n\r\n D2BridgeServerController.PrimaryFormClass:= TFrmPrincipal;\r\n\r\n //seconds to Send Session to TimeOut and Destroy after Disconnected\r\n //D2BridgeServerController.Prism.Options.SessionTimeOut:= 300;\r\n\r\n //secounds to set Session in Idle\r\n //D2BridgeServerController.Prism.Options.SessionIdleTimeOut:= 0;\r\n\r\n\r\n D2BridgeServerController.Prism.Options.IncludeJQuery:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.DataSetLog:= true;\r\n\r\n D2BridgeServerController.Prism.Options.CoInitialize:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.VCLStyles:= false;\r\n\r\n //D2BridgeServerController.Prism.Options.ShowError500Page:= false;\r\n\r\n //Uncomment to Dual Mode force http just in Debug Mode\r\n //if IsDebuggerPresent then\r\n // D2BridgeServerController.Prism.Options.SSL:= false\r\n //else\r\n //D2BridgeServerController.Prism.Options.SSL:= true;\r\n\r\n D2BridgeServerController.Languages:= [TD2BridgeLang.Portuguese];\r\n\r\n if D2BridgeServerController.Prism.Options.SSL then\r\n begin\r\n  //Cert File\r\n  D2BridgeServerController.Prism.SSLOptions.CertFile:= '';\r\n  //Cert Key Domain File\r\n  D2BridgeServerController.Prism.SSLOptions.KeyFile:= '';\r\n  //Cert Intermediate (case Let\uFFFDs Encrypt)\r\n  D2BridgeServerController.Prism.SSLOptions.RootCertFile:= '';\r\n end;\r\n"},{"arquivo":"c:\\fontes\\Curso Horse\\modules\\horse\\src\\Horse.Core.pas","smell":"M\u00E9todo muito longo","linha":49,"trecho":"    class function TrimPath(const APath: string): string;\r\n    class function RegisterRoute(const AHTTPType: TMethodType; const APath: string; const ACallback: THorseCallback): THorseCore;\r\n    class var FDefaultHorse: THorseCore;\r\n\r\n    function InternalRoute(const APath: string): IHorseCoreRoute<THorseCore>;\r\n    function InternalGroup: IHorseCoreGroup<THorseCore>;\r\n    function InternalGetRoutes: THorseRouterTree;\r\n    procedure InternalSetRoutes(const AValue: THorseRouterTree);\r\n    class function GetRoutes: THorseRouterTree; static;\r\n    class procedure SetRoutes(const AValue: THorseRouterTree); static;\r\n    class function MakeHorseModule: THorseModule;\r\n\r\n    class function GetCallback(const ACallbackRequest: THorseCallbackRequestResponse): THorseCallback; overload;\r\n    class function GetCallback(const ACallbackRequest: THorseCallbackRequest): THorseCallback; overload;\r\n{$IFNDEF FPC}\r\n    class function GetCallback(const ACallbackResponse: THorseCallbackResponse): THorseCallback; overload;\r\n{$ENDIF}\r\n    class function GetCallbacks: TArray<THorseCallback>;\r\n    class function RegisterCallbacksRoute(const AMethod: TMethodType; const APath: string): THorseCore;\r\n  public\r\n    constructor Create; virtual;\r\n    class function ToModule: THorseModule;\r\n    class destructor UnInitialize; {$IFNDEF FPC}virtual; {$ENDIF}\r\n    class function AddCallback(const ACallback: THorseCallback): THorseCore;\r\n    class function AddCallbacks(const ACallbacks: TArray<THorseCallback>): THorseCore;\r\n\r\n    class function Group: IHorseCoreGroup<THorseCore>;\r\n    class function Route(const APath: string): IHorseCoreRoute<THorseCore>;\r\n\r\n    class function Use(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Use(const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Use(const APath: string; const ACallbacks: array of THorseCallback): THorseCore; overload;\r\n    class function Use(const ACallbacks: array of THorseCallback): THorseCore; overload;\r\n\r\n    class function All(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function All(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function All(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function All(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n    class function Get(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Get(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Get(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Get(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n    class function Put(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Put(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Put(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Put(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n{$IF (DEFINED(FPC) or (CompilerVersion > 27.0))}\r\n    class function Patch(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Patch(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Patch(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Patch(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n{$IFEND}\r\n    class function Head(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Head(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Head(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Head(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n    class function Post(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Post(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Post(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Post(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n{$IF (defined(fpc) or (CompilerVersion > 27.0))}\r\n    class function Delete(const APath: string; const ACallback: THorseCallback): THorseCore; overload;\r\n    class function Delete(const APath: string; const ACallback: THorseCallbackRequestResponse): THorseCore; overload;\r\n    class function Delete(const APath: string; const ACallback: THorseCallbackRequest): THorseCore; overload;\r\n{$IFNDEF FPC}\r\n    class function Delete(const APath: string; const ACallback: THorseCallbackResponse): THorseCore; overload;\r\n{$IFEND}\r\n{$IFEND}\r\n    class property Routes: THorseRouterTree read GetRoutes write SetRoutes;\r\n    class function GetInstance: THorseCore;\r\n    class function Version: string;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Curso Horse\\modules\\horse\\src\\Horse.Mime.pas","smell":"M\u00E9todo muito longo","linha":153,"trecho":"procedure THorseMimeTypesExt.InitializeFileType;\r\nbegin\r\n  {$REGION 'MIME CONST'}\r\n  FFileType.AddOrSetValue('ez', 'application/andrew-inset');\r\n  FFileType.AddOrSetValue('aw', 'application/applixware');\r\n  FFileType.AddOrSetValue('atom', 'application/atom+xml');\r\n  FFileType.AddOrSetValue('atomcat', 'application/atomcat+xml');\r\n  FFileType.AddOrSetValue('atomsvc', 'application/atomsvc+xml');\r\n  FFileType.AddOrSetValue('bson', 'application/bson');\r\n  FFileType.AddOrSetValue('ccxml', 'application/ccxml+xml');\r\n  FFileType.AddOrSetValue('cdmia', 'application/cdmi-capability');\r\n  FFileType.AddOrSetValue('cdmic', 'application/cdmi-container');\r\n  FFileType.AddOrSetValue('cdmid', 'application/cdmi-domain');\r\n  FFileType.AddOrSetValue('cdmio', 'application/cdmi-object');\r\n  FFileType.AddOrSetValue('cdmiq', 'application/cdmi-queue');\r\n  FFileType.AddOrSetValue('cu', 'application/cu-seeme');\r\n  FFileType.AddOrSetValue('davmount', 'application/davmount+xml');\r\n  FFileType.AddOrSetValue('dbk', 'application/docbook+xml');\r\n  FFileType.AddOrSetValue('dssc', 'application/dssc+der');\r\n  FFileType.AddOrSetValue('xdssc', 'application/dssc+xml');\r\n  FFileType.AddOrSetValue('ecma', 'application/ecmascript');\r\n  FFileType.AddOrSetValue('emma', 'application/emma+xml');\r\n  FFileType.AddOrSetValue('epub', 'application/epub+zip');\r\n  FFileType.AddOrSetValue('exi', 'application/exi');\r\n  FFileType.AddOrSetValue('pfr', 'application/font-tdpfr');\r\n  FFileType.AddOrSetValue('gml', 'application/gml+xml');\r\n  FFileType.AddOrSetValue('gpx', 'application/gpx+xml');\r\n  FFileType.AddOrSetValue('gxf', 'application/gxf');\r\n  FFileType.AddOrSetValue('stk', 'application/hyperstudio');\r\n  FFileType.AddOrSetValue('ink', 'application/inkml+xml');\r\n  FFileType.AddOrSetValue('inkml', 'application/inkml+xml');\r\n  FFileType.AddOrSetValue('ipfix', 'application/ipfix');\r\n  FFileType.AddOrSetValue('jar', 'application/java-archive');\r\n  FFileType.AddOrSetValue('ser', 'application/java-serialized-object');\r\n  FFileType.AddOrSetValue('class', 'application/java-vm');\r\n  FFileType.AddOrSetValue('js', 'application/javascript');\r\n  FFileType.AddOrSetValue('json', 'application/json');\r\n  FFileType.AddOrSetValue('map', 'application/json');\r\n  FFileType.AddOrSetValue('jsonml', 'application/jsonml+json');\r\n  FFileType.AddOrSetValue('lostxml', 'application/lost+xml');\r\n  FFileType.AddOrSetValue('hqx', 'application/mac-binhex40');\r\n  FFileType.AddOrSetValue('cpt', 'application/mac-compactpro');\r\n  FFileType.AddOrSetValue('mads', 'application/mads+xml');\r\n  FFileType.AddOrSetValue('mrc', 'application/marc');\r\n  FFileType.AddOrSetValue('mrcx', 'application/marcxml+xml');\r\n  FFileType.AddOrSetValue('ma', 'application/mathematica');\r\n  FFileType.AddOrSetValue('nb', 'application/mathematica');\r\n  FFileType.AddOrSetValue('mb', 'application/mathematica');\r\n  FFileType.AddOrSetValue('mathml', 'application/mathml+xml');\r\n  FFileType.AddOrSetValue('mbox', 'application/mbox');\r\n  FFileType.AddOrSetValue('mscml', 'application/mediaservercontrol+xml');\r\n  FFileType.AddOrSetValue('metalink', 'application/metalink+xml');\r\n  FFileType.AddOrSetValue('meta4', 'application/metalink4+xml');\r\n  FFileType.AddOrSetValue('mets', 'application/mets+xml');\r\n  FFileType.AddOrSetValue('mods', 'application/mods+xml');\r\n  FFileType.AddOrSetValue('m21', 'application/mp21');\r\n  FFileType.AddOrSetValue('mp21', 'application/mp21');\r\n  FFileType.AddOrSetValue('mp4s', 'application/mp4');\r\n  FFileType.AddOrSetValue('doc', 'application/msword');\r\n  FFileType.AddOrSetValue('dot', 'application/msword');\r\n  FFileType.AddOrSetValue('mxf', 'application/mxf');\r\n  FFileType.AddOrSetValue('bin', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('bpk', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('class', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('deploy', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('dist', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('distz', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('dmg', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('dms', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('dump', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('elc', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('iso', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('lha', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('lrf', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('lzh', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('mar', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('pkg', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('so', 'application/octet-stream');\r\n  FFileType.AddOrSetValue('oda', 'application/oda');\r\n  FFileType.AddOrSetValue('opf', 'application/oebps-package+xml');\r\n  FFileType.AddOrSetValue('ogx', 'application/ogg');\r\n  FFileType.AddOrSetValue('omdoc', 'application/omdoc+xml');\r\n  FFileType.AddOrSetValue('onetoc', 'application/onenote');\r\n  FFileType.AddOrSetValue('onetoc2', 'application/onenote');\r\n  FFileType.AddOrSetValue('onetmp', 'application/onenote');\r\n  FFileType.AddOrSetValue('onepkg', 'application/onenote');\r\n  FFileType.AddOrSetValue('oxps', 'application/oxps');\r\n  FFileType.AddOrSetValue('xer', 'application/patch-ops-error+xml');\r\n  FFileType.AddOrSetValue('pdf', 'application/pdf');\r\n  FFileType.AddOrSetValue('pgp', 'application/pgp-encrypted');\r\n  FFileType.AddOrSetValue('asc', 'application/pgp-signature');\r\n  FFileType.AddOrSetValue('sig', 'application/pgp-signature');\r\n  FFileType.AddOrSetValue('prf', 'application/pics-rules');\r\n  FFileType.AddOrSetValue('p10', 'application/pkcs10');\r\n  FFileType.AddOrSetValue('p7m', 'application/pkcs7-mime');\r\n  FFileType.AddOrSetValue('p7c', 'application/pkcs7-mime');\r\n  FFileType.AddOrSetValue('p7s', 'application/pkcs7-signature');\r\n  FFileType.AddOrSetValue('p8', 'application/pkcs8');\r\n  FFileType.AddOrSetValue('ac', 'application/pkix-attr-cert');\r\n  FFileType.AddOrSetValue('cer', 'application/pkix-cert');\r\n  FFileType.AddOrSetValue('crl', 'application/pkix-crl');\r\n  FFileType.AddOrSetValue('pkipath', 'application/pkix-pkipath');\r\n  FFileType.AddOrSetValue('pki', 'application/pkixcmp');\r\n  FFileType.AddOrSetValue('pls', 'application/pls+xml');\r\n  FFileType.AddOrSetValue('ai', 'application/postscript');\r\n  FFileType.AddOrSetValue('eps', 'application/postscript');\r\n  FFileType.AddOrSetValue('ps', 'application/postscript');\r\n  FFileType.AddOrSetValue('cww', 'application/prs.cww');\r\n  FFileType.AddOrSetValue('pskcxml', 'application/pskc+xml');\r\n  FFileType.AddOrSetValue('rdf', 'application/rdf+xml');\r\n  FFileType.AddOrSetValue('rif', 'application/reginfo+xml');\r\n  FFileType.AddOrSetValue('rnc', 'application/relax-ng-compact-syntax');\r\n  FFileType.AddOrSetValue('rl', 'application/resource-lists+xml');\r\n  FFileType.AddOrSetValue('rld', 'application/resource-lists-diff+xml');\r\n  FFileType.AddOrSetValue('rs', 'application/rls-services+xml');\r\n  FFileType.AddOrSetValue('gbr', 'application/rpki-ghostbusters');\r\n  FFileType.AddOrSetValue('mft', 'application/rpki-manifest');\r\n  FFileType.AddOrSetValue('roa', 'application/rpki-roa');\r\n  FFileType.AddOrSetValue('rsd', 'application/rsd+xml');\r\n  FFileType.AddOrSetValue('rss', 'application/rss+xml');\r\n  FFileType.AddOrSetValue('rtf', 'application/rtf');\r\n  FFileType.AddOrSetValue('sbml', 'application/sbml+xml');\r\n  FFileType.AddOrSetValue('scq', 'application/scvp-cv-request');\r\n  FFileType.AddOrSetValue('scs', 'application/scvp-cv-response');\r\n  FFileType.AddOrSetValue('spq', 'application/scvp-vp-request');\r\n  FFileType.AddOrSetValue('spp', 'application/scvp-vp-response');\r\n  FFileType.AddOrSetValue('sdp', 'application/sdp');\r\n  FFileType.AddOrSetValue('setpay', 'application/set-payment-initiation');\r\n  FFileType.AddOrSetValue('setreg', 'application/set-registration-initiation');\r\n  FFileType.AddOrSetValue('shf', 'application/shf+xml');\r\n  FFileType.AddOrSetValue('smi', 'application/smil+xml');\r\n  FFileType.AddOrSetValue('smil', 'application/smil+xml');\r\n  FFileType.AddOrSetValue('soap', 'application/soap+xml');\r\n  FFileType.AddOrSetValue('rq', 'application/sparql-query');\r\n  FFileType.AddOrSetValue('srx', 'application/sparql-results+xml');\r\n  FFileType.AddOrSetValue('gram', 'application/srgs');\r\n  FFileType.AddOrSetValue('grxml', 'application/srgs+xml');\r\n  FFileType.AddOrSetValue('sru', 'application/sru+xml');\r\n  FFileType.AddOrSetValue('ssdl', 'application/ssdl+xml');\r\n  FFileType.AddOrSetValue('ssml', 'application/ssml+xml');\r\n  FFileType.AddOrSetValue('tei', 'application/tei+xml');\r\n  FFileType.AddOrSetValue('teicorpus', 'application/tei+xml');\r\n  FFileType.AddOrSetValue('tfi', 'application/thraud+xml');\r\n  FFileType.AddOrSetValue('tsd', 'application/timestamped-data');\r\n  FFileType.AddOrSetValue('plb', 'application/vnd.3gpp.pic-bw-large');\r\n  FFileType.AddOrSetValue('psb', 'application/vnd.3gpp.pic-bw-small');\r\n  FFileType.AddOrSetValue('pvb', 'application/vnd.3gpp.pic-bw-var');\r\n  FFileType.AddOrSetValue('tcap', 'application/vnd.3gpp2.tcap');\r\n  FFileType.AddOrSetValue('pwn', 'application/vnd.3m.post-it-notes');\r\n  FFileType.AddOrSetValue('aso', 'application/vnd.accpac.simply.aso');\r\n  FFileType.AddOrSetValue('imp', 'application/vnd.accpac.simply.imp');\r\n  FFileType.AddOrSetValue('acu', 'application/vnd.acucobol');\r\n  FFileType.AddOrSetValue('atc', 'application/vnd.acucorp');\r\n  FFileType.AddOrSetValue('acutc', 'application/vnd.acucorp');\r\n  FFileType.AddOrSetValue('air', 'application/vnd.adobe.air-application-installer-package+zip');\r\n  FFileType.AddOrSetValue('fcdt', 'application/vnd.adobe.formscentral.fcdt');\r\n  FFileType.AddOrSetValue('fxp', 'application/vnd.adobe.fxp');\r\n  FFileType.AddOrSetValue('fxpl', 'application/vnd.adobe.fxp');\r\n  FFileType.AddOrSetValue('xdp', 'application/vnd.adobe.xdp+xml');\r\n  FFileType.AddOrSetValue('xfdf', 'application/vnd.adobe.xfdf');\r\n  FFileType.AddOrSetValue('ahead', 'application/vnd.ahead.space');\r\n  FFileType.AddOrSetValue('azf', 'application/vnd.airzip.filesecure.azf');\r\n  FFileType.AddOrSetValue('azs', 'application/vnd.airzip.filesecure.azs');\r\n  FFileType.AddOrSetValue('azw', 'application/vnd.amazon.ebook');\r\n  FFileType.AddOrSetValue('acc', 'application/vnd.americandynamics.acc');\r\n  FFileType.AddOrSetValue('ami', 'application/vnd.amiga.ami');\r\n  FFileType.AddOrSetValue('apk', 'application/vnd.android.package-archive');\r\n  FFileType.AddOrSetValue('cii', 'application/vnd.anser-web-certificate-issue-initiation');\r\n  FFileType.AddOrSetValue('fti', 'application/vnd.anser-web-funds-transfer-initiation');\r\n  FFileType.AddOrSetValue('atx', 'application/vnd.antix.game-component');\r\n  FFileType.AddOrSetValue('mpkg', 'application/vnd.apple.installer+xml');\r\n  FFileType.AddOrSetValue('m3u8', 'application/vnd.apple.mpegurl');\r\n  FFileType.AddOrSetValue('swi', 'application/vnd.aristanetworks.swi');\r\n  FFileType.AddOrSetValue('iota', 'application/vnd.astraea-software.iota');\r\n  FFileType.AddOrSetValue('aep', 'application/vnd.audiograph');\r\n  FFileType.AddOrSetValue('mpm', 'application/vnd.blueice.multipass');\r\n  FFileType.AddOrSetValue('bmi', 'application/vnd.bmi');\r\n  FFileType.AddOrSetValue('rep', 'application/vnd.businessobjects');\r\n  FFileType.AddOrSetValue('cdxml', 'application/vnd.chemdraw+xml');\r\n  FFileType.AddOrSetValue('mmd', 'application/vnd.chipnuts.karaoke-mmd');\r\n  FFileType.AddOrSetValue('cdy', 'application/vnd.cinderella');\r\n  FFileType.AddOrSetValue('cla', 'application/vnd.claymore');\r\n  FFileType.AddOrSetValue('rp9', 'application/vnd.cloanto.rp9');\r\n  FFileType.AddOrSetValue('c4g', 'application/vnd.clonk.c4group');\r\n  FFileType.AddOrSetValue('c4d', 'application/vnd.clonk.c4group');\r\n  FFileType.AddOrSetValue('c4f', 'application/vnd.clonk.c4group');\r\n  FFileType.AddOrSetValue('c4p', 'application/vnd.clonk.c4group');\r\n  FFileType.AddOrSetValue('c4u', 'application/vnd.clonk.c4group');\r\n  FFileType.AddOrSetValue('c11amc', 'application/vnd.cluetrust.cartomobile-config');\r\n  FFileType.AddOrSetValue('c11amz', 'application/vnd.cluetrust.cartomobile-config-pkg');\r\n  FFileType.AddOrSetValue('csp', 'application/vnd.commonspace');\r\n  FFileType.AddOrSetValue('cdbcmsg', 'application/vnd.contact.cmsg');\r\n  FFileType.AddOrSetValue('cmc', 'application/vnd.cosmocaller');\r\n  FFileType.AddOrSetValue('clkx', 'application/vnd.crick.clicker');\r\n  FFileType.AddOrSetValue('clkk', 'application/vnd.crick.clicker.keyboard');\r\n  FFileType.AddOrSetValue('clkp', 'application/vnd.crick.clicker.palette');\r\n  FFileType.AddOrSetValue('clkt', 'application/vnd.crick.clicker.template');\r\n  FFileType.AddOrSetValue('clkw', 'application/vnd.crick.clicker.wordbank');\r\n  FFileType.AddOrSetValue('wbs', 'application/vnd.criticaltools.wbs+xml');\r\n  FFileType.AddOrSetValue('pml', 'application/vnd.ctc-posml');\r\n  FFileType.AddOrSetValue('ppd', 'application/vnd.cups-ppd');\r\n  FFileType.AddOrSetValue('car', 'application/vnd.curl.car');\r\n  FFileType.AddOrSetValue('pcurl', 'application/vnd.curl.pcurl');\r\n  FFileType.AddOrSetValue('dart', 'application/vnd.dart');\r\n  FFileType.AddOrSetValue('rdz', 'application/vnd.data-vision.rdz');\r\n  FFileType.AddOrSetValue('uvf', 'application/vnd.dece.data');\r\n  FFileType.AddOrSetValue('uvvf', 'application/vnd.dece.data');\r\n  FFileType.AddOrSetValue('uvd', 'application/vnd.dece.data');\r\n  FFileType.AddOrSetValue('uvvd', 'application/vnd.dece.data');\r\n  FFileType.AddOrSetValue('uvt', 'application/vnd.dece.ttml+xml');\r\n  FFileType.AddOrSetValue('uvvt', 'application/vnd.dece.ttml+xml');\r\n  FFileType.AddOrSetValue('uvx', 'application/vnd.dece.unspecified');\r\n  FFileType.AddOrSetValue('uvvx', 'application/vnd.dece.unspecified');\r\n  FFileType.AddOrSetValue('uvz', 'application/vnd.dece.zip');\r\n  FFileType.AddOrSetValue('uvvz', 'application/vnd.dece.zip');\r\n  FFileType.AddOrSetValue('fe_launch', 'application/vnd.denovo.fcselayout-link');\r\n  FFileType.AddOrSetValue('dna', 'application/vnd.dna');\r\n  FFileType.AddOrSetValue('mlp', 'application/vnd.dolby.mlp');\r\n  FFileType.AddOrSetValue('dpg', 'application/vnd.dpgraph');\r\n  FFileType.AddOrSetValue('dfac', 'application/vnd.dreamfactory');\r\n  FFileType.AddOrSetValue('kpxx', 'application/vnd.ds-keypoint');\r\n  FFileType.AddOrSetValue('ait', 'application/vnd.dvb.ait');\r\n  FFileType.AddOrSetValue('svc', 'application/vnd.dvb.service');\r\n  FFileType.AddOrSetValue('geo', 'application/vnd.dynageo');\r\n  FFileType.AddOrSetValue('mag', 'application/vnd.ecowin.chart');\r\n  FFileType.AddOrSetValue('nml', 'application/vnd.enliven');\r\n  FFileType.AddOrSetValue('esf', 'application/vnd.epson.esf');\r\n  FFileType.AddOrSetValue('msf', 'application/vnd.epson.msf');\r\n  FFileType.AddOrSetValue('qam', 'application/vnd.epson.quickanime');\r\n  FFileType.AddOrSetValue('slt', 'application/vnd.epson.salt');\r\n  FFileType.AddOrSetValue('ssf', 'application/vnd.epson.ssf');\r\n  FFileType.AddOrSetValue('es3', 'application/vnd.eszigno3+xml');\r\n  FFileType.AddOrSetValue('et3', 'application/vnd.eszigno3+xml');\r\n  FFileType.AddOrSetValue('ez2', 'application/vnd.ezpix-album');\r\n  FFileType.AddOrSetValue('ez3', 'application/vnd.ezpix-package');\r\n  FFileType.AddOrSetValue('fdf', 'application/vnd.fdf');\r\n  FFileType.AddOrSetValue('mseed', 'application/vnd.fdsn.mseed');\r\n  FFileType.AddOrSetValue('seed', 'application/vnd.fdsn.seed');\r\n  FFileType.AddOrSetValue('dataless', 'application/vnd.fdsn.seed');\r\n  FFileType.AddOrSetValue('json', 'application/vnd.embarcadero.firedac+json');\r\n  FFileType.AddOrSetValue('xml', 'application/vnd.embarcadero.firedac+xml');\r\n  FFileType.AddOrSetValue('bin', 'application/vnd.embarcadero.firedac+bin');\r\n  FFileType.AddOrSetValue('gph', 'application/vnd.flographit');\r\n  FFileType.AddOrSetValue('ftc', 'application/vnd.fluxtime.clip');\r\n  FFileType.AddOrSetValue('fm', 'application/vnd.framemaker');\r\n  FFileType.AddOrSetValue('frame', 'application/vnd.framemaker');\r\n  FFileType.AddOrSetValue('maker', 'application/vnd.framemaker');\r\n  FFileType.AddOrSetValue('book', 'application/vnd.framemaker');\r\n  FFileType.AddOrSetValue('fnc', 'application/vnd.frogans.fnc');\r\n  FFileType.AddOrSetValue('ltf', 'application/vnd.frogans.ltf');\r\n  FFileType.AddOrSetValue('fsc', 'application/vnd.fsc.weblaunch');\r\n  FFileType.AddOrSetValue('oas', 'application/vnd.fujitsu.oasys');\r\n  FFileType.AddOrSetValue('oa2', 'application/vnd.fujitsu.oasys2');\r\n  FFileType.AddOrSetValue('oa3', 'application/vnd.fujitsu.oasys3');\r\n  FFileType.AddOrSetValue('fg5', 'application/vnd.fujitsu.oasysgp');\r\n  FFileType.AddOrSetValue('bh2', 'application/vnd.fujitsu.oasysprs');\r\n  FFileType.AddOrSetValue('ddd', 'application/vnd.fujixerox.ddd');\r\n  FFileType.AddOrSetValue('xdw', 'application/vnd.fujixerox.docuworks');\r\n  FFileType.AddOrSetValue('xbd', 'application/vnd.fujixerox.docuworks.binder');\r\n  FFileType.AddOrSetValue('fzs', 'application/vnd.fuzzysheet');\r\n  FFileType.AddOrSetValue('txd', 'application/vnd.genomatix.tuxedo');\r\n  FFileType.AddOrSetValue('ggb', 'application/vnd.geogebra.file');\r\n  FFileType.AddOrSetValue('ggt', 'application/vnd.geogebra.tool');\r\n  FFileType.AddOrSetValue('gex', 'application/vnd.geometry-explorer');\r\n  FFileType.AddOrSetValue('gre', 'application/vnd.geometry-explorer');\r\n  FFileType.AddOrSetValue('gxt', 'application/vnd.geonext');\r\n  FFileType.AddOrSetValue('g2w', 'application/vnd.geoplan');\r\n  FFileType.AddOrSetValue('g3w', 'application/vnd.geospace');\r\n  FFileType.AddOrSetValue('gmx', 'application/vnd.gmx');\r\n  FFileType.AddOrSetValue('kml', 'application/vnd.google-earth.kml+xml');\r\n  FFileType.AddOrSetValue('kmz', 'application/vnd.google-earth.kmz');\r\n  FFileType.AddOrSetValue('gqf', 'application/vnd.grafeq');\r\n  FFileType.AddOrSetValue('gqs', 'application/vnd.grafeq');\r\n  FFileType.AddOrSetValue('gac', 'application/vnd.groove-account');\r\n  FFileType.AddOrSetValue('ghf', 'application/vnd.groove-help');\r\n  FFileType.AddOrSetValue('gim', 'application/vnd.groove-identity-message');\r\n  FFileType.AddOrSetValue('grv', 'application/vnd.groove-injector');\r\n  FFileType.AddOrSetValue('gtm', 'application/vnd.groove-tool-message');\r\n  FFileType.AddOrSetValue('tpl', 'application/vnd.groove-tool-template');\r\n  FFileType.AddOrSetValue('vcg', 'application/vnd.groove-vcard');\r\n  FFileType.AddOrSetValue('hal', 'application/vnd.hal+xml');\r\n  FFileType.AddOrSetValue('zmm', 'application/vnd.handheld-entertainment+xml');\r\n  FFileType.AddOrSetValue('hbci', 'application/vnd.hbci');\r\n  FFileType.AddOrSetValue('les', 'application/vnd.hhe.lesson-player');\r\n  FFileType.AddOrSetValue('hpgl', 'application/vnd.hp-hpgl');\r\n  FFileType.AddOrSetValue('hpid', 'application/vnd.hp-hpid');\r\n  FFileType.AddOrSetValue('hps', 'application/vnd.hp-hps');\r\n  FFileType.AddOrSetValue('jlt', 'application/vnd.hp-jlyt');\r\n  FFileType.AddOrSetValue('pcl', 'application/vnd.hp-pcl');\r\n  FFileType.AddOrSetValue('pclxl', 'application/vnd.hp-pclxl');\r\n  FFileType.AddOrSetValue('sfd-hdstx', 'application/vnd.hydrostatix.sof-data');\r\n  FFileType.AddOrSetValue('mpy', 'application/vnd.ibm.minipay');\r\n  FFileType.AddOrSetValue('afp', 'application/vnd.ibm.modcap');\r\n  FFileType.AddOrSetValue('listafp', 'application/vnd.ibm.modcap');\r\n  FFileType.AddOrSetValue('list3820', 'application/vnd.ibm.modcap');\r\n  FFileType.AddOrSetValue('irm', 'application/vnd.ibm.rights-management');\r\n  FFileType.AddOrSetValue('sc', 'application/vnd.ibm.secure-container');\r\n  FFileType.AddOrSetValue('icc', 'application/vnd.iccprofile');\r\n  FFileType.AddOrSetValue('icm', 'application/vnd.iccprofile');\r\n  FFileType.AddOrSetValue('igl', 'application/vnd.igloader');\r\n  FFileType.AddOrSetValue('ivp', 'application/vnd.immervision-ivp');\r\n  FFileType.AddOrSetValue('ivu', 'application/vnd.immervision-ivu');\r\n  FFileType.AddOrSetValue('igm', 'application/vnd.insors.igm');\r\n  FFileType.AddOrSetValue('xpw', 'application/vnd.intercon.formnet');\r\n  FFileType.AddOrSetValue('xpx', 'application/vnd.intercon.formnet');\r\n  FFileType.AddOrSetValue('i2g', 'application/vnd.intergeo');\r\n  FFileType.AddOrSetValue('qbo', 'application/vnd.intu.qbo');\r\n  FFileType.AddOrSetValue('qfx', 'application/vnd.intu.qfx');\r\n  FFileType.AddOrSetValue('rcprofile', 'application/vnd.ipunplugged.rcprofile');\r\n  FFileType.AddOrSetValue('irp', 'application/vnd.irepository.package+xml');\r\n  FFileType.AddOrSetValue('xpr', 'application/vnd.is-xpr');\r\n  FFileType.AddOrSetValue('fcs', 'application/vnd.isac.fcs');\r\n  FFileType.AddOrSetValue('jam', 'application/vnd.jam');\r\n  FFileType.AddOrSetValue('rms', 'application/vnd.jcp.javame.midlet-rms');\r\n  FFileType.AddOrSetValue('jisp', 'application/vnd.jisp');\r\n  FFileType.AddOrSetValue('joda', 'application/vnd.joost.joda-archive');\r\n  FFileType.AddOrSetValue('ktz', 'application/vnd.kahootz');\r\n  FFileType.AddOrSetValue('ktr', 'application/vnd.kahootz');\r\n  FFileType.AddOrSetValue('karbon', 'application/vnd.kde.karbon');\r\n  FFileType.AddOrSetValue('chrt', 'application/vnd.kde.kchart');\r\n  FFileType.AddOrSetValue('kfo', 'application/vnd.kde.kformula');\r\n  FFileType.AddOrSetValue('flw', 'application/vnd.kde.kivio');\r\n  FFileType.AddOrSetValue('kon', 'application/vnd.kde.kontour');\r\n  FFileType.AddOrSetValue('kpr', 'application/vnd.kde.kpresenter');\r\n  FFileType.AddOrSetValue('kpt', 'application/vnd.kde.kpresenter');\r\n  FFileType.AddOrSetValue('ksp', 'application/vnd.kde.kspread');\r\n  FFileType.AddOrSetValue('kwd', 'application/vnd.kde.kword');\r\n  FFileType.AddOrSetValue('kwt', 'application/vnd.kde.kword');\r\n  FFileType.AddOrSetValue('htke', 'application/vnd.kenameaapp');\r\n  FFileType.AddOrSetValue('kia', 'application/vnd.kidspiration');\r\n  FFileType.AddOrSetValue('kne', 'application/vnd.kinar');\r\n  FFileType.AddOrSetValue('knp', 'application/vnd.kinar');\r\n  FFileType.AddOrSetValue('skp', 'application/vnd.koan');\r\n  FFileType.AddOrSetValue('skd', 'application/vnd.koan');\r\n  FFileType.AddOrSetValue('skt', 'application/vnd.koan');\r\n  FFileType.AddOrSetValue('skm', 'application/vnd.koan');\r\n  FFileType.AddOrSetValue('sse', 'application/vnd.kodak-descriptor');\r\n  FFileType.AddOrSetValue('lasxml', 'application/vnd.las.las+xml');\r\n  FFileType.AddOrSetValue('lbd', 'application/vnd.llamagraphics.life-balance.desktop');\r\n  FFileType.AddOrSetValue('lbe', 'application/vnd.llamagraphics.life-balance.exchange+xml');\r\n  FFileType.AddOrSetValue('123', 'application/vnd.lotus-1-2-3');\r\n  FFileType.AddOrSetValue('apr', 'application/vnd.lotus-approach');\r\n  FFileType.AddOrSetValue('pre', 'application/vnd.lotus-freelance');\r\n  FFileType.AddOrSetValue('nsf', 'application/vnd.lotus-notes');\r\n  FFileType.AddOrSetValue('org', 'application/vnd.lotus-organizer');\r\n  FFileType.AddOrSetValue('scm', 'application/vnd.lotus-screencam');\r\n  FFileType.AddOrSetValue('lwp', 'application/vnd.lotus-wordpro');\r\n  FFileType.AddOrSetValue('portpkg', 'application/vnd.macports.portpkg');\r\n  FFileType.AddOrSetValue('mcd', 'application/vnd.mcd');\r\n  FFileType.AddOrSetValue('mc1', 'application/vnd.medcalcdata');\r\n  FFileType.AddOrSetValue('cdkey', 'application/vnd.mediastation.cdkey');\r\n  FFileType.AddOrSetValue('mwf', 'application/vnd.mfer');\r\n  FFileType.AddOrSetValue('mfm', 'application/vnd.mfmp');\r\n  FFileType.AddOrSetValue('flo', 'application/vnd.micrografx.flo');\r\n  FFileType.AddOrSetValue('igx', 'application/vnd.micrografx.igx');\r\n  FFileType.AddOrSetValue('mif', 'application/vnd.mif');\r\n  FFileType.AddOrSetValue('daf', 'application/vnd.mobius.daf');\r\n  FFileType.AddOrSetValue('dis', 'application/vnd.mobius.dis');\r\n  FFileType.AddOrSetValue('mbk', 'application/vnd.mobius.mbk');\r\n  FFileType.AddOrSetValue('mqy', 'application/vnd.mobius.mqy');\r\n  FFileType.AddOrSetValue('msl', 'application/vnd.mobius.msl');\r\n  FFileType.AddOrSetValue('plc', 'application/vnd.mobius.plc');\r\n  FFileType.AddOrSetValue('txf', 'application/vnd.mobius.txf');\r\n  FFileType.AddOrSetValue('mpn', 'application/vnd.mophun.application');\r\n  FFileType.AddOrSetValue('mpc', 'application/vnd.mophun.certificate');\r\n  FFileType.AddOrSetValue('xul', 'application/vnd.mozilla.xul+xml');\r\n  FFileType.AddOrSetValue('cil', 'application/vnd.ms-artgalry');\r\n  FFileType.AddOrSetValue('cab', 'application/vnd.ms-cab-compressed');\r\n  FFileType.AddOrSetValue('xls', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xlm', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xla', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xlc', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xlt', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xlw', 'application/vnd.ms-excel');\r\n  FFileType.AddOrSetValue('xlam', 'application/vnd.ms-excel.addin.macroenabled.12');\r\n  FFileType.AddOrSetValue('xlsb', 'application/vnd.ms-excel.sheet.binary.macroenabled.12');\r\n  FFileType.AddOrSetValue('xlsm', 'application/vnd.ms-excel.sheet.macroenabled.12');\r\n  FFileType.AddOrSetValue('xltm', 'application/vnd.ms-excel.template.macroenabled.12');\r\n  FFileType.AddOrSetValue('eot', 'application/vnd.ms-fontobject');\r\n  FFileType.AddOrSetValue('chm', 'application/vnd.ms-htmlhelp');\r\n  FFileType.AddOrSetValue('ims', 'application/vnd.ms-ims');\r\n  FFileType.AddOrSetValue('lrm', 'application/vnd.ms-lrm');\r\n  FFileType.AddOrSetValue('thmx', 'application/vnd.ms-officetheme');\r\n  FFileType.AddOrSetValue('cat', 'application/vnd.ms-pki.seccat');\r\n  FFileType.AddOrSetValue('stl', 'application/vnd.ms-pki.stl');\r\n  FFileType.AddOrSetValue('ppt', 'application/vnd.ms-powerpoint');\r\n  FFileType.AddOrSetValue('pps', 'application/vnd.ms-powerpoint');\r\n  FFileType.AddOrSetValue('pot', 'application/vnd.ms-powerpoint');\r\n  FFileType.AddOrSetValue('ppam', 'application/vnd.ms-powerpoint.addin.macroenabled.12');\r\n  FFileType.AddOrSetValue('pptm', 'application/vnd.ms-powerpoint.presentation.macroenabled.12');\r\n  FFileType.AddOrSetValue('sldm', 'application/vnd.ms-powerpoint.slide.macroenabled.12');\r\n  FFileType.AddOrSetValue('ppsm', 'application/vnd.ms-powerpoint.slideshow.macroenabled.12');\r\n  FFileType.AddOrSetValue('potm', 'application/vnd.ms-powerpoint.template.macroenabled.12');\r\n  FFileType.AddOrSetValue('mpp', 'application/vnd.ms-project');\r\n  FFileType.AddOrSetValue('mpt', 'application/vnd.ms-project');\r\n  FFileType.AddOrSetValue('docm', 'application/vnd.ms-word.document.macroenabled.12');\r\n  FFileType.AddOrSetValue('dotm', 'application/vnd.ms-word.template.macroenabled.12');\r\n  FFileType.AddOrSetValue('wps', 'application/vnd.ms-works');\r\n  FFileType.AddOrSetValue('wks', 'application/vnd.ms-works');\r\n  FFileType.AddOrSetValue('wcm', 'application/vnd.ms-works');\r\n  FFileType.AddOrSetValue('wdb', 'application/vnd.ms-works');\r\n  FFileType.AddOrSetValue('wpl', 'application/vnd.ms-wpl');\r\n  FFileType.AddOrSetValue('xps', 'application/vnd.ms-xpsdocument');\r\n  FFileType.AddOrSetValue('mseq', 'application/vnd.mseq');\r\n  FFileType.AddOrSetValue('mus', 'application/vnd.musician');\r\n  FFileType.AddOrSetValue('msty', 'application/vnd.muvee.style');\r\n  FFileType.AddOrSetValue('taglet', 'application/vnd.mynfc');\r\n  FFileType.AddOrSetValue('nlu', 'application/vnd.neurolanguage.nlu');\r\n  FFileType.AddOrSetValue('ntf', 'application/vnd.nitf');\r\n  FFileType.AddOrSetValue('nitf', 'application/vnd.nitf');\r\n  FFileType.AddOrSetValue('nnd', 'application/vnd.noblenet-directory');\r\n  FFileType.AddOrSetValue('nns', 'application/vnd.noblenet-sealer');\r\n  FFileType.AddOrSetValue('nnw', 'application/vnd.noblenet-web');\r\n  FFileType.AddOrSetValue('ngdat', 'application/vnd.nokia.n-gage.data');\r\n  FFileType.AddOrSetValue('n-gage', 'application/vnd.nokia.n-gage.symbian.install');\r\n  FFileType.AddOrSetValue('rpst', 'application/vnd.nokia.radio-preset');\r\n  FFileType.AddOrSetValue('rpss', 'application/vnd.nokia.radio-presets');\r\n  FFileType.AddOrSetValue('edm', 'application/vnd.novadigm.edm');\r\n  FFileType.AddOrSetValue('edx', 'application/vnd.novadigm.edx');\r\n  FFileType.AddOrSetValue('FExt', 'application/vnd.novadigm.FExt');\r\n  FFileType.AddOrSetValue('odc', 'application/vnd.oasis.opendocument.chart');\r\n  FFileType.AddOrSetValue('otc', 'application/vnd.oasis.opendocument.chart-template');\r\n  FFileType.AddOrSetValue('odb', 'application/vnd.oasis.opendocument.database');\r\n  FFileType.AddOrSetValue('odf', 'application/vnd.oasis.opendocument.formula');\r\n  FFileType.AddOrSetValue('odft', 'application/vnd.oasis.opendocument.formula-template');\r\n  FFileType.AddOrSetValue('odg', 'application/vnd.oasis.opendocument.graphics');\r\n  FFileType.AddOrSetValue('otg', 'application/vnd.oasis.opendocument.graphics-template');\r\n  FFileType.AddOrSetValue('odi', 'application/vnd.oasis.opendocument.image');\r\n  FFileType.AddOrSetValue('oti', 'application/vnd.oasis.opendocument.image-template');\r\n  FFileType.AddOrSetValue('odp', 'application/vnd.oasis.opendocument.presentation');\r\n  FFileType.AddOrSetValue('otp', 'application/vnd.oasis.opendocument.presentation-template');\r\n  FFileType.AddOrSetValue('ods', 'application/vnd.oasis.opendocument.spreadsheet');\r\n  FFileType.AddOrSetValue('ots', 'application/vnd.oasis.opendocument.spreadsheet-template');\r\n  FFileType.AddOrSetValue('odt', 'application/vnd.oasis.opendocument.text');\r\n  FFileType.AddOrSetValue('odm', 'application/vnd.oasis.opendocument.text-master');\r\n  FFileType.AddOrSetValue('ott', 'application/vnd.oasis.opendocument.text-template');\r\n  FFileType.AddOrSetValue('oth', 'application/vnd.oasis.opendocument.text-web');\r\n  FFileType.AddOrSetValue('xo', 'application/vnd.olpc-sugar');\r\n  FFileType.AddOrSetValue('dd2', 'application/vnd.oma.dd2+xml');\r\n  FFileType.AddOrSetValue('oxt', 'application/vnd.openofficeorg.extension');\r\n  FFileType.AddOrSetValue('pptx', 'application/vnd.openxmlformats-officedocument.presentationml.presentation');\r\n  FFileType.AddOrSetValue('sldx', 'application/vnd.openxmlformats-officedocument.presentationml.slide');\r\n  FFileType.AddOrSetValue('ppsx', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow');\r\n  FFileType.AddOrSetValue('potx', 'application/vnd.openxmlformats-officedocument.presentationml.template');\r\n  FFileType.AddOrSetValue('xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');\r\n  FFileType.AddOrSetValue('xltx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template');\r\n  FFileType.AddOrSetValue('docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document');\r\n  FFileType.AddOrSetValue('dotx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template');\r\n  FFileType.AddOrSetValue('mgp', 'application/vnd.osgeo.mapguide.package');\r\n  FFileType.AddOrSetValue('dp', 'application/vnd.osgi.dp');\r\n  FFileType.AddOrSetValue('esa', 'application/vnd.osgi.subsystem');\r\n  FFileType.AddOrSetValue('pdb', 'application/vnd.palm');\r\n  FFileType.AddOrSetValue('pqa', 'application/vnd.palm');\r\n  FFileType.AddOrSetValue('oprc', 'application/vnd.palm');\r\n  FFileType.AddOrSetValue('paw', 'application/vnd.pawaafile');\r\n  FFileType.AddOrSetValue('str', 'application/vnd.pg.format');\r\n  FFileType.AddOrSetValue('ei6', 'application/vnd.pg.osasli');\r\n  FFileType.AddOrSetValue('efif', 'application/vnd.picsel');\r\n  FFileType.AddOrSetValue('wg', 'application/vnd.pmi.widget');\r\n  FFileType.AddOrSetValue('plf', 'application/vnd.pocketlearn');\r\n  FFileType.AddOrSetValue('pbd', 'application/vnd.powerbuilder6');\r\n  FFileType.AddOrSetValue('box', 'application/vnd.previewsystems.box');\r\n  FFileType.AddOrSetValue('mgz', 'application/vnd.proteus.magazine');\r\n  FFileType.AddOrSetValue('qps', 'application/vnd.publishare-delta-tree');\r\n  FFileType.AddOrSetValue('ptid', 'application/vnd.pvi.ptid1');\r\n  FFileType.AddOrSetValue('qxd', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('qxt', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('qwd', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('qwt', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('qxl', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('qxb', 'application/vnd.quark.quarkxpress');\r\n  FFileType.AddOrSetValue('bed', 'application/vnd.realvnc.bed');\r\n  FFileType.AddOrSetValue('mxl', 'application/vnd.recordare.musicxml');\r\n  FFileType.AddOrSetValue('musicxml', 'application/vnd.recordare.musicxml+xml');\r\n  FFileType.AddOrSetValue('cryptonote', 'application/vnd.rig.cryptonote');\r\n  FFileType.AddOrSetValue('cod', 'application/vnd.rim.cod');\r\n  FFileType.AddOrSetValue('rm', 'application/vnd.rn-realmedia');\r\n  FFileType.AddOrSetValue('rmvb', 'application/vnd.rn-realmedia-vbr');\r\n  FFileType.AddOrSetValue('link66', 'application/vnd.route66.link66+xml');\r\n  FFileType.AddOrSetValue('st', 'application/vnd.sailingtracker.track');\r\n  FFileType.AddOrSetValue('see', 'application/vnd.seemail');\r\n  FFileType.AddOrSetValue('sema', 'application/vnd.sema');\r\n  FFileType.AddOrSetValue('semd', 'application/vnd.semd');\r\n  FFileType.AddOrSetValue('semf', 'application/vnd.semf');\r\n  FFileType.AddOrSetValue('ifm', 'application/vnd.shana.informed.formdata');\r\n  FFileType.AddOrSetValue('itp', 'application/vnd.shana.informed.formtemplate');\r\n  FFileType.AddOrSetValue('iif', 'application/vnd.shana.informed.interchange');\r\n  FFileType.AddOrSetValue('ipk', 'application/vnd.shana.informed.package');\r\n  FFileType.AddOrSetValue('twd', 'application/vnd.simtech-mindmapper');\r\n  FFileType.AddOrSetValue('twds', 'application/vnd.simtech-mindmapper');\r\n  FFileType.AddOrSetValue('mmf', 'application/vnd.smaf');\r\n  FFileType.AddOrSetValue('teacher', 'application/vnd.smart.teacher');\r\n  FFileType.AddOrSetValue('sdkm', 'application/vnd.solent.sdkm+xml');\r\n  FFileType.AddOrSetValue('sdkd', 'application/vnd.solent.sdkm+xml');\r\n  FFileType.AddOrSetValue('dxp', 'application/vnd.spotfire.dxp');\r\n  FFileType.AddOrSetValue('sfs', 'application/vnd.spotfire.sfs');\r\n  FFileType.AddOrSetValue('sdc', 'application/vnd.stardivision.calc');\r\n  FFileType.AddOrSetValue('sda', 'application/vnd.stardivision.draw');\r\n  FFileType.AddOrSetValue('sdd', 'application/vnd.stardivision.impress');\r\n  FFileType.AddOrSetValue('smf', 'application/vnd.stardivision.math');\r\n  FFileType.AddOrSetValue('sdw', 'application/vnd.stardivision.writer');\r\n  FFileType.AddOrSetValue('vor', 'application/vnd.stardivision.writer');\r\n  FFileType.AddOrSetValue('sgl', 'application/vnd.stardivision.writer-global');\r\n  FFileType.AddOrSetValue('smzip', 'application/vnd.stepmania.package');\r\n  FFileType.AddOrSetValue('sm', 'application/vnd.stepmania.stepchart');\r\n  FFileType.AddOrSetValue('sxc', 'application/vnd.sun.xml.calc');\r\n  FFileType.AddOrSetValue('stc', 'application/vnd.sun.xml.calc.template');\r\n  FFileType.AddOrSetValue('sxd', 'application/vnd.sun.xml.draw');\r\n  FFileType.AddOrSetValue('std', 'application/vnd.sun.xml.draw.template');\r\n  FFileType.AddOrSetValue('sxi', 'application/vnd.sun.xml.impress');\r\n  FFileType.AddOrSetValue('sti', 'application/vnd.sun.xml.impress.template');\r\n  FFileType.AddOrSetValue('sxm', 'application/vnd.sun.xml.math');\r\n  FFileType.AddOrSetValue('sxw', 'application/vnd.sun.xml.writer');\r\n  FFileType.AddOrSetValue('sxg', 'application/vnd.sun.xml.writer.global');\r\n  FFileType.AddOrSetValue('stw', 'application/vnd.sun.xml.writer.template');\r\n  FFileType.AddOrSetValue('sus', 'application/vnd.sus-calendar');\r\n  FFileType.AddOrSetValue('susp', 'application/vnd.sus-calendar');\r\n  FFileType.AddOrSetValue('svd', 'application/vnd.svd');\r\n  FFileType.AddOrSetValue('sis', 'application/vnd.symbian.install');\r\n  FFileType.AddOrSetValue('sisx', 'application/vnd.symbian.install');\r\n  FFileType.AddOrSetValue('xsm', 'application/vnd.syncml+xml');\r\n  FFileType.AddOrSetValue('bdm', 'application/vnd.syncml.dm+wbxml');\r\n  FFileType.AddOrSetValue('xdm', 'application/vnd.syncml.dm+xml');\r\n  FFileType.AddOrSetValue('tao', 'application/vnd.tao.intent-module-archive');\r\n  FFileType.AddOrSetValue('pcap', 'application/vnd.tcpdump.pcap');\r\n  FFileType.AddOrSetValue('cap', 'application/vnd.tcpdump.pcap');\r\n  FFileType.AddOrSetValue('dmp', 'application/vnd.tcpdump.pcap');\r\n  FFileType.AddOrSetValue('tmo', 'application/vnd.tmobile-livetv');\r\n  FFileType.AddOrSetValue('tpt', 'application/vnd.trid.tpt');\r\n  FFileType.AddOrSetValue('mxs', 'application/vnd.triscape.mxs');\r\n  FFileType.AddOrSetValue('tra', 'application/vnd.trueapp');\r\n  FFileType.AddOrSetValue('ufd', 'application/vnd.ufdl');\r\n  FFileType.AddOrSetValue('ufdl', 'application/vnd.ufdl');\r\n  FFileType.AddOrSetValue('utz', 'application/vnd.uiq.theme');\r\n  FFileType.AddOrSetValue('umj', 'application/vnd.umajin');\r\n  FFileType.AddOrSetValue('unityweb', 'application/vnd.unity');\r\n  FFileType.AddOrSetValue('uoml', 'application/vnd.uoml+xml');\r\n  FFileType.AddOrSetValue('vcx', 'application/vnd.vcx');\r\n  FFileType.AddOrSetValue('vsd', 'application/vnd.visio');\r\n  FFileType.AddOrSetValue('vst', 'application/vnd.visio');\r\n  FFileType.AddOrSetValue('vss', 'application/vnd.visio');\r\n  FFileType.AddOrSetValue('vsw', 'application/vnd.visio');\r\n  FFileType.AddOrSetValue('vis', 'application/vnd.visionary');\r\n  FFileType.AddOrSetValue('vsf', 'application/vnd.vsf');\r\n  FFileType.AddOrSetValue('wbxml', 'application/vnd.wap.wbxml');\r\n  FFileType.AddOrSetValue('wmlc', 'application/vnd.wap.wmlc');\r\n  FFileType.AddOrSetValue('wmlsc', 'application/vnd.wap.wmlscriptc');\r\n  FFileType.AddOrSetValue('wtb', 'application/vnd.webturbo');\r\n  FFileType.AddOrSetValue('nbp', 'application/vnd.wolfram.player');\r\n  FFileType.AddOrSetValue('wpd', 'application/vnd.wordperfect');\r\n  FFileType.AddOrSetValue('wqd', 'application/vnd.wqd');\r\n  FFileType.AddOrSetValue('stf', 'application/vnd.wt.stf');\r\n  FFileType.AddOrSetValue('xar', 'application/vnd.xara');\r\n  FFileType.AddOrSetValue('xfdl', 'application/vnd.xfdl');\r\n  FFileType.AddOrSetValue('hvd', 'application/vnd.yamaha.hv-dic');\r\n  FFileType.AddOrSetValue('hvs', 'application/vnd.yamaha.hv-script');\r\n  FFileType.AddOrSetValue('hvp', 'application/vnd.yamaha.hv-voice');\r\n  FFileType.AddOrSetValue('osf', 'application/vnd.yamaha.openscoreformat');\r\n  FFileType.AddOrSetValue('osfpvg', 'application/vnd.yamaha.openscoreformat.osfpvg+xml');\r\n  FFileType.AddOrSetValue('saf', 'application/vnd.yamaha.smaf-audio');\r\n  FFileType.AddOrSetValue('spf', 'application/vnd.yamaha.smaf-phrase');\r\n  FFileType.AddOrSetValue('cmp', 'application/vnd.yellowriver-custom-menu');\r\n  FFileType.AddOrSetValue('zir', 'application/vnd.zul');\r\n  FFileType.AddOrSetValue('zirz', 'application/vnd.zul');\r\n  FFileType.AddOrSetValue('zaz', 'application/vnd.zzazz.deck+xml');\r\n  FFileType.AddOrSetValue('vxml', 'application/voicexml+xml');\r\n  FFileType.AddOrSetValue('wgt', 'application/widget');\r\n  FFileType.AddOrSetValue('hlp', 'application/winhlp');\r\n  FFileType.AddOrSetValue('wsdl', 'application/wsdl+xml');\r\n  FFileType.AddOrSetValue('wspolicy', 'application/wspolicy+xml');\r\n  FFileType.AddOrSetValue('7z', 'application/x-7z-compressed');\r\n  FFileType.AddOrSetValue('abw', 'application/x-abiword');\r\n  FFileType.AddOrSetValue('ace', 'application/x-ace-compressed');\r\n  FFileType.AddOrSetValue('dmg', 'application/x-apple-diskimage');\r\n  FFileType.AddOrSetValue('aab', 'application/x-authorware-bin');\r\n  FFileType.AddOrSetValue('x32', 'application/x-authorware-bin');\r\n  FFileType.AddOrSetValue('u32', 'application/x-authorware-bin');\r\n  FFileType.AddOrSetValue('vox', 'application/x-authorware-bin');\r\n  FFileType.AddOrSetValue('aam', 'application/x-authorware-map');\r\n  FFileType.AddOrSetValue('aas', 'application/x-authorware-seg');\r\n  FFileType.AddOrSetValue('bcpio', 'application/x-bcpio');\r\n  FFileType.AddOrSetValue('torrent', 'application/x-bittorrent');\r\n  FFileType.AddOrSetValue('blb', 'application/x-blorb');\r\n  FFileType.AddOrSetValue('blorb', 'application/x-blorb');\r\n  FFileType.AddOrSetValue('bz', 'application/x-bzip');\r\n  FFileType.AddOrSetValue('bz2', 'application/x-bzip2');\r\n  FFileType.AddOrSetValue('boz', 'application/x-bzip2');\r\n  FFileType.AddOrSetValue('cbr', 'application/x-cbr');\r\n  FFileType.AddOrSetValue('cba', 'application/x-cbr');\r\n  FFileType.AddOrSetValue('cbt', 'application/x-cbr');\r\n  FFileType.AddOrSetValue('cbz', 'application/x-cbr');\r\n  FFileType.AddOrSetValue('cb7', 'application/x-cbr');\r\n  FFileType.AddOrSetValue('vcd', 'application/x-cdlink');\r\n  FFileType.AddOrSetValue('cfs', 'application/x-cfs-compressed');\r\n  FFileType.AddOrSetValue('chat', 'application/x-chat');\r\n  FFileType.AddOrSetValue('pgn', 'application/x-chess-pgn');\r\n  FFileType.AddOrSetValue('nsc', 'application/x-conference');\r\n  FFileType.AddOrSetValue('cpio', 'application/x-cpio');\r\n  FFileType.AddOrSetValue('csh', 'application/x-csh');\r\n  FFileType.AddOrSetValue('deb', 'application/x-debian-package');\r\n  FFileType.AddOrSetValue('udeb', 'application/x-debian-package');\r\n  FFileType.AddOrSetValue('dgc', 'application/x-dgc-compressed');\r\n  FFileType.AddOrSetValue('dir', 'application/x-director');\r\n  FFileType.AddOrSetValue('dcr', 'application/x-director');\r\n  FFileType.AddOrSetValue('dxr', 'application/x-director');\r\n  FFileType.AddOrSetValue('cst', 'application/x-director');\r\n  FFileType.AddOrSetValue('cct', 'application/x-director');\r\n  FFileType.AddOrSetValue('cxt', 'application/x-director');\r\n  FFileType.AddOrSetValue('w3d', 'application/x-director');\r\n  FFileType.AddOrSetValue('fgd', 'application/x-director');\r\n  FFileType.AddOrSetValue('swa', 'application/x-director');\r\n  FFileType.AddOrSetValue('wad', 'application/x-doom');\r\n  FFileType.AddOrSetValue('ncx', 'application/x-dtbncx+xml');\r\n  FFileType.AddOrSetValue('dtb', 'application/x-dtbook+xml');\r\n  FFileType.AddOrSetValue('res', 'application/x-dtbresource+xml');\r\n  FFileType.AddOrSetValue('dvi', 'application/x-dvi');\r\n  FFileType.AddOrSetValue('evy', 'application/x-envoy');\r\n  FFileType.AddOrSetValue('eva', 'application/x-eva');\r\n  FFileType.AddOrSetValue('bdf', 'application/x-font-bdf');\r\n  FFileType.AddOrSetValue('gsf', 'application/x-font-ghostscript');\r\n  FFileType.AddOrSetValue('psf', 'application/x-font-linux-psf');\r\n  FFileType.AddOrSetValue('otf', 'application/x-font-otf');\r\n  FFileType.AddOrSetValue('pcf', 'application/x-font-pcf');\r\n  FFileType.AddOrSetValue('snf', 'application/x-font-snf');\r\n  FFileType.AddOrSetValue('ttf', 'application/x-font-ttf');\r\n  FFileType.AddOrSetValue('ttc', 'application/x-font-ttf');\r\n  FFileType.AddOrSetValue('pfa', 'application/x-font-type1');\r\n  FFileType.AddOrSetValue('pfb', 'application/x-font-type1');\r\n  FFileType.AddOrSetValue('pfm', 'application/x-font-type1');\r\n  FFileType.AddOrSetValue('afm', 'application/x-font-type1');\r\n  FFileType.AddOrSetValue('woff', 'application/x-font-woff');\r\n  FFileType.AddOrSetValue('arc', 'application/x-freearc');\r\n  FFileType.AddOrSetValue('spl', 'application/x-futuresplash');\r\n  FFileType.AddOrSetValue('gca', 'application/x-gca-compressed');\r\n  FFileType.AddOrSetValue('ulx', 'application/x-glulx');\r\n  FFileType.AddOrSetValue('gnumeric', 'application/x-gnumeric');\r\n  FFileType.AddOrSetValue('gramps', 'application/x-gramps-xml');\r\n  FFileType.AddOrSetValue('gtar', 'application/x-gtar');\r\n  FFileType.AddOrSetValue('hdf', 'application/x-hdf');\r\n  FFileType.AddOrSetValue('install', 'application/x-install-instructions');\r\n  FFileType.AddOrSetValue('iso', 'application/x-iso9660-image');\r\n  FFileType.AddOrSetValue('jnlp', 'application/x-java-jnlp-file');\r\n  FFileType.AddOrSetValue('latex', 'application/x-latex');\r\n  FFileType.AddOrSetValue('lzh', 'application/x-lzh-compressed');\r\n  FFileType.AddOrSetValue('lha', 'application/x-lzh-compressed');\r\n  FFileType.AddOrSetValue('mie', 'application/x-mie');\r\n  FFileType.AddOrSetValue('prc', 'application/x-mobipocket-ebook');\r\n  FFileType.AddOrSetValue('mobi', 'application/x-mobipocket-ebook');\r\n  FFileType.AddOrSetValue('application', 'application/x-ms-application');\r\n  FFileType.AddOrSetValue('lnk', 'application/x-ms-shortcut');\r\n  FFileType.AddOrSetValue('wmd', 'application/x-ms-wmd');\r\n  FFileType.AddOrSetValue('wmz', 'application/x-ms-wmz');\r\n  FFileType.AddOrSetValue('xbap', 'application/x-ms-xbap');\r\n  FFileType.AddOrSetValue('mdb', 'application/x-msaccess');\r\n  FFileType.AddOrSetValue('obd', 'application/x-msbinder');\r\n  FFileType.AddOrSetValue('crd', 'application/x-mscardfile');\r\n  FFileType.AddOrSetValue('clp', 'application/x-msclip');\r\n  FFileType.AddOrSetValue('exe', 'application/x-msdownload');\r\n  FFileType.AddOrSetValue('dll', 'application/x-msdownload');\r\n  FFileType.AddOrSetValue('com', 'application/x-msdownload');\r\n  FFileType.AddOrSetValue('bat', 'application/x-msdownload');\r\n  FFileType.AddOrSetValue('msi', 'application/x-msdownload');\r\n  FFileType.AddOrSetValue('mvb', 'application/x-msmediaview');\r\n  FFileType.AddOrSetValue('m13', 'application/x-msmediaview');\r\n  FFileType.AddOrSetValue('m14', 'application/x-msmediaview');\r\n  FFileType.AddOrSetValue('wmf', 'application/x-msmetafile');\r\n  FFileType.AddOrSetValue('wmz', 'application/x-msmetafile');\r\n  FFileType.AddOrSetValue('emf', 'application/x-msmetafile');\r\n  FFileType.AddOrSetValue('emz', 'application/x-msmetafile');\r\n  FFileType.AddOrSetValue('mny', 'application/x-msmoney');\r\n  FFileType.AddOrSetValue('pub', 'application/x-mspublisher');\r\n  FFileType.AddOrSetValue('scd', 'application/x-msschedule');\r\n  FFileType.AddOrSetValue('trm', 'application/x-msterminal');\r\n  FFileType.AddOrSetValue('wri', 'application/x-mswrite');\r\n  FFileType.AddOrSetValue('nc', 'application/x-netcdf');\r\n  FFileType.AddOrSetValue('cdf', 'application/x-netcdf');\r\n  FFileType.AddOrSetValue('nzb', 'application/x-nzb');\r\n  FFileType.AddOrSetValue('p12', 'application/x-pkcs12');\r\n  FFileType.AddOrSetValue('pfx', 'application/x-pkcs12');\r\n  FFileType.AddOrSetValue('p7b', 'application/x-pkcs7-certificates');\r\n  FFileType.AddOrSetValue('spc', 'application/x-pkcs7-certificates');\r\n  FFileType.AddOrSetValue('p7r', 'application/x-pkcs7-certreqresp');\r\n  FFileType.AddOrSetValue('rar', 'application/x-rar-compressed');\r\n  FFileType.AddOrSetValue('ris', 'application/x-research-info-systems');\r\n  FFileType.AddOrSetValue('sh', 'application/x-sh');\r\n  FFileType.AddOrSetValue('shar', 'application/x-shar');\r\n  FFileType.AddOrSetValue('swf', 'application/x-shockwave-flash');\r\n  FFileType.AddOrSetValue('xap', 'application/x-silverlight-app');\r\n  FFileType.AddOrSetValue('sql', 'application/x-sql');\r\n  FFileType.AddOrSetValue('sit', 'application/x-stuffit');\r\n  FFileType.AddOrSetValue('sitx', 'application/x-stuffitx');\r\n  FFileType.AddOrSetValue('srt', 'application/x-subrip');\r\n  FFileType.AddOrSetValue('sv4cpio', 'application/x-sv4cpio');\r\n  FFileType.AddOrSetValue('sv4crc', 'application/x-sv4crc');\r\n  FFileType.AddOrSetValue('t3', 'application/x-t3vm-image');\r\n  FFileType.AddOrSetValue('gam', 'application/x-tads');\r\n  FFileType.AddOrSetValue('tar', 'application/x-tar');\r\n  FFileType.AddOrSetValue('tcl', 'application/x-tcl');\r\n  FFileType.AddOrSetValue('tex', 'application/x-tex');\r\n  FFileType.AddOrSetValue('tfm', 'application/x-tex-tfm');\r\n  FFileType.AddOrSetValue('texinfo', 'application/x-texinfo');\r\n  FFileType.AddOrSetValue('texi', 'application/x-texinfo');\r\n  FFileType.AddOrSetValue('obj', 'application/x-tgif');\r\n  FFileType.AddOrSetValue('ustar', 'application/x-ustar');\r\n  FFileType.AddOrSetValue('src', 'application/x-wais-source');\r\n  FFileType.AddOrSetValue('der', 'application/x-x509-ca-cert');\r\n  FFileType.AddOrSetValue('crt', 'application/x-x509-ca-cert');\r\n  FFileType.AddOrSetValue('fig', 'application/x-xfig');\r\n  FFileType.AddOrSetValue('xlf', 'application/x-xliff+xml');\r\n  FFileType.AddOrSetValue('xpi', 'application/x-xpinstall');\r\n  FFileType.AddOrSetValue('xz', 'application/x-xz');\r\n  FFileType.AddOrSetValue('yaml', 'application/x-yaml');\r\n  FFileType.AddOrSetValue('z1', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z2', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z3', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z4', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z5', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z6', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z7', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('z8', 'application/x-zmachine');\r\n  FFileType.AddOrSetValue('xaml', 'application/xaml+xml');\r\n  FFileType.AddOrSetValue('xdf', 'application/xcap-diff+xml');\r\n  FFileType.AddOrSetValue('xenc', 'application/xenc+xml');\r\n  FFileType.AddOrSetValue('xhtml', 'application/xhtml+xml');\r\n  FFileType.AddOrSetValue('xht', 'application/xhtml+xml');\r\n  FFileType.AddOrSetValue('xml', 'application/xml');\r\n  FFileType.AddOrSetValue('xsl', 'application/xml');\r\n  FFileType.AddOrSetValue('dtd', 'application/xml-dtd');\r\n  FFileType.AddOrSetValue('xop', 'application/xop+xml');\r\n  FFileType.AddOrSetValue('xpl', 'application/xproc+xml');\r\n  FFileType.AddOrSetValue('xslt', 'application/xslt+xml');\r\n  FFileType.AddOrSetValue('xspf', 'application/xspf+xml');\r\n  FFileType.AddOrSetValue('mxml', 'application/xv+xml');\r\n  FFileType.AddOrSetValue('xhvml', 'application/xv+xml');\r\n  FFileType.AddOrSetValue('xvml', 'application/xv+xml');\r\n  FFileType.AddOrSetValue('xvm', 'application/xv+xml');\r\n  FFileType.AddOrSetValue('yang', 'application/yang');\r\n  FFileType.AddOrSetValue('yin', 'application/yin+xml');\r\n  FFileType.AddOrSetValue('zip', 'application/zip');\r\n  FFileType.AddOrSetValue('adp', 'audio/adpcm');\r\n  FFileType.AddOrSetValue('au', 'audio/basic');\r\n  FFileType.AddOrSetValue('snd', 'audio/basic');\r\n  FFileType.AddOrSetValue('mid', 'audio/midi');\r\n  FFileType.AddOrSetValue('midi', 'audio/midi');\r\n  FFileType.AddOrSetValue('kar', 'audio/midi');\r\n  FFileType.AddOrSetValue('rmi', 'audio/midi');\r\n  FFileType.AddOrSetValue('mp4a', 'audio/mp4');\r\n  FFileType.AddOrSetValue('mpga', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('mp2', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('mp2a', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('mp3', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('m2a', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('m3a', 'audio/mpeg');\r\n  FFileType.AddOrSetValue('oga', 'audio/ogg');\r\n  FFileType.AddOrSetValue('ogg', 'audio/ogg');\r\n  FFileType.AddOrSetValue('spx', 'audio/ogg');\r\n  FFileType.AddOrSetValue('s3m', 'audio/s3m');\r\n  FFileType.AddOrSetValue('sil', 'audio/silk');\r\n  FFileType.AddOrSetValue('uva', 'audio/vnd.dece.audio');\r\n  FFileType.AddOrSetValue('uvva', 'audio/vnd.dece.audio');\r\n  FFileType.AddOrSetValue('eol', 'audio/vnd.digital-winds');\r\n  FFileType.AddOrSetValue('dra', 'audio/vnd.dra');\r\n  FFileType.AddOrSetValue('dts', 'audio/vnd.dts');\r\n  FFileType.AddOrSetValue('dtshd', 'audio/vnd.dts.hd');\r\n  FFileType.AddOrSetValue('lvp', 'audio/vnd.lucent.voice');\r\n  FFileType.AddOrSetValue('pya', 'audio/vnd.ms-playready.media.pya');\r\n  FFileType.AddOrSetValue('ecelp4800', 'audio/vnd.nuera.ecelp4800');\r\n  FFileType.AddOrSetValue('ecelp7470', 'audio/vnd.nuera.ecelp7470');\r\n  FFileType.AddOrSetValue('ecelp9600', 'audio/vnd.nuera.ecelp9600');\r\n  FFileType.AddOrSetValue('rip', 'audio/vnd.rip');\r\n  FFileType.AddOrSetValue('weba', 'audio/webm');\r\n  FFileType.AddOrSetValue('aac', 'audio/x-aac');\r\n  FFileType.AddOrSetValue('aif', 'audio/x-aiff');\r\n  FFileType.AddOrSetValue('aiff', 'audio/x-aiff');\r\n  FFileType.AddOrSetValue('aifc', 'audio/x-aiff');\r\n  FFileType.AddOrSetValue('caf', 'audio/x-caf');\r\n  FFileType.AddOrSetValue('flac', 'audio/x-flac');\r\n  FFileType.AddOrSetValue('mka', 'audio/x-matroska');\r\n  FFileType.AddOrSetValue('m3u', 'audio/x-mpegurl');\r\n  FFileType.AddOrSetValue('wax', 'audio/x-ms-wax');\r\n  FFileType.AddOrSetValue('wma', 'audio/x-ms-wma');\r\n  FFileType.AddOrSetValue('ram', 'audio/x-pn-realaudio');\r\n  FFileType.AddOrSetValue('ra', 'audio/x-pn-realaudio');\r\n  FFileType.AddOrSetValue('rmp', 'audio/x-pn-realaudio-plugin');\r\n  FFileType.AddOrSetValue('wav', 'audio/x-wav');\r\n  FFileType.AddOrSetValue('xm', 'audio/xm');\r\n  FFileType.AddOrSetValue('cdx', 'chemical/x-cdx');\r\n  FFileType.AddOrSetValue('cif', 'chemical/x-cif');\r\n  FFileType.AddOrSetValue('cmdf', 'chemical/x-cmdf');\r\n  FFileType.AddOrSetValue('cml', 'chemical/x-cml');\r\n  FFileType.AddOrSetValue('csml', 'chemical/x-csml');\r\n  FFileType.AddOrSetValue('xyz', 'chemical/x-xyz');\r\n  FFileType.AddOrSetValue('bmp', 'image/bmp');\r\n  FFileType.AddOrSetValue('cgm', 'image/cgm');\r\n  FFileType.AddOrSetValue('g3', 'image/g3fax');\r\n  FFileType.AddOrSetValue('gif', 'image/gif');\r\n  FFileType.AddOrSetValue('ief', 'image/ief');\r\n  FFileType.AddOrSetValue('jpeg', 'image/jpeg');\r\n  FFileType.AddOrSetValue('jpg', 'image/jpeg');\r\n  FFileType.AddOrSetValue('jpe', 'image/jpeg');\r\n  FFileType.AddOrSetValue('ktx', 'image/ktx');\r\n  FFileType.AddOrSetValue('png', 'image/png');\r\n  FFileType.AddOrSetValue('btif', 'image/prs.btif');\r\n  FFileType.AddOrSetValue('sgi', 'image/sgi');\r\n  FFileType.AddOrSetValue('svg', 'image/svg+xml');\r\n  FFileType.AddOrSetValue('svgz', 'image/svg+xml');\r\n  FFileType.AddOrSetValue('tiff', 'image/tiff');\r\n  FFileType.AddOrSetValue('tif', 'image/tiff');\r\n  FFileType.AddOrSetValue('psd', 'image/vnd.adobe.photoshop');\r\n  FFileType.AddOrSetValue('uvi', 'image/vnd.dece.graphic');\r\n  FFileType.AddOrSetValue('uvvi', 'image/vnd.dece.graphic');\r\n  FFileType.AddOrSetValue('uvg', 'image/vnd.dece.graphic');\r\n  FFileType.AddOrSetValue('uvvg', 'image/vnd.dece.graphic');\r\n  FFileType.AddOrSetValue('sub', 'image/vnd.dvb.subtitle');\r\n  FFileType.AddOrSetValue('djvu', 'image/vnd.djvu');\r\n  FFileType.AddOrSetValue('djv', 'image/vnd.djvu');\r\n  FFileType.AddOrSetValue('dwg', 'image/vnd.dwg');\r\n  FFileType.AddOrSetValue('dxf', 'image/vnd.dxf');\r\n  FFileType.AddOrSetValue('fbs', 'image/vnd.fastbidsheet');\r\n  FFileType.AddOrSetValue('fpx', 'image/vnd.fpx');\r\n  FFileType.AddOrSetValue('fst', 'image/vnd.fst');\r\n  FFileType.AddOrSetValue('mmr', 'image/vnd.fujixerox.edmics-mmr');\r\n  FFileType.AddOrSetValue('rlc', 'image/vnd.fujixerox.edmics-rlc');\r\n  FFileType.AddOrSetValue('mdi', 'image/vnd.ms-modi');\r\n  FFileType.AddOrSetValue('wdp', 'image/vnd.ms-photo');\r\n  FFileType.AddOrSetValue('npx', 'image/vnd.net-fpx');\r\n  FFileType.AddOrSetValue('wbmp', 'image/vnd.wap.wbmp');\r\n  FFileType.AddOrSetValue('xif', 'image/vnd.xiff');\r\n  FFileType.AddOrSetValue('webp', 'image/webp');\r\n  FFileType.AddOrSetValue('3ds', 'image/x-3ds');\r\n  FFileType.AddOrSetValue('ras', 'image/x-cmu-raster');\r\n  FFileType.AddOrSetValue('cmx', 'image/x-cmx');\r\n  FFileType.AddOrSetValue('fh', 'image/x-freehand');\r\n  FFileType.AddOrSetValue('fhc', 'image/x-freehand');\r\n  FFileType.AddOrSetValue('fh4', 'image/x-freehand');\r\n  FFileType.AddOrSetValue('fh5', 'image/x-freehand');\r\n  FFileType.AddOrSetValue('fh7', 'image/x-freehand');\r\n  FFileType.AddOrSetValue('ico', 'image/x-icon');\r\n  FFileType.AddOrSetValue('sid', 'image/x-mrsid-image');\r\n  FFileType.AddOrSetValue('pcx', 'image/x-pcx');\r\n  FFileType.AddOrSetValue('pic', 'image/x-pict');\r\n  FFileType.AddOrSetValue('pct', 'image/x-pict');\r\n  FFileType.AddOrSetValue('pnm', 'image/x-portable-anymap');\r\n  FFileType.AddOrSetValue('pbm', 'image/x-portable-bitmap');\r\n  FFileType.AddOrSetValue('pgm', 'image/x-portable-graymap');\r\n  FFileType.AddOrSetValue('ppm', 'image/x-portable-pixmap');\r\n  FFileType.AddOrSetValue('rgb', 'image/x-rgb');\r\n  FFileType.AddOrSetValue('tga', 'image/x-tga');\r\n  FFileType.AddOrSetValue('xbm', 'image/x-xbitmap');\r\n  FFileType.AddOrSetValue('xpm', 'image/x-xpixmap');\r\n  FFileType.AddOrSetValue('xwd', 'image/x-xwindowdump');\r\n  FFileType.AddOrSetValue('eml', 'message/rfc822');\r\n  FFileType.AddOrSetValue('mime', 'message/rfc822');\r\n  FFileType.AddOrSetValue('igs', 'model/iges');\r\n  FFileType.AddOrSetValue('iges', 'model/iges');\r\n  FFileType.AddOrSetValue('msh', 'model/mesh');\r\n  FFileType.AddOrSetValue('mesh', 'model/mesh');\r\n  FFileType.AddOrSetValue('silo', 'model/mesh');\r\n  FFileType.AddOrSetValue('dae', 'model/vnd.collada+xml');\r\n  FFileType.AddOrSetValue('dwf', 'model/vnd.dwf');\r\n  FFileType.AddOrSetValue('gdl', 'model/vnd.gdl');\r\n  FFileType.AddOrSetValue('gtw', 'model/vnd.gtw');\r\n  FFileType.AddOrSetValue('mts', 'model/vnd.mts');\r\n  FFileType.AddOrSetValue('vtu', 'model/vnd.vtu');\r\n  FFileType.AddOrSetValue('wrl', 'model/vrml');\r\n  FFileType.AddOrSetValue('vrml', 'model/vrml');\r\n  FFileType.AddOrSetValue('x3db', 'model/x3d+binary');\r\n  FFileType.AddOrSetValue('x3dbz', 'model/x3d+binary');\r\n  FFileType.AddOrSetValue('x3dv', 'model/x3d+vrml');\r\n  FFileType.AddOrSetValue('x3dvz', 'model/x3d+vrml');\r\n  FFileType.AddOrSetValue('x3d', 'model/x3d+xml');\r\n  FFileType.AddOrSetValue('x3dz', 'model/x3d+xml');\r\n  FFileType.AddOrSetValue('appcache', 'text/cache-manifest');\r\n  FFileType.AddOrSetValue('manifest', 'text/cache-manifest');\r\n  FFileType.AddOrSetValue('ics', 'text/calendar');\r\n  FFileType.AddOrSetValue('ifb', 'text/calendar');\r\n  FFileType.AddOrSetValue('cmd', 'text/cmd');\r\n  FFileType.AddOrSetValue('css', 'text/css');\r\n  FFileType.AddOrSetValue('csv', 'text/csv');\r\n  FFileType.AddOrSetValue('html', 'text/html');\r\n  FFileType.AddOrSetValue('htm', 'text/html');\r\n  FFileType.AddOrSetValue('n3', 'text/n3');\r\n  FFileType.AddOrSetValue('txt', 'text/plain');\r\n  FFileType.AddOrSetValue('text', 'text/plain');\r\n  FFileType.AddOrSetValue('conf', 'text/plain');\r\n  FFileType.AddOrSetValue('def', 'text/plain');\r\n  FFileType.AddOrSetValue('list', 'text/plain');\r\n  FFileType.AddOrSetValue('log', 'text/plain');\r\n  FFileType.AddOrSetValue('in', 'text/plain');\r\n  FFileType.AddOrSetValue('dsc', 'text/prs.lines.tag');\r\n  FFileType.AddOrSetValue('rtx', 'text/richtext');\r\n  FFileType.AddOrSetValue('sgml', 'text/sgml');\r\n  FFileType.AddOrSetValue('sgm', 'text/sgml');\r\n  FFileType.AddOrSetValue('tsv', 'text/tab-separated-values');\r\n  FFileType.AddOrSetValue('t', 'text/troff');\r\n  FFileType.AddOrSetValue('tr', 'text/troff');\r\n  FFileType.AddOrSetValue('roff', 'text/troff');\r\n  FFileType.AddOrSetValue('man', 'text/troff');\r\n  FFileType.AddOrSetValue('me', 'text/troff');\r\n  FFileType.AddOrSetValue('ms', 'text/troff');\r\n  FFileType.AddOrSetValue('ttl', 'text/turtle');\r\n  FFileType.AddOrSetValue('uri', 'text/uri-list');\r\n  FFileType.AddOrSetValue('uris', 'text/uri-list');\r\n  FFileType.AddOrSetValue('urls', 'text/uri-list');\r\n  FFileType.AddOrSetValue('vcard', 'text/vcard');\r\n  FFileType.AddOrSetValue('curl', 'text/vnd.curl');\r\n  FFileType.AddOrSetValue('dcurl', 'text/vnd.curl.dcurl');\r\n  FFileType.AddOrSetValue('scurl', 'text/vnd.curl.scurl');\r\n  FFileType.AddOrSetValue('mcurl', 'text/vnd.curl.mcurl');\r\n  FFileType.AddOrSetValue('sub', 'text/vnd.dvb.subtitle');\r\n  FFileType.AddOrSetValue('fly', 'text/vnd.fly');\r\n  FFileType.AddOrSetValue('flx', 'text/vnd.fmi.flexstor');\r\n  FFileType.AddOrSetValue('gv', 'text/vnd.graphviz');\r\n  FFileType.AddOrSetValue('3dml', 'text/vnd.in3d.3dml');\r\n  FFileType.AddOrSetValue('spot', 'text/vnd.in3d.spot');\r\n  FFileType.AddOrSetValue('jad', 'text/vnd.sun.j2me.app-descriptor');\r\n  FFileType.AddOrSetValue('wml', 'text/vnd.wap.wml');\r\n  FFileType.AddOrSetValue('wmls', 'text/vnd.wap.wmlscript');\r\n  FFileType.AddOrSetValue('s', 'text/x-asm');\r\n  FFileType.AddOrSetValue('asm', 'text/x-asm');\r\n  FFileType.AddOrSetValue('c', 'text/x-c');\r\n  FFileType.AddOrSetValue('cc', 'text/x-c');\r\n  FFileType.AddOrSetValue('cxx', 'text/x-c');\r\n  FFileType.AddOrSetValue('cpp', 'text/x-c');\r\n  FFileType.AddOrSetValue('h', 'text/x-c');\r\n  FFileType.AddOrSetValue('hh', 'text/x-c');\r\n  FFileType.AddOrSetValue('dic', 'text/x-c');\r\n  FFileType.AddOrSetValue('f', 'text/x-fortran');\r\n  FFileType.AddOrSetValue('for', 'text/x-fortran');\r\n  FFileType.AddOrSetValue('f77', 'text/x-fortran');\r\n  FFileType.AddOrSetValue('f90', 'text/x-fortran');\r\n  FFileType.AddOrSetValue('java', 'text/x-java-source');\r\n  FFileType.AddOrSetValue('opml', 'text/x-opml');\r\n  FFileType.AddOrSetValue('p', 'text/x-pascal');\r\n  FFileType.AddOrSetValue('pas', 'text/x-pascal');\r\n  FFileType.AddOrSetValue('nfo', 'text/x-nfo');\r\n  FFileType.AddOrSetValue('etx', 'text/x-setext');\r\n  FFileType.AddOrSetValue('sfv', 'text/x-sfv');\r\n  FFileType.AddOrSetValue('uu', 'text/x-uuencode');\r\n  FFileType.AddOrSetValue('vcs', 'text/x-vcalendar');\r\n  FFileType.AddOrSetValue('vcf', 'text/x-vcard');\r\n  FFileType.AddOrSetValue('vcf', 'text/x-yaml');\r\n  FFileType.AddOrSetValue('xml', 'text/xml');\r\n  FFileType.AddOrSetValue('xsl', 'text/xml');\r\n  FFileType.AddOrSetValue('dtd', 'text/xml-dtd');\r\n  FFileType.AddOrSetValue('yaml', 'text/yaml');\r\n  FFileType.AddOrSetValue('3gp', 'video/3gpp');\r\n  FFileType.AddOrSetValue('3g2', 'video/3gpp2');\r\n  FFileType.AddOrSetValue('h261', 'video/h261');\r\n  FFileType.AddOrSetValue('h263', 'video/h263');\r\n  FFileType.AddOrSetValue('h264', 'video/h264');\r\n  FFileType.AddOrSetValue('jpgv', 'video/jpeg');\r\n  FFileType.AddOrSetValue('jpm', 'video/jpm');\r\n  FFileType.AddOrSetValue('jpgm', 'video/jpm');\r\n  FFileType.AddOrSetValue('mj2', 'video/mj2');\r\n  FFileType.AddOrSetValue('mjp2', 'video/mj2');\r\n  FFileType.AddOrSetValue('mp4', 'video/mp4');\r\n  FFileType.AddOrSetValue('mp4v', 'video/mp4');\r\n  FFileType.AddOrSetValue('mpg4', 'video/mp4');\r\n  FFileType.AddOrSetValue('mpeg', 'video/mpeg');\r\n  FFileType.AddOrSetValue('mpg', 'video/mpeg');\r\n  FFileType.AddOrSetValue('mpe', 'video/mpeg');\r\n  FFileType.AddOrSetValue('m1v', 'video/mpeg');\r\n  FFileType.AddOrSetValue('m2v', 'video/mpeg');\r\n  FFileType.AddOrSetValue('ogv', 'video/ogg');\r\n  FFileType.AddOrSetValue('qt', 'video/quicktime');\r\n  FFileType.AddOrSetValue('mov', 'video/quicktime');\r\n  FFileType.AddOrSetValue('uvh', 'video/vnd.dece.hd');\r\n  FFileType.AddOrSetValue('uvvh', 'video/vnd.dece.hd');\r\n  FFileType.AddOrSetValue('uvm', 'video/vnd.dece.mobile');\r\n  FFileType.AddOrSetValue('uvvm', 'video/vnd.dece.mobile');\r\n  FFileType.AddOrSetValue('uvp', 'video/vnd.dece.pd');\r\n  FFileType.AddOrSetValue('uvvp', 'video/vnd.dece.pd');\r\n  FFileType.AddOrSetValue('uvs', 'video/vnd.dece.sd');\r\n  FFileType.AddOrSetValue('uvvs', 'video/vnd.dece.sd');\r\n  FFileType.AddOrSetValue('uvv', 'video/vnd.dece.video');\r\n  FFileType.AddOrSetValue('uvvv', 'video/vnd.dece.video');\r\n  FFileType.AddOrSetValue('dvb', 'video/vnd.dvb.file');\r\n  FFileType.AddOrSetValue('fvt', 'video/vnd.fvt');\r\n  FFileType.AddOrSetValue('mxu', 'video/vnd.mpegurl');\r\n  FFileType.AddOrSetValue('m4u', 'video/vnd.mpegurl');\r\n  FFileType.AddOrSetValue('pyv', 'video/vnd.ms-playready.media.pyv');\r\n  FFileType.AddOrSetValue('uvu', 'video/vnd.uvvu.mp4');\r\n  FFileType.AddOrSetValue('uvvu', 'video/vnd.uvvu.mp4');\r\n  FFileType.AddOrSetValue('viv', 'video/vnd.vivo');\r\n  FFileType.AddOrSetValue('webm', 'video/webm');\r\n  FFileType.AddOrSetValue('f4v', 'video/x-f4v');\r\n  FFileType.AddOrSetValue('fli', 'video/x-fli');\r\n  FFileType.AddOrSetValue('flv', 'video/x-flv');\r\n  FFileType.AddOrSetValue('m4v', 'video/x-m4v');\r\n  FFileType.AddOrSetValue('mkv', 'video/x-matroska');\r\n  FFileType.AddOrSetValue('mk3d', 'video/x-matroska');\r\n  FFileType.AddOrSetValue('mks', 'video/x-matroska');\r\n  FFileType.AddOrSetValue('mng', 'video/x-mng');\r\n  FFileType.AddOrSetValue('asf', 'video/x-ms-asf');\r\n  FFileType.AddOrSetValue('asx', 'video/x-ms-asf');\r\n  FFileType.AddOrSetValue('vob', 'video/x-ms-vob');\r\n  FFileType.AddOrSetValue('wm', 'video/x-ms-wm');\r\n  FFileType.AddOrSetValue('wmv', 'video/x-ms-wmv');\r\n  FFileType.AddOrSetValue('wmx', 'video/x-ms-wmx');\r\n  FFileType.AddOrSetValue('wvx', 'video/x-ms-wvx');\r\n  FFileType.AddOrSetValue('avi', 'video/x-msvideo');\r\n  FFileType.AddOrSetValue('movie', 'video/x-sgi-movie');\r\n  FFileType.AddOrSetValue('smv', 'video/x-smv');\r\n  FFileType.AddOrSetValue('ice', 'x-conference/x-cooltalk');\r\n  {$ENDREGION}\r\nend;\r\n"},{"arquivo":"c:\\fontes\\Curso Horse\\modules\\horse\\tests\\src\\tests\\Tests.Horse.Core.Param.pas","smell":"M\u00E9todo muito longo","linha":25,"trecho":"    function RequiredMessage(const AKey: String): string;\r\n    function ConvertErrorMessage(const AKey, AValue, AType: String): string;\r\n\r\n  public\r\n    [Setup]\r\n    procedure Setup;\r\n\r\n    [TearDown]\r\n    procedure TearDown;\r\n\r\n    [Test]\r\n    procedure ContainsKey;\r\n\r\n    [Test]\r\n    procedure NotContainsKey;\r\n\r\n    [Test]\r\n    procedure ContainsKeyDiferentCase;\r\n\r\n    [Test]\r\n    procedure ContainsValue;\r\n\r\n    [Test]\r\n    procedure NotContainsValue;\r\n\r\n    [Test]\r\n    procedure ToArray;\r\n\r\n    [Test]\r\n    procedure TryGetValueTrue;\r\n\r\n    [Test]\r\n    procedure TryGetValueFalse;\r\n\r\n    [Test]\r\n    procedure TryGetValueDiferentCase;\r\n\r\n    [Test]\r\n    procedure Content;\r\n\r\n    [Test]\r\n    procedure Count;\r\n\r\n    [Test]\r\n    procedure List;\r\n\r\n    [Test]\r\n    procedure Index;\r\n\r\n    [Test]\r\n    procedure IndexNotFound;\r\n\r\n    [Test]\r\n    procedure IndexDiferentCase;\r\n\r\n    [Test]\r\n    procedure AsBoolean;\r\n\r\n    [Test]\r\n    [TestCase('TrueValue1', 'True,true,true')]\r\n    [TestCase('TrueValue2', '1,1,true')]\r\n    [TestCase('FalseValue1', 'False,true,false')]\r\n    [TestCase('FalseValue2', '5,1,false')]\r\n    procedure AsBooleanParam(AParamValue, ATrueValue: string; AResult: Boolean);\r\n\r\n    [Test]\r\n    procedure AsBooleanNotRequired;\r\n\r\n    [Test]\r\n    procedure AsBooleanRequired;\r\n\r\n    [Test]\r\n    procedure AsCurrency;\r\n\r\n    [Test]\r\n    procedure AsCurrencyDecimalSeparator;\r\n\r\n    [Test]\r\n    procedure AsCurrencyNotRequired;\r\n\r\n    [Test]\r\n    procedure AsCurrencyRequired;\r\n\r\n    [Test]\r\n    procedure AsCurrencyErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsDateTime;\r\n\r\n    [Test]\r\n    procedure AsDateTimeRequired;\r\n\r\n    [Test]\r\n    procedure AsDateTimeNotRequired;\r\n\r\n    [Test]\r\n    procedure AsDateTimeOnlyData;\r\n\r\n    [Test]\r\n    procedure AsDateTimeChangeFormat;\r\n\r\n    [Test]\r\n    procedure AsDateTimeInvalidFormat;\r\n\r\n    [Test]\r\n    procedure AsDate;\r\n\r\n    [Test]\r\n    procedure AsDateRequired;\r\n\r\n    [Test]\r\n    procedure AsDateNotRequired;\r\n\r\n    [Test]\r\n    procedure AsDateChangeFormat;\r\n\r\n    [Test]\r\n    procedure AsDateInvalidFormat;\r\n\r\n    [Test]\r\n    procedure AsExtended;\r\n\r\n    [Test]\r\n    procedure AsExtendedDecimalSeparator;\r\n\r\n    [Test]\r\n    procedure AsExtendedNotRequired;\r\n\r\n    [Test]\r\n    procedure AsExtendedRequired;\r\n\r\n    [Test]\r\n    procedure AsExtendedErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsFloat;\r\n\r\n    [Test]\r\n    procedure AsFloatDecimalSeparator;\r\n\r\n    [Test]\r\n    procedure AsFloatNotRequired;\r\n\r\n    [Test]\r\n    procedure AsFloatRequired;\r\n\r\n    [Test]\r\n    procedure AsFloatErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsInteger;\r\n\r\n    [Test]\r\n    procedure AsIntegerNotRequired;\r\n\r\n    [Test]\r\n    procedure AsIntegerRequired;\r\n\r\n    [Test]\r\n    procedure AsIntegerErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsInt64;\r\n\r\n    [Test]\r\n    procedure AsInt64NotRequired;\r\n\r\n    [Test]\r\n    procedure AsInt64Required;\r\n\r\n    [Test]\r\n    procedure AsInt64ErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsISO8601DateTime;\r\n\r\n    [Test]\r\n    procedure AsISO8601DateTimeOnlyData;\r\n\r\n    [Test]\r\n    procedure AsISO8601DateTimeNotRequired;\r\n\r\n    [Test]\r\n    procedure AsISO8601DateTimeRequired;\r\n\r\n    [Test]\r\n    procedure AsISO8601DateTimeErrorFormat;\r\n\r\n    [Test]\r\n    procedure AsStream;\r\n\r\n    [Test]\r\n    procedure AsStreamNotFoundNotRequired;\r\n\r\n    [Test]\r\n    procedure AsStreamNotFoundRequired;\r\n\r\n    [Test]\r\n    procedure AsStreamSaveToFile;\r\n\r\n    [Test]\r\n    procedure AsStreamNotFoundSaveToFile;\r\n\r\n    [Test]\r\n    procedure AsString;\r\n\r\n    [Test]\r\n    procedure AsStringRequired;\r\n\r\n    [Test]\r\n    procedure AsStringNotRequired;\r\n\r\n    [Test]\r\n    procedure AsStringDiferentCase;\r\n\r\n    [Test]\r\n    procedure AsTime;\r\n\r\n    [Test]\r\n    procedure AsTimeRequired;\r\n\r\n    [Test]\r\n    procedure AsTimeNotRequired;\r\n\r\n    [Test]\r\n    procedure AsTimeChangeFormat;\r\n\r\n    [Test]\r\n    procedure AsTimeInvalidFormat;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\lerjasonparagrid\\Model\\uModelJSON.pas","smell":"M\u00E9todo muito longo","linha":57,"trecho":"class procedure TJSONModel.CarregarJSONArrayGenerico(\r\n  const Caminho: string;\r\n  Pagina, LinhasPorPagina: Integer;\r\n  DataSet: TClientDataSet;\r\n  TreeView: TTreeView;\r\n  out Total: Integer;\r\n  ProgressBar: TProgressBar = nil);\r\nvar\r\n  JSONStr: string;\r\n  JSONValue: TJSONValue;\r\n  JSONArray: TJSONArray;\r\n  Campos: TDictionary<string, TFieldType>;\r\n  ListaCampos: TArray<string>;\r\n  Campo: string;\r\n  Pair: TJSONPair;\r\n  DummyInt: Integer;\r\n  i, j, StartIdx, EndIdx: Integer;\r\n  Obj: TJSONObject;\r\n  Fld: TField;\r\n  Objeto: TJSONObject;\r\n  RootNode, Sub: TTreeNode;\r\nbegin\r\n  JSONStr := TFile.ReadAllText(Caminho, TEncoding.UTF8);\r\n  JSONStr := CorrigirJSONSimples(JSONStr);\r\n  JSONValue := TJSONObject.ParseJSONValue(JSONStr);\r\n\r\n  if not Assigned(JSONValue) then\r\n    raise Exception.Create('Conte\u00FAdo JSON inv\u00E1lido.');\r\n\r\n  if JSONValue is TJSONArray then\r\n    JSONArray := TJSONArray(JSONValue)\r\n  else if JSONValue is TJSONObject then\r\n  begin\r\n    JSONArray := TJSONArray.Create;\r\n    JSONArray.AddElement(JSONValue); // transfere a posse\r\n  end\r\n  else\r\n    raise Exception.Create('JSON n\u00E3o \u00E9 um array ou objeto.');\r\n\r\n  Total := JSONArray.Count;\r\n  if Total = 0 then Exit;\r\n\r\n  Campos := TDictionary<string, TFieldType>.Create;\r\n  try\r\n    for i := 0 to JSONArray.Count - 1 do\r\n    begin\r\n      if JSONArray.Items[i] is TJSONObject then\r\n      begin\r\n        Obj := JSONArray.Items[i] as TJSONObject;\r\n        for j := 0 to Obj.Count - 1 do\r\n        begin\r\n          Pair := Obj.Pairs[j];\r\n          Campo := Pair.JsonString.Value;\r\n          if not Campos.ContainsKey(Campo) then\r\n          begin\r\n            if TryStrToInt(Pair.JsonValue.Value, DummyInt) then\r\n              Campos.Add(Campo, ftInteger)\r\n            else if SameText(Pair.JsonValue.Value, 'true') or SameText(Pair.JsonValue.Value, 'false') then\r\n              Campos.Add(Campo, ftBoolean)\r\n            else\r\n              Campos.Add(Campo, ftString);\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit1.pas","smell":"Uso de with","linha":67,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit1.pas","smell":"Uso de with","linha":90,"trecho":"with PrismControl.AsMainMenu do  //or in SideMenu use asSideMenu"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit_D2Bridge_Server_Console.pas","smell":"M\u00E9todo muito longo","linha":231,"trecho":"class procedure TD2BridgeServerConsole.Run;\r\nbegin\r\n D2BridgeServerController:= TLojaWebAppGlobal.Create(nil);\r\n \r\n //App Information\r\n {\r\n D2BridgeServerController.ServerAppTitle:= 'My App D2Bridge';\r\n D2BridgeServerController.ServerAppDescription:= 'My App Descrition';\r\n D2BridgeServerController.ServerAppAuthor:= 'Talis Jonatas Gomes';\r\n }\r\n  \r\n vServerPort:= D2BridgeServerController.Prism.INIConfig.ServerPort(8888);\r\n vServerName:= D2BridgeServerController.Prism.INIConfig.ServerName('D2Bridge Server');\r\n\r\n D2BridgeServerController.APPName:= 'Loja';\r\n //D2BridgeServerController.APPDescription:= 'My D2Bridge Web APP';\r\n\r\n //Security\r\n {\r\n D2BridgeServerController.Prism.Options.Security.Enabled:= false; //True Default\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSpamhausList:= false; //Disable Default Blocked Spamhaus list\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('192.168.10.31'); //Block just IP\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('200.200.200.0/24'); //Block CDIR\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSelfDelist:= false; //Disable Delist\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4WhiteList.Add('192.168.0.1'); //Add IP or CDIR to WhiteList\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitNewConnPerIPMin:= 30; //Limite Connections from IP *minute\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitActiveSessionsPerIP:= 50; //Limite Sessions from IP\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.EnableCrawlerUserAgents:= false; //Disable Default Blocked Crawler User Agents\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Add('NewUserAgent'); //Block User Agent\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Delete('MyUserAgent'); //Allow User Agent\r\n }\r\n\r\n D2BridgeServerController.PrimaryFormClass:= TForm_Login;\r\n\r\n //seconds to Send Session to TimeOut and Destroy after Disconnected\r\n //D2BridgeServerController.Prism.Options.SessionTimeOut:= 300;\r\n\r\n //secounds to set Session in Idle\r\n //D2BridgeServerController.Prism.Options.SessionIdleTimeOut:= 0;\r\n\r\n\r\n D2BridgeServerController.Prism.Options.IncludeJQuery:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.DataSetLog:= true;\r\n\r\n D2BridgeServerController.Prism.Options.CoInitialize:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.VCLStyles:= false;\r\n\r\n //D2BridgeServerController.Prism.Options.ShowError500Page:= false;\r\n\r\n //Uncomment to Dual Mode force http just in Debug Mode\r\n //if IsDebuggerPresent then\r\n // D2BridgeServerController.Prism.Options.SSL:= false\r\n //else\r\n //D2BridgeServerController.Prism.Options.SSL:= true;\r\n\r\n D2BridgeServerController.Languages:= [TD2BridgeLang.Portuguese];\r\n\r\n if D2BridgeServerController.Prism.Options.SSL then\r\n begin\r\n  //Cert File\r\n  D2BridgeServerController.Prism.SSLOptions.CertFile:= '';\r\n  //Cert Key Domain File\r\n  D2BridgeServerController.Prism.SSLOptions.KeyFile:= '';\r\n  //Cert Intermediate (case Let\u00EF\u00BF\u00BDs Encrypt)\r\n  D2BridgeServerController.Prism.SSLOptions.RootCertFile:= '';\r\n end;\r\n"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit_Login.pas","smell":"Uso de with","linha":104,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit_Login.pas","smell":"Uso de with","linha":109,"trecho":"with Card do"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit_Login.pas","smell":"Uso de with","linha":115,"trecho":"with BodyItems.Add do"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit_Login.pas","smell":"Uso de with","linha":117,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit_Login.pas","smell":"Uso de with","linha":120,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit_Login.pas","smell":"Uso de with","linha":123,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit_Login.pas","smell":"Uso de with","linha":124,"trecho":"with Col.Items.add do //Example Edit + Button same row and col"},{"arquivo":"c:\\fontes\\Loja\\Loja\\Unit_Login.pas","smell":"Uso de with","linha":130,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\Loja\\Loja2\\Unit1.pas","smell":"Uso de with","linha":64,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\Loja\\Loja2\\Unit1.pas","smell":"Uso de with","linha":87,"trecho":"with PrismControl.AsMainMenu do  //or in SideMenu use asSideMenu"},{"arquivo":"c:\\fontes\\Loja\\Loja2\\Unit_D2Bridge_Server_Console.pas","smell":"M\u00E9todo muito longo","linha":231,"trecho":"class procedure TD2BridgeServerConsole.Run;\r\nbegin\r\n D2BridgeServerController:= TLoja2WebAppGlobal.Create(nil);\r\n \r\n //App Information\r\n {\r\n D2BridgeServerController.ServerAppTitle:= 'My App D2Bridge';\r\n D2BridgeServerController.ServerAppDescription:= 'My App Descrition';\r\n D2BridgeServerController.ServerAppAuthor:= 'Talis Jonatas Gomes';\r\n }\r\n  \r\n vServerPort:= D2BridgeServerController.Prism.INIConfig.ServerPort(8888);\r\n vServerName:= D2BridgeServerController.Prism.INIConfig.ServerName('D2Bridge Server');\r\n\r\n D2BridgeServerController.APPName:= 'Loja2';\r\n //D2BridgeServerController.APPDescription:= 'My D2Bridge Web APP';\r\n\r\n //Security\r\n {\r\n D2BridgeServerController.Prism.Options.Security.Enabled:= false; //True Default\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSpamhausList:= false; //Disable Default Blocked Spamhaus list\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('192.168.10.31'); //Block just IP\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('200.200.200.0/24'); //Block CDIR\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSelfDelist:= false; //Disable Delist\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4WhiteList.Add('192.168.0.1'); //Add IP or CDIR to WhiteList\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitNewConnPerIPMin:= 30; //Limite Connections from IP *minute\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitActiveSessionsPerIP:= 50; //Limite Sessions from IP\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.EnableCrawlerUserAgents:= false; //Disable Default Blocked Crawler User Agents\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Add('NewUserAgent'); //Block User Agent\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Delete('MyUserAgent'); //Allow User Agent\r\n }\r\n\r\n D2BridgeServerController.PrimaryFormClass:= TForm1;\r\n\r\n //seconds to Send Session to TimeOut and Destroy after Disconnected\r\n //D2BridgeServerController.Prism.Options.SessionTimeOut:= 300;\r\n\r\n //secounds to set Session in Idle\r\n //D2BridgeServerController.Prism.Options.SessionIdleTimeOut:= 0;\r\n\r\n\r\n D2BridgeServerController.Prism.Options.IncludeJQuery:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.DataSetLog:= true;\r\n\r\n D2BridgeServerController.Prism.Options.CoInitialize:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.VCLStyles:= false;\r\n\r\n //D2BridgeServerController.Prism.Options.ShowError500Page:= false;\r\n\r\n //Uncomment to Dual Mode force http just in Debug Mode\r\n //if IsDebuggerPresent then\r\n // D2BridgeServerController.Prism.Options.SSL:= false\r\n //else\r\n //D2BridgeServerController.Prism.Options.SSL:= true;\r\n\r\n D2BridgeServerController.Languages:= [TD2BridgeLang.Portuguese];\r\n\r\n if D2BridgeServerController.Prism.Options.SSL then\r\n begin\r\n  //Cert File\r\n  D2BridgeServerController.Prism.SSLOptions.CertFile:= '';\r\n  //Cert Key Domain File\r\n  D2BridgeServerController.Prism.SSLOptions.KeyFile:= '';\r\n  //Cert Intermediate (case Let\u00EF\u00BF\u00BDs Encrypt)\r\n  D2BridgeServerController.Prism.SSLOptions.RootCertFile:= '';\r\n end;\r\n"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit1.pas","smell":"Uso de with","linha":67,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit1.pas","smell":"Uso de with","linha":90,"trecho":"with PrismControl.AsMainMenu do  //or in SideMenu use asSideMenu"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit_D2Bridge_Server.pas","smell":"Uso de with","linha":93,"trecho":"with Button_Options.ClientToScreen(point(0, 1 + Button_Options.Height)) do"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit_D2Bridge_Server.pas","smell":"M\u00E9todo muito longo","linha":97,"trecho":"procedure TForm_D2Bridge_Server.Button_StartClick(Sender: TObject);\r\nbegin\r\n D2BridgeServerController.PrimaryFormClass:= TForm_Login;\r\n\r\n D2BridgeServerController.APPName:= 'Loja3';\r\n //D2BridgeServerController.APPDescription:= 'My D2Bridge Web APP';\r\n\r\n //Security\r\n {\r\n D2BridgeServerController.Prism.Options.Security.Enabled:= false; //True Default\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSpamhausList:= false; //Disable Default Blocked Spamhaus list\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('192.168.10.31'); //Block just IP\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.Add('200.200.200.0/24'); //Block CDIR\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4BlackList.EnableSelfDelist:= false; //Disable Delist\r\n D2BridgeServerController.Prism.Options.Security.IP.IPv4WhiteList.Add('192.168.0.1'); //Add IP or CDIR to WhiteList\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitNewConnPerIPMin:= 30; //Limite Connections from IP *minute\r\n D2BridgeServerController.Prism.Options.Security.IP.IPConnections.LimitActiveSessionsPerIP:= 50; //Limite Sessions from IP\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.EnableCrawlerUserAgents:= false; //Disable Default Blocked Crawler User Agents\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Add('NewUserAgent'); //Block User Agent\r\n D2BridgeServerController.Prism.Options.Security.UserAgent.Delete('MyUserAgent'); //Allow User Agent\r\n }\r\n\r\n //seconds to Send Session to TimeOut and Destroy after Disconnected\r\n //D2BridgeServerController.Prism.Options.SessionTimeOut:= 300;\r\n\r\n //secounds to set Session in Idle\r\n //D2BridgeServerController.Prism.Options.SessionIdleTimeOut:= 0;\r\n\r\n\r\n D2BridgeServerController.Prism.Options.IncludeJQuery:= true;\r\n\r\n D2BridgeServerController.Prism.Options.DataSetLog:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.CoInitialize:= true;\r\n\r\n //D2BridgeServerController.Prism.Options.VCLStyles:= false;\r\n\r\n //D2BridgeServerController.Prism.Options.ShowError500Page:= false;\r\n\r\n //Uncomment to Dual Mode force http just in Debug Mode\r\n //if IsDebuggerPresent then\r\n // D2BridgeServerController.Prism.Options.SSL:= false\r\n //else\r\n //D2BridgeServerController.Prism.Options.SSL:= true;\r\n\r\n D2BridgeServerController.Languages:= [TD2BridgeLang.Portuguese];\r\n\r\n if D2BridgeServerController.Prism.Options.SSL then\r\n begin\r\n  //Cert File\r\n  D2BridgeServerController.Prism.SSLOptions.CertFile:= '';\r\n  //Cert Key Domain File\r\n  D2BridgeServerController.Prism.SSLOptions.KeyFile:= '';\r\n  //Cert Intermediate (case Let\u00EF\u00BF\u00BDs Encrypt)\r\n  D2BridgeServerController.Prism.SSLOptions.RootCertFile:= '';\r\n end;\r\n"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit_Login.pas","smell":"Uso de with","linha":104,"trecho":"with D2Bridge.Items.add do"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit_Login.pas","smell":"Uso de with","linha":109,"trecho":"with Card do"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit_Login.pas","smell":"Uso de with","linha":115,"trecho":"with BodyItems.Add do"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit_Login.pas","smell":"Uso de with","linha":117,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit_Login.pas","smell":"Uso de with","linha":120,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit_Login.pas","smell":"Uso de with","linha":123,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit_Login.pas","smell":"Uso de with","linha":124,"trecho":"with Col.Items.add do //Example Edit + Button same row and col"},{"arquivo":"c:\\fontes\\Loja\\Loja3\\Loja3\\Unit_Login.pas","smell":"Uso de with","linha":130,"trecho":"with Row.Items.Add do"},{"arquivo":"c:\\fontes\\mostrawmi\\Unit1.pas","smell":"M\u00E9todo muito longo","linha":90,"trecho":"procedure TForm1.ListWMIClasses;\r\nvar\r\n  Locator: OLEVariant;\r\n  Services: OLEVariant;\r\n  ClassesEnum: IEnumvariant;\r\n  WMIClass: OLEVariant;\r\n  PropertiesEnum: IEnumvariant;\r\n  Prop: OLEVariant;\r\n  Fetched: Cardinal;\r\n  CurrClass: string;\r\n  ScriptBuilder: TStringList;\r\n  ClassProps: TStringList;\r\n  i: Integer;\r\n  FirebirdType: string;\r\n  DatabasePath, User, Password: string;\r\nbegin\r\n  ScriptBuilder := TStringList.Create;\r\n  ClassProps := TStringList.Create;\r\n  ClassProps.Sorted := True;\r\n  ClassProps.Duplicates := dupIgnore;\r\n\r\n  // Ajuste aqui o caminho, usu\u00E1rio e senha do banco Firebird desejado\r\n  DatabasePath := 'C:\\bancoWMI.fdb';\r\n  User := 'SYSDBA';\r\n  Password := 'masterkey';\r\n\r\n  CoInitialize(nil);\r\n  try\r\n    try\r\n      Locator := CreateOleObject('WbemScripting.SWbemLocator');\r\n      Services := Locator.ConnectServer('.', 'root\\cimv2');\r\n      ClassesEnum := IUnknown(Services.ExecQuery('SELECT * FROM meta_class', 'WQL', 0)._NewEnum) as IEnumVariant;\r\n\r\n      // Cria\u00E7\u00E3o do banco de dados no script\r\n      ScriptBuilder.Add('-- Script gerado para cria\u00E7\u00E3o do banco Firebird e tabelas das classes WMI');\r\n      ScriptBuilder.Add(Format('CREATE DATABASE ''%s'' USER ''%s'' PASSWORD ''%s'';', [DatabasePath, User, Password]));\r\n      ScriptBuilder.Add('');\r\n\r\n      while ClassesEnum.Next(1, WMIClass, Fetched) = 0 do\r\n      begin\r\n        CurrClass := WMIClass.Path_.Class;\r\n\r\n        Memo1.Lines.Add('Classe: ' + CurrClass);\r\n        Memo1.Lines.Add('  Propriedades:');\r\n\r\n        ClassProps.Clear;\r\n\r\n        PropertiesEnum := IUnknown(WMIClass.Properties_._NewEnum) as IEnumVariant;\r\n\r\n        while PropertiesEnum.Next(1, Prop, Fetched) = 0 do\r\n        begin\r\n          FirebirdType := CIMTypeToFirebirdType(Prop.CIMType);\r\n\r\n          ClientDataSet1.Append;\r\n          ClientDataSet1.FieldByName('Tabela').AsString := CurrClass;\r\n          ClientDataSet1.FieldByName('Campos').AsString := Prop.Name;\r\n          ClientDataSet1.FieldByName('Tamanho').AsString := VarToStr(Prop.CIMType);\r\n          ClientDataSet1.Post;\r\n\r\n          Memo1.Lines.Add('    ' + Prop.Name + ' : ' + VarToStr(Prop.CIMType));\r\n\r\n          ClassProps.Add(Format('  \"%s\" %s', [Prop.Name, FirebirdType]));\r\n\r\n          Prop := Unassigned;\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\Nova pasta\\geradorlicitacao\\UPrincipal.pas","smell":"M\u00E9todo muito longo","linha":109,"trecho":"    procedure Button1Click(Sender: TObject);\r\n    procedure Edit1Change(Sender: TObject);\r\n    procedure DBGrid1DblClick(Sender: TObject);\r\n    procedure Edit3Change(Sender: TObject);\r\n    procedure FormShow(Sender: TObject);\r\n    procedure DBGrid1MouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Integer);\r\n    procedure DBGrid1MouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Integer);\r\n    procedure Button2Click(Sender: TObject);\r\n    procedure FormCreate(Sender: TObject);\r\n    procedure DBNavigator1Click(Sender: TObject; Button: TNavigateBtn);\r\n    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;\r\n      DataCol: Integer; Column: TColumn; State: TGridDrawState);\r\n    procedure DBGrid1ColEnter(Sender: TObject);\r\n    procedure FDQuery1ativoGetText(Sender: TField; var Text: string;\r\n      DisplayText: Boolean);\r\n    procedure DBGrid1CellClick(Column: TColumn);\r\n    procedure SpeedButton1Click(Sender: TObject);\r\n    procedure Button3Click(Sender: TObject);\r\n    procedure BtnDesmarcarItensClick(Sender: TObject);\r\n    procedure BtnExrpotarTabelaDeItensClick(Sender: TObject);\r\n    procedure CBCabosClick(Sender: TObject);\r\n    procedure ClientDataSet1FilterRecord(DataSet: TDataSet;\r\n      var Accept: Boolean);\r\n\r\n  private\r\n    { Private declarations }\r\n     ShiftClick: Boolean;\r\n     ShiftStartRow, ShiftEndRow: Integer;\r\n     ListaItens: TStringList;\r\n\r\n     procedure CarregarGrid;\r\n    procedure DesmarcarTodosItens;\r\n    procedure ExpDOC(DataSet: TDataSet; Arq: string);\r\n    procedure FiltrarRegistros;\r\n    procedure CriarDataSet;\r\n  public\r\n    { Public declarations }\r\n    qryFabricantes: TFDQuery;\r\n    numero: integer;\r\n    PartNumbers: TPartNumberInfo; //TStringList;\r\n    procedure ExportToUTF8Text(descritivo: string; outputPath: string);\r\n    procedure CopiarParaAreaDeTransferencia(const texto: string);\r\n    procedure ExportSelectedRecordsToTextFiles;\r\n    procedure SelectRows(StartRow, EndRow: Integer);\r\n    procedure Swap(var A, B: Integer);\r\n    procedure GerarArquivoWord;\r\n    procedure ConcatenateWordFiles(const FilePaths: array of string; const OutputFile: string);\r\n    function FindAllDocxFiles(const DirectoryPath: string): TArray<string>;\r\n    function FiltrarNomeArquivo(const NomeOriginal: string): string;\r\n    procedure GerarAruivoWordunico;\r\n    function ExtrairNomeArquivo(const NomeOriginal: string): string;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\CriadorDeBancoWheelPro\\uPrincipal.pas","smell":"M\u00E9todo muito longo","linha":94,"trecho":"procedure TFrmPrincipal.BtnCriarBaseClick(Sender: TObject);\r\nvar\r\n  Connection: TFDConnection;\r\n  Query: TFDQuery;\r\n  ScriptFile: TStringList;\r\n  OpenDialog: TOpenDialog;\r\n  ScriptText: string;\r\n  ScriptsPath: string;\r\n  DatabaseName: string;\r\nbegin\r\n  ScriptsPath := ExtractFilePath(Application.ExeName) + 'scripts\\'; // Caminho para a pasta \"scripts\" da aplica\u00E7\u00E3o\r\n\r\n  OpenDialog            := TOpenDialog.Create(nil);\r\n  OpenDialog.Filter     := 'Arquivos SQL (*.sql)|*.sql'; // Filtro para selecionar apenas arquivos SQL\r\n  OpenDialog.InitialDir := ScriptsPath; // Define a pasta inicial do OpenDialog como a pasta \"scripts\" da aplica\u00E7\u00E3o\r\n\r\n  if OpenDialog.Execute then\r\n  begin\r\n    Connection := TFDConnection.Create(nil);\r\n    try\r\n      Connection.DriverName := 'MySQL'; // Driver do FireDAC para MySQL\r\n      Connection.Params.Add('Server=localhost'); // Endere\u00E7o do servidor MySQL\r\n      Connection.Params.Add('User_Name=root'); // Usu\u00E1rio do MySQL\r\n      Connection.Params.Add('Password=19741974'); // Senha do MySQL\r\n\r\n      Connection.Connected := True;\r\n\r\n      Query := TFDQuery.Create(nil);\r\n      try\r\n        Query.Connection := Connection;\r\n\r\n        ScriptFile := TStringList.Create;\r\n        try\r\n          ScriptFile.LoadFromFile(OpenDialog.FileName); // Carrega o script do arquivo selecionado\r\n\r\n          ScriptText := ScriptFile.Text; // Obt\u00E9m o texto do script\r\n\r\n          // Substitui o texto \"fulanorodas2\" pelo valor do TEdit (Edit1.Text)\r\n          ScriptText := StringReplace(ScriptText, 'fulanorodas2', Edit1.Text, [rfReplaceAll]);\r\n\r\n          Query.SQL.Text := ScriptText; // Define o script carregado como texto SQL do Query\r\n\r\n          // Procura o nome do banco de dados dentro do script\r\n          DatabaseName := ExtractDatabaseNameFromScript(ScriptText);\r\n\r\n          if DatabaseName <> '' then\r\n          begin\r\n            // Adiciona informa\u00E7\u00F5es ao Memo1.Text\r\n            Memo1.Lines.Add('Criando o banco de dados: ' + DatabaseName);\r\n\r\n            // Cria o banco de dados com o nome extra\u00EDdo\r\n            Query.SQL.Text := 'CREATE SCHEMA IF NOT EXISTS `' + DatabaseName + '`';\r\n            Query.ExecSQL;\r\n\r\n            Memo1.Lines.Add('Banco de dados criado com sucesso.');\r\n\r\n            // Adiciona informa\u00E7\u00F5es ao Memo1.Text\r\n            Memo1.Lines.Add('Executando o restante do script...');\r\n\r\n            // Executa o restante do script\r\n            Query.SQL.Text := ScriptText;\r\n            Query.ExecSQL;\r\n\r\n            // Adicionar registro \u00E0 tabela de login\r\n            Memo1.Lines.Add('Adicionando o usuario admin \u00E0 tabela de login...');\r\n\r\n            Query.SQL.Text :=\r\n              'INSERT INTO login (usuario, senha, email, tipo, ativo, idcliente) ' +\r\n              'VALUES (:usuario, :senha, :email, :tipo, :ativo, :idcliente)';\r\n            Query.Params.ParamByName('usuario').AsString    := 'admin';\r\n            Query.Params.ParamByName('senha').AsString      := '123';\r\n            Query.Params.ParamByName('email').AsString      := Edit2.Text;\r\n            Query.Params.ParamByName('tipo').AsString       := 'A';\r\n            Query.Params.ParamByName('ativo').AsString      := 'S';\r\n            Query.Params.ParamByName('idcliente').AsInteger := 1;\r\n            Query.ExecSQL;\r\n\r\n            Memo1.Lines.Add('Banco de dados criado e script executado com sucesso: ' + DatabaseName);\r\n\r\n            //se \u00E9 demo temos que adicionar a data do termino do demo na tabela registro\r\n            if cbDemo.Checked then\r\n            begin\r\n\r\n              //id, id_chave, chave, data_inc (now) ,  data_exp now+30, contrasenha, ativado ='S' e serialhd\r\n              Query.SQL.Clear;\r\n              Query.SQL.Text :=\r\n              'INSERT INTO registro (id, id_chave, data_inc, data_exp, contrasenha, ativo, serialhd ) ' +\r\n              'VALUES (:id, :id_chave, :data_inc, :data_exp, :contrasenha, :ativo, :serialhd)';\r\n              Query.Params.ParamByName('id').AsString          := '1';\r\n              Query.Params.ParamByName('id_chave').AsString    := '1';\r\n              Query.Params.ParamByName('data_inc').AsDate      := now;\r\n              Query.Params.ParamByName('data_exp').AsDate      := now+30;\r\n              Query.Params.ParamByName('contrasenha').AsString := 'Conect';\r\n              Query.Params.ParamByName('ativo').AsString       := 'S';\r\n              Query.Params.ParamByName('serialhd').AsString    := '0';\r\n              Query.ExecSQL;\r\n\r\n              Memo1.Lines.Add('Foi criada uma data de expira\u00E7\u00E3o ' + DateToStr(Now+30) + ' , pois o programa foi marcado como Demo');\r\n            end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\DAO\\DAO.Clientes.pas","smell":"M\u00E9todo muito longo","linha":89,"trecho":"function TClientes.AlterarCliente(Cliente: TClientes): Boolean;\r\nbegin\r\n  //Alterar oo cliente do par\u00E2metro acNPJ\r\n  Result:=False;\r\n  qry:=qry.Create(nil);\r\n  qry.Connection := FConn;\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Text:='UPDATE fulanorodas.clientes  ' +\r\n                  'SET                          ' +\r\n                  'idclientes  = :idclientes,   ' +\r\n                  'razao       = :razao,        ' +\r\n                  'cnpj_cpf    = :cnpj_cpf,     ' +\r\n                  'endereco    = :endereco,     ' +\r\n                  'numero      = :numero,       ' +\r\n                  'complemento = :complemento,  ' +\r\n                  'cep         = :cep,          ' +\r\n                  'cidade      = :cidade,       ' +\r\n                  'bairro      = :bairro,       ' +\r\n                  'ativo       = :ativo,        ' +\r\n                  'uf          = :uf            ' +\r\n                  'WHERE                        ' +\r\n                  'idclientes = :CNPJ           ';\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := Cliente.razaosocial;\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := Cliente.cnpj ;\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := Cliente.endereco;\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := Cliente.numero;\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := Cliente.complemento;\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := Cliente.CEP;\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := Cliente.Cidade;\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := Cliente.Bairro;\r\n\r\n     qry.ParamByName('uf').DataType            := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.UF) > 0 then\r\n       UF := Copy(Cliente.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF; //ver como vai ser pois \u00E9 CB\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.ativo) > 0 then\r\n       Ativo := Copy(Cliente.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n    qry.ParamByName('ativo').AsString         := Ativo; //ver como vai ser pois \u00E9 CB\r\n    qry.ParamByName('CNPJ').DataType:= ftString;\r\n    qry.ParamByName('CNPJ').AsString:= Cliente.cnpj;\r\n\r\n    qry.ExecSQL;\r\n\r\n    Result:=True;\r\n\r\n  finally\r\n    qry.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\DAO\\DAO.Clientes.pas","smell":"M\u00E9todo muito longo","linha":238,"trecho":"function TClientes.SalvarCliente(Cliente: TClientes): Boolean;\r\nvar\r\n  Ativo : string;\r\n  UF    : string;\r\nbegin\r\n  Result:= False;\r\n  try\r\n    qry:=TFDQuery.Create(nil);\r\n    qry.Connection := FConn;\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' Clientes '    +\r\n                '(idclientes, ' +\r\n                'razao, '       +\r\n                'cnpj_cpf, '    +\r\n                'endereco, '    +\r\n                'numero, '      +\r\n                'complemento, ' +\r\n                'cep, '         +\r\n                'cidade, '      +\r\n                'bairro, '      +\r\n                'ativo, '       +\r\n                'uf) '          +\r\n                'VALUES ('      +\r\n                ':idclientes, ' +\r\n                ':razao, '      +\r\n                ':cnpj_cpf, '   +\r\n                ':endereco, '   +\r\n                ':numero,  '    +\r\n                ':complemento, '+\r\n                ':cep, '        +\r\n                ':cidade, '     +\r\n                ':bairro, '     +\r\n                ':ativo, '      +\r\n                ':uf)');\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := Cliente.razaosocial;\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := Cliente.cnpj ;\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := Cliente.endereco;\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := Cliente.numero;\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := Cliente.complemento;\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := Cliente.CEP;\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := Cliente.Cidade;\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := Cliente.Bairro;\r\n\r\n     qry.ParamByName('uf').DataType            := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.UF) > 0 then\r\n       UF := Copy(Cliente.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF; //ver como vai ser pois \u00E9 CB\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.ativo) > 0 then\r\n       Ativo := Copy(Cliente.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo; //ver como vai ser pois \u00E9 CB\r\n\r\n     qry.ExecSQL;\r\n\r\n     Result:=True;\r\n\r\n  finally\r\n    qry.Close;\r\n    qry.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\DAO\\Dao.Conexao.pas","smell":"Uso de with","linha":73,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\DAO\\DAO.ConexaoLicencas.pas","smell":"Uso de with","linha":72,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Dao.Conexao.pas","smell":"Uso de with","linha":63,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Encriptografar\\View\\View.Principal.pas","smell":"M\u00E9todo muito longo","linha":75,"trecho":"procedure TFrmPrincipal.BtnEncriptarClick(Sender: TObject);\r\nvar\r\n  IniFile: TIniFile;\r\n  EncryptedServer   : string;\r\n  EncryptedPassword : string;\r\n  EncryptedDataBase : string;\r\n  EncryptedUserName : string;\r\n  EncryptedServerLicencas   : string;\r\n  EncryptedPasswordLicencas : string;\r\n  EncryptedDataBaseLicencas : string;\r\n  EncryptedUserNameLicencas : string;\r\n  Funcoes: TCriptografia;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + 'Server.ini');\r\n  Funcoes:= TCriptografia.Create;\r\n  try\r\n     EncryptedServer   := Funcoes.EncryptString(EdtDadosBancoServer.Text, 123);\r\n     EncryptedPassword := Funcoes.EncryptString(EdtDadosBancoPassword.Text, 123);\r\n     EncryptedDataBase := Funcoes.EncryptString(EdtDadosBancoDataBase.Text,123);\r\n     EncryptedUserName := Funcoes.EncryptString(EdtDadosBancoUserName.Text,123);\r\n\r\n     EncryptedServerLicencas   := Funcoes.EncryptString(EdtDadosLicenasServer.Text,123);\r\n     EncryptedPasswordLicencas := Funcoes.EncryptString(EdtDadosLicencasPassword.Text,123);\r\n     EncryptedDataBaseLicencas := Funcoes.EncryptString(EdtDadosLicenasDataBase.Text,123);\r\n     EncryptedUserNameLicencas := Funcoes.EncryptString(EdtDadosLicencasUserName.Text,123);\r\n\r\n     //Escreve no arquivo ini\r\n     IniFile.WriteString('Banco de Dados', 'Server', EncryptedServer);\r\n     IniFile.WriteString('Banco de Dados', 'Password', EncryptedPassword);\r\n     IniFile.WriteString('Banco de Dados', 'Database', EncryptedDataBase);\r\n     IniFile.WriteString('Banco de Dados', 'User_Name', EncryptedUserName);\r\n\r\n     IniFile.WriteString('BancoLicencas', 'Server',    EncryptedServerLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'Password',  EncryptedPasswordLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'Database',  EncryptedDataBaseLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'User_Name', EncryptedUserNameLicencas);\r\n\r\n     //Preenche os Edits da Aba Encriptada - Banco\r\n     EdtEncryptadosBancoServer.Text   := EncryptedServer;\r\n     EdtEncryptadosBancoPassword.Text := EncryptedPassword;\r\n     EdtEncryptadosBancoDataBase.Text := EncryptedDataBase;\r\n     EdtEncryptadosBancoUserName.Text := EncryptedUserName;\r\n\r\n     //Preenche os Edits da Aba Encriptada - Banco Licen\u00E7as\r\n     EdtEncryptadosBancoLicencasServer.Text   := EncryptedServerLicencas;\r\n     EdtEncryptadosBancoLicencasPassword.Text := EncryptedPasswordLicencas;\r\n     EdtEncryptadosBancoLicencasDataBase.Text := EncryptedDataBaseLicencas;\r\n     EdtEncryptadosBancoLicencasUserName.Text := EncryptedUserNameLicencas;\r\n\r\n     inifile.UpdateFile;\r\n\r\n  finally\r\n    IniFile.Free;\r\n    Funcoes.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Encriptografar\\View\\View.Principal.pas","smell":"M\u00E9todo muito longo","linha":133,"trecho":"procedure TFrmPrincipal.CarregarEdits;\r\nvar\r\n  IniFile: TIniFile;\r\n  EncryptedServer    : string;\r\n  DecryptedServer    : string;\r\n  EncryptedPassword  : string;\r\n  DecryptedPassword  : string;\r\n  EncryptedDataBase  : string;\r\n  DescryptedDataBase : string;\r\n  EncryptedUserName  : string;\r\n  DescryptedUserName : string;\r\n\r\n  EncryptedServerLicencas    : string;\r\n  DecryptedServerLicencas    : string;\r\n  EncryptedPasswordLicencas  : string;\r\n  DecryptedPasswordLicencas  : string;\r\n  EncryptedDataBaseLicencas  : string;\r\n  DescryptedDataBaseLicencas : string;\r\n  EncryptedUserNameLicencas  : string;\r\n  DescryptedUserNameLicencas : string;\r\n\r\n  Funcao: TCriptografia;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + '\\Server.ini');\r\n  Funcao  := TCriptografia.Create;\r\n  try\r\n    EncryptedServer   := IniFile.ReadString('Banco de Dados', 'Server', '');\r\n    EncryptedPassword := IniFile.ReadString('Banco de Dados', 'Password', '');\r\n    EncryptedDataBase := IniFile.ReadString('Banco de Dados', 'Database', '');\r\n    EncryptedUserName := IniFile.ReadString('Banco de Dados', 'User_Name', '');\r\n\r\n    DecryptedServer    := Funcao.DecryptString(EncryptedServer, 123);\r\n    DecryptedPassword  := Funcao.DecryptString(EncryptedPassword, 123);\r\n    DescryptedDataBase := Funcao.DecryptString(EncryptedDataBase, 123);\r\n    DescryptedUserName := Funcao.DecryptString(EncryptedUserName, 123);\r\n\r\n    EncryptedServerLicencas   := IniFile.ReadString('BancoLicencas', 'Server', '');\r\n    EncryptedPasswordLicencas := IniFile.ReadString('BancoLicencas', 'Password', '');\r\n    EncryptedDataBaseLicencas := IniFile.ReadString('BancoLicencas', 'Database', '');\r\n    EncryptedUserNameLicencas := IniFile.ReadString('BancoLicencas', 'User_Name', '');\r\n\r\n    DecryptedServerLicencas    := Funcao.DecryptString(EncryptedServer, 123);\r\n    DecryptedPasswordLicencas  := Funcao.DecryptString(EncryptedPassword, 123);\r\n    DescryptedDataBaseLicencas := Funcao.DecryptString(EncryptedDataBase, 123);\r\n    DescryptedUserNameLicencas := Funcao.DecryptString(EncryptedUserName, 123);\r\n\r\n    // Carregar Edits Aba Banco - GroupBox Banco\r\n    EdtDadosBancoServer.Text   := DecryptedServer;\r\n    EdtDadosBancoPassword.Text := DecryptedPassword;\r\n    EdtDadosBancoDataBase.Text := DescryptedDataBase;\r\n    EdtDadosBancoUserName.Text := DescryptedUserName;\r\n\r\n    //Carregar Edits Aba Dados Encryptados - GroupBox Licen\u00E7as\r\n    EdtEncryptadosBancoLicencasServer.Text   := DecryptedServerLicencas;\r\n    EdtEncryptadosBancoLicencasPassword.Text := DecryptedPasswordLicencas;\r\n    EdtEncryptadosBancoLicencasDataBase.Text := DescryptedDataBaseLicencas;\r\n    EdtEncryptadosBancoLicencasUserName.Text := DescryptedUserNameLicencas;\r\n\r\n  finally\r\n    IniFile.Free;\r\n    Funcao.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Funcoes\\Funcoes.CNPJCPF.pas","smell":"M\u00E9todo muito longo","linha":22,"trecho":"function TCNPJCPF.ValidarCNPJ(const CNPJ: string): Boolean;\r\nvar\r\n  Digito, Soma, i, j: Integer;\r\n  CNPJCalc: string;\r\n  Multiplicador: array[1..14] of Integer;\r\nbegin\r\n  Result := False;\r\n\r\n  // Remove caracteres n\u00E3o num\u00E9ricos do CNPJ\r\n  CNPJCalc := '';\r\n  for i := 1 to Length(CNPJ) do\r\n    if CharInSet(CNPJ[i], ['0'..'9']) then\r\n      CNPJCalc := CNPJCalc + CNPJ[i];\r\n\r\n  // Verifica se o CNPJ possui 14 d\u00EDgitos\r\n  if Length(CNPJCalc) <> 14 then\r\n    Exit;\r\n\r\n  // Verifica se todos os d\u00EDgitos s\u00E3o iguais\r\n  if (CNPJCalc = '00000000000000') or (CNPJCalc = '11111111111111') or\r\n    (CNPJCalc = '22222222222222') or (CNPJCalc = '33333333333333') or\r\n    (CNPJCalc = '44444444444444') or (CNPJCalc = '55555555555555') or\r\n    (CNPJCalc = '66666666666666') or (CNPJCalc = '77777777777777') or\r\n    (CNPJCalc = '88888888888888') or (CNPJCalc = '99999999999999') then\r\n    Exit;\r\n\r\n  // Calcula o primeiro d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 5;\r\n  Multiplicador[2] := 4;\r\n  Multiplicador[3] := 3;\r\n  Multiplicador[4] := 2;\r\n  Multiplicador[5] := 9;\r\n  Multiplicador[6] := 8;\r\n  Multiplicador[7] := 7;\r\n  Multiplicador[8] := 6;\r\n  Multiplicador[9] := 5;\r\n  Multiplicador[10] := 4;\r\n  Multiplicador[11] := 3;\r\n  Multiplicador[12] := 2;\r\n  for i := 1 to 12 do\r\n    Soma := Soma + (StrToInt(CNPJCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CNPJCalc[13]) then\r\n    Exit;\r\n\r\n  // Calcula o segundo d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 6;\r\n  Multiplicador[2] := 5;\r\n  Multiplicador[3] := 4;\r\n  Multiplicador[4] := 3;\r\n  Multiplicador[5] := 2;\r\n  Multiplicador[6] := 9;\r\n  Multiplicador[7] := 8;\r\n  Multiplicador[8] := 7;\r\n  Multiplicador[9] := 6;\r\n  Multiplicador[10] := 5;\r\n  Multiplicador[11] := 4;\r\n  Multiplicador[12] := 3;\r\n  Multiplicador[13] := 2;\r\n  for i := 1 to 13 do\r\n    Soma := Soma + (StrToInt(CNPJCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CNPJCalc[14]) then\r\n    Exit;\r\n\r\n  Result := True;\r\n\r\nend;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Funcoes\\Funcoes.CNPJCPF.pas","smell":"M\u00E9todo muito longo","linha":97,"trecho":"function TCNPJCPF.ValidarCPF(const CPF: string): Boolean;\r\nvar\r\n  Digito, Soma, i, j: Integer;\r\n  CPFCalc: string;\r\n  Multiplicador: array[1..11] of Integer;\r\nbegin\r\n  Result := False;\r\n\r\n  // Remove caracteres n\u00E3o num\u00E9ricos do CPF\r\n  CPFCalc := '';\r\n  for i := 1 to Length(CPF) do\r\n    if CharInSet(CPF[i], ['0'..'9']) then\r\n      CPFCalc := CPFCalc + CPF[i];\r\n\r\n  // Verifica se o CPF possui 11 d\u00EDgitos\r\n  if Length(CPFCalc) <> 11 then\r\n    Exit;\r\n\r\n  // Verifica se todos os d\u00EDgitos s\u00E3o iguais\r\n  if (CPFCalc = '00000000000') or (CPFCalc = '11111111111') or\r\n    (CPFCalc = '22222222222') or (CPFCalc = '33333333333') or\r\n    (CPFCalc = '44444444444') or (CPFCalc = '55555555555') or\r\n    (CPFCalc = '66666666666') or (CPFCalc = '77777777777') or\r\n    (CPFCalc = '88888888888') or (CPFCalc = '99999999999') then\r\n    Exit;\r\n\r\n  // Calcula o primeiro d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 10;\r\n  Multiplicador[2] := 9;\r\n  Multiplicador[3] := 8;\r\n  Multiplicador[4] := 7;\r\n  Multiplicador[5] := 6;\r\n  Multiplicador[6] := 5;\r\n  Multiplicador[7] := 4;\r\n  Multiplicador[8] := 3;\r\n  Multiplicador[9] := 2;\r\n  for i := 1 to 9 do\r\n    Soma := Soma + (StrToInt(CPFCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CPFCalc[10]) then\r\n    Exit;\r\n\r\n  // Calcula o segundo d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 11;\r\n  Multiplicador[2] := 10;\r\n  Multiplicador[3] := 9;\r\n  Multiplicador[4] := 8;\r\n  Multiplicador[5] := 7;\r\n  Multiplicador[6] := 6;\r\n  Multiplicador[7] := 5;\r\n  Multiplicador[8] := 4;\r\n  Multiplicador[9] := 3;\r\n  Multiplicador[10] := 2;\r\n  for i := 1 to 10 do\r\n    Soma := Soma + (StrToInt(CPFCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CPFCalc[11]) then\r\n    Exit;\r\n\r\n  Result := True;\r\n\r\nend;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Funcoes\\Funcoes.EnviarEmail.pas","smell":"M\u00E9todo muito longo","linha":68,"trecho":"      procedure Setativo(const Value: string);\r\n      procedure Setbairro(const Value: string);\r\n      procedure SetCEP(const Value: string);\r\n      procedure Setcidade(const Value: string);\r\n      procedure Setcnpj(const Value: string);\r\n      procedure Setcomplemento(const Value: string);\r\n      procedure Setcontato(const Value: string);\r\n      procedure SetContraSenha(const Value: String);\r\n      procedure SetData_exp(const Value: TDateTime);\r\n      procedure Setdataregistro(const Value: TDatetime);\r\n      procedure Setemail(const Value: string);\r\n      procedure Setendereco(const Value: string);\r\n      procedure Setid_chave(const Value: string);\r\n      procedure Setie(const Value: string);\r\n      procedure Setim(const Value: string);\r\n      procedure SetLinguagem(const Value: string);\r\n      procedure Setnumero(const Value: integer);\r\n      procedure Setrazao(const Value: string);\r\n      procedure Setresponsavel(const Value: string);\r\n      procedure Setserial(const Value: string);\r\n      procedure Setserialhd(const Value: string);\r\n      procedure Settelcontato(const Value: string);\r\n      procedure Settelefone(const Value: string);\r\n      procedure Setuf(const Value: string);\r\n\r\n    public\r\n       property razao       : string read Frazao write Setrazao;\r\n       property cnpj        : string read Fcnpj write Setcnpj;\r\n       property ie          : string read Fie write Setie;\r\n       property im          : string read Fim write Setim;\r\n       property endereco    : string read Fendereco write Setendereco;\r\n       property numero      : integer read Fnumero write Setnumero;\r\n       property complemento : string read Fcomplemento write Setcomplemento;\r\n       property bairro      : string read Fbairro write Setbairro;\r\n       property cidade      : string read Fcidade write Setcidade;\r\n       property uf          : string read Fuf write Setuf;\r\n       property CEP         : string read FCEP write SetCEP;\r\n       property ativo       : string read Fativo write Setativo;\r\n       property responsavel : string read Fresponsavel write Setresponsavel;\r\n       property contato     : string read Fcontato write Setcontato;\r\n       property telcontato  : string read Ftelcontato write Settelcontato;\r\n       property telefone    : string read Ftelefone write Settelefone;\r\n       property email       : string read Femail write Setemail;\r\n       property dataregistro: TDatetime read Fdataregistro write Setdataregistro;\r\n       property Linguagem   : string read FLinguagem write SetLinguagem;\r\n       property serial      : string read Fserial write Setserial;\r\n       property serialhd    : string read Fserialhd write Setserialhd;\r\n       property ContraSenha : String read FContraSenha write SetContraSenha;\r\n       property Data_exp    : TDateTime read FData_exp write SetData_exp;\r\n       property id_chave    : string read Fid_chave write Setid_chave;\r\n       function enviarPedido(aEmail: String): Boolean;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Funcoes\\Funcoes.EnviarPedido.pas","smell":"M\u00E9todo muito longo","linha":74,"trecho":"    procedure SetidCliente(const Value: Integer);\r\n    procedure SetStatusPedido(const Value: Integer);\r\n    procedure SetTotalPedido(const Value: currency);\r\n    procedure Setbairro(const Value: string);\r\n    procedure SetCEP(const Value: string);\r\n    procedure Setcidade(const Value: string);\r\n    procedure Setcnpj(const Value: string);\r\n    procedure Setcomplemento(const Value: string);\r\n    procedure Setcontato(const Value: string);\r\n    procedure Setemail(const Value: string);\r\n    procedure Setendereco(const Value: string);\r\n    procedure Setie(const Value: string);\r\n    procedure Setim(const Value: string);\r\n    procedure Setnumero(const Value: integer);\r\n    procedure Setrazao(const Value: string);\r\n    procedure Setresponsavel(const Value: string);\r\n    procedure Settelcontato(const Value: string);\r\n    procedure Settelefone(const Value: string);\r\n    procedure Setuf(const Value: string);\r\n    procedure SetidPedido(const Value: Integer);\r\n    procedure SetidProduto(const Value: Integer);\r\n    procedure SetPrecoUnitario(const Value: Currency);\r\n    procedure SetQuantidade(const Value: Integer);\r\n    procedure SetTotaldoItem(const Value: Currency);\r\n    procedure SetCelularContato(const Value: String);\r\n    procedure SetEmailContato(const Value: String);\r\n    procedure SetNomeContato(const Value: String);\r\n    procedure SetTelefoneConteto(const Value: String);\r\n    procedure SetLinguagem(const Value: string);\r\n\r\n    public\r\n      //Dados do Pedido\r\n      property IdPedido: Integer read FIdPedido write SetIdPedido;\r\n      property idCliente: Integer read FidCliente write SetidCliente;\r\n      property StatusPedido: Integer read FStatusPedido write SetStatusPedido;\r\n      property TotalPedido: currency read FTotalPedido write SetTotalPedido;\r\n\r\n      //Itens do Pedido\r\n      property idProduto: Integer read FidProduto write SetidProduto;\r\n      property Quantidade: Integer read FQuantidade write SetQuantidade;\r\n      property PrecoUnitario: Currency read FPrecoUnitario write SetPrecoUnitario;\r\n      property TotaldoItem: Currency read FTotaldoItem write SetTotaldoItem;\r\n\r\n      //Dados do cliente\r\n       property razao       : string read Frazao write Setrazao;\r\n       property cnpj        : string read Fcnpj write Setcnpj;\r\n       property ie          : string read Fie write Setie;\r\n       property im          : string read Fim write Setim;\r\n       property endereco    : string read Fendereco write Setendereco;\r\n       property numero      : integer read Fnumero write Setnumero;\r\n       property complemento : string read Fcomplemento write Setcomplemento;\r\n       property bairro      : string read Fbairro write Setbairro;\r\n       property cidade      : string read Fcidade write Setcidade;\r\n       property uf          : string read Fuf write Setuf;\r\n       property CEP         : string read FCEP write SetCEP;\r\n       property responsavel : string read Fresponsavel write Setresponsavel;\r\n       property contato     : string read Fcontato write Setcontato;\r\n       property telcontato  : string read Ftelcontato write Settelcontato;\r\n       property telefone    : string read Ftelefone write Settelefone;\r\n       property email       : string read Femail write Setemail;\r\n       property NomeContato: String read FNomeContato write SetNomeContato;\r\n       property TelefoneConteto: String read FTelefoneConteto write SetTelefoneConteto;\r\n       property CelularContato: String read FCelularContato write SetCelularContato;\r\n       property EmailContato: String read FEmailContato write SetEmailContato;\r\n       property Linguagem   : string read FLinguagem write SetLinguagem;\r\n\r\n      function enviarPedido(aEmail: String): Boolean;\r\n      procedure PrencherDadosDoPedido(aidcliente: Integer;aStatusPedido:Integer;aTotalPedido: Currency);\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Gerar Contra Senha\\UnitGerarContrasenha.pas","smell":"Uso de Application.ProcessMessages em loop","linha":95,"trecho":"Application.ProcessMessages;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Gerar Contra Senha\\UnitGerarContrasenha.pas","smell":"Uso de with","linha":159,"trecho":"with FDQuery1 do;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Gerar Contra Senha\\UnitGerarContrasenha.pas","smell":"M\u00E9todo muito longo","linha":134,"trecho":"procedure TFRMGerarContraSenha.Button1Click(Sender: TObject);\r\nvar\r\n  strsql: string;\r\n  strsql2: string;\r\n  contrasenha: string;\r\n  senhafinal: string;\r\n  i: Integer;\r\nconst\r\n  str = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%?';\r\n  max = 15;\r\nbegin\r\n  if Edit1.Text = '' then\r\n  begin\r\n    ShowMessage('Entre com a chave.');\r\n    Edit1.SetFocus;\r\n  end\r\n  else\r\n  begin\r\n    if EdtData.Text = '' then\r\n    begin\r\n      ShowMessage('Entre com a data de vencimento.');\r\n      EdtData.SetFocus;\r\n    end\r\n    else\r\n    begin\r\n      with FDQuery1 do;\r\n      begin\r\n        strsql := 'select * from registro where chave=' + #39 +\r\n          Edit1.Text + #39;\r\n        strsql := strsql + ' and contrasenha=0';\r\n\r\n        strsql2 :=\r\n          'select razao from chaves,registro where chaves.id_chave= registro.id_chave and registro.chave='\r\n          + #39 + Edit1.Text + #39;\r\n        FDQuery2.SQL.Clear;\r\n        FDQuery2.SQL.Add(strsql2);\r\n        FDQuery2.Open();\r\n        Label6.Caption := FDQuery2.FieldByName('razao').AsString;\r\n\r\n        // ShowMessage(strsql);\r\n        FDQuery1.SQL.Clear;\r\n        FDQuery1.SQL.Add(strsql);\r\n        FDQuery1.Open();\r\n        if (FDQuery1.RecordCount) = 1 then\r\n        begin\r\n          ShowMessage('Chave encontrada');\r\n          // rotina de gerar a contra-senha\r\n          contrasenha := FDQuery1.FieldByName('chave').AsString;\r\n          // ShowMessage(contrasenha);\r\n          // Gerar contra-senha\r\n          Randomize;\r\n          Label3.Caption := '';\r\n          for i := 1 to max do\r\n          begin\r\n            try\r\n              FDConnection1.StartTransaction;\r\n\r\n              FDQuery1.Edit;\r\n              Label3.Caption := Label3.Caption + str[Random(Length(str)) + 1];\r\n              FDQuery1.FieldByName('contrasenha').AsString := contrasenha +\r\n              Label3.Caption;\r\n              senhafinal := contrasenha + Label3.Caption;\r\n\r\n              Memo1.Lines.Clear;\r\n              Memo1.Lines.Add(senhafinal);\r\n\r\n              // Encriptar\r\n              // Memo1.Lines.Add(Crypt('D',senhafinal));\r\n              // fim de encriptar\r\n\r\n              FDQuery1.FieldByName('ativado').AsString := 'S';\r\n              FDQuery1.FieldByName('data_exp').AsDateTime :=\r\n              StrToDateTime(EdtData.Text);\r\n              FDQuery1.Post;\r\n              FDCOnnection1.Commit;\r\n\r\n             Except\r\n             on E: Exception do\r\n             begin\r\n               ShowMessage('Erro ao gravar Contra Senha' + e.Message);\r\n               FDConnection1.Rollback;\r\n               Exit;\r\n             end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Categorias.pas","smell":"M\u00E9todo muito longo","linha":380,"trecho":"class function TModelCategorias.SalvarCategoria(\r\n  aCategoria: TCategorias): Boolean;\r\nvar\r\n  qry             : TFDQuery;\r\n  Ativo           : string;\r\n  LogManager      : TLogManager;\r\n  CurrentDateTime : TDateTime;\r\n  DateTimeStr     : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' fulanorodas.categoria  ' +\r\n                '(idcategorias,          ' +   //1\r\n                'categoria,              ' +   //2\r\n                'ativo,                  ' +   //3\r\n                'datacadastro,           ' +   //4\r\n                'dataalteracao,          ' +   //5\r\n                'dataexclusao            ' +   //6\r\n                ')                       ' +\r\n                'VALUES (                ' +\r\n                ':idcategorias,          ' +   //1 ok\r\n                ':categoria,             ' +   //2 ok\r\n                ':ativo,                 ' +   //3 ok\r\n                ':datacadastro,          ' +   //4 ok\r\n                ':dataalteracao,         ' +   //5 ok\r\n                ':dataexclusao           ' +   //6 ok\r\n                ')                       ');\r\n\r\n     qry.ParamByName('idcategorias').DataType  := ftInteger;            //1\r\n\r\n     qry.ParamByName('categoria').DataType     := ftString;\r\n     qry.ParamByName('categoria').AsString     := aCategoria.categoria; //2\r\n\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString;\r\n     if Length(aCategoria.ativo) > 0 then\r\n       Ativo := Copy(aCategoria.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo;               //3\r\n\r\n     qry.ParamByName('datacadastro').DataType  := ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime:= Now;                 //4\r\n\r\n     qry.ParamByName('dataalteracao').DataType  := ftDateTime;         //5\r\n     qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n     qry.ParamByName('dataexclusao').DataType := ftDateTime;\r\n     qry.ParamByName('dataexclusao').AsDateTime:= aCategoria.dataExclusao; //6\r\n\r\n     //CarregarFGravarLog;\r\n\r\n     if FGravarLogs then\r\n       qry.SQL.SaveToFile('C:\\CategoriasSQL.txt');\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        Result := False;\r\n        ShowMessage('Ocorreu um erro ao salvar a categoria: ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n\r\n        if True then\r\n        begin\r\n          LogManager:= TLogManager.Create;\r\n          try\r\n            CurrentDateTime := Now;\r\n            DateTimeStr     := FormatDateTime('yyyy-mm-dd hh:nn:ss', CurrentDateTime);\r\n            LogManager.AddLog('Classe Model.Categoria - Linha : 460 - Finalizou o Alterar Categoria finalizou qry \u00E0s '+ DateTimeStr);\r\n            LogManager.SaveLogToFile('Log_Model_Categorias.txt');\r\n          finally\r\n            LogManager.Free;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Clientes.pas","smell":"M\u00E9todo muito longo","linha":580,"trecho":"class function TModelCliente.SalvarCliente(aCliente: TClientes): Boolean;\r\nvar\r\n  qry             : TFDQuery;\r\n  Ativo           : string;\r\n  UF              : string;\r\n  LogManager      : TLogManager;\r\n  CurrentDateTime : TDateTime;\r\n  DateTimeStr     : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' fulanorodas.Clientes ' +\r\n                '(idclientes,          ' +   //1\r\n                'razao,                ' +   //2\r\n                'cnpj_cpf,             ' +   //3\r\n                'endereco,             ' +   //4\r\n                'numero,               ' +   //5\r\n                'complemento,          ' +   //6\r\n                'cep,                  ' +   //7\r\n                'cidade,               ' +   //8\r\n                'bairro,               ' +   //9\r\n                'ativo,                ' +   //10\r\n                'uf,                   ' +   //11\r\n                'datacadastro,         ' +   //12\r\n                'dataalteracao,        ' +   //13\r\n               // 'dataexclusao,       ' +   //14\r\n                'idmodelocarro         ' +   //15\r\n                ')                     ' +\r\n                'VALUES (              ' +\r\n                ':idclientes,          ' +   //1 ok\r\n                ':razao,               ' +   //2 ok\r\n                ':cnpj_cpf,            ' +   //3 ok\r\n                ':endereco,            ' +   //4 ok\r\n                ':numero,              ' +   //5 ok\r\n                ':complemento,         ' +   //6 ok\r\n                ':cep,                 ' +   //7 ok\r\n                ':cidade,              ' +   //8 ok\r\n                ':bairro,              ' +   //9 ok\r\n                ':ativo,               ' +   //10 ok\r\n                ':uf,                  ' +   //11 ok\r\n                ':datacadastro,        ' +   //12 ok\r\n                ':dataalteracao,       ' +   //13 ok\r\n              //  ':dataexclusao,        ' + //14 ok\r\n                ':idmodelocarro        ' +   //15 ok\r\n                ')                     ');\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;            //1\r\n\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := aCliente.razaosocial; //2\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := aCliente.cnpj ;       //3\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := aCliente.endereco;    //4\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := aCliente.numero;      //5\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := aCliente.complemento; //6\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := aCliente.CEP;         //7\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := aCliente.Cidade;      //8\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := aCliente.Bairro;      //9\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString;\r\n     if Length(aCliente.ativo) > 0 then\r\n       Ativo := Copy(aCliente.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo;               //10\r\n\r\n     qry.ParamByName('uf').DataType            := ftString;\r\n     if Length(aCliente.UF) > 0 then\r\n       UF := Copy(aCliente.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF;                  //11\r\n\r\n     qry.ParamByName('datacadastro').DataType  := ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime:= Now;                 //12\r\n\r\n     qry.ParamByName('dataalteracao').DataType  := ftDateTime;         //13\r\n     qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n//     qry.ParamByName('dataexclusao').DataType := ftDateTime;\r\n//     qry.ParamByName('dataexclusao').AsDateTime:= aCliente.dataExclusao; //14\r\n\r\n     qry.ParamByName('idmodelocarro').DataType := ftInteger;\r\n     qry.ParamByName('idmodelocarro').AsInteger:= aCliente.Idmodelocarro; //15\r\n\r\n     CarregarFGravarLog;\r\n\r\n     if FGravarLogs then\r\n       qry.SQL.SaveToFile('C:\\ClientesSQL.txt');\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        Result := False;\r\n        ShowMessage('Ocorreu um erro ao salvar o cliente: ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n\r\n        if True then\r\n        begin\r\n          LogManager:= TLogManager.Create;\r\n          try\r\n            CurrentDateTime := Now;\r\n            DateTimeStr     := FormatDateTime('yyyy-mm-dd hh:nn:ss', CurrentDateTime);\r\n            LogManager.AddLog('Classe Model.Clientes - Linha : 629 - Finalizou o Alterar Cliente finalizou qry \u00E0s '+ DateTimeStr);\r\n            LogManager.SaveLogToFile('Log_Model_Clientes.txt');\r\n          finally\r\n            LogManager.Free;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Contatos.pas","smell":"M\u00E9todo muito longo","linha":253,"trecho":"class function TModelContato.SalvarContato(aContato: TContato; aCliente: TClientes): Boolean;\r\nvar\r\n  qry        : TFDQuery;\r\n  Ativo      : string;\r\n  UF         : string;\r\n  LogManager : TLogManager;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n     qry.Close;\r\n     qry.SQL.Clear;\r\n     qry.SQL.Add('INSERT INTO     ' +\r\n                  'idcontatos,     ' +\r\n                  'idcliente,      ' +\r\n                  'telefone,       ' +\r\n                  'celular,        ' +\r\n                  'email,          ' +\r\n                  'datacadastro    ' +\r\n                  'dataalteracao,  ' +\r\n                  'cnpjrevenda,    ' +\r\n                  'ativo,          ' +\r\n                  'nomecontato)    ' +\r\n                  'VALUES(         ' +\r\n                  ':idcontatos,    ' +\r\n                  ':idcliente,     ' +\r\n                  ':telefone,      ' +\r\n                  ':celular,       ' +\r\n                  ':email,         ' +\r\n                  ':datacadastro   ' +\r\n                  ':dataalteracao, ' +\r\n                  ':cnpjrevenda,   ' +\r\n                  ':ativo,         ' +\r\n                  ':nomecontato)   ');\r\n\r\n     qry.ParamByName('idcontatos').DataType      := ftInteger;\r\n     qry.ParamByName('idcliente').DataType       := ftInteger;\r\n     qry.ParamByName('idcliente').AsInteger      := aCliente.idcliente;\r\n     qry.ParamByName('telefone').DataType        := ftString;\r\n     qry.ParamByName('telefone').AsString        := aContato.telefone;\r\n     qry.ParamByName('celular').DataType         := ftString;\r\n     qry.ParamByName('celular').AsString         := aContato.celular;\r\n     qry.ParamByName('email').DataType           := ftString;\r\n     qry.ParamByName('email').AsString           := aContato.email;\r\n     qry.ParamByName('datacadastro').DataType    := ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime  := Now;\r\n     qry.ParamByName('dataalteracao').DataType   := ftDateTime;\r\n     qry.ParamByName('dataalteracao').AsDateTime := Now;\r\n     qry.ParamByName('cnpjrevenda').DataType     := ftString;\r\n     qry.ParamByName('cnpjrevenda').AsString     := aContato.cnpjrevenda;\r\n     qry.ParamByName('ativo').DataType           := ftString;\r\n\r\n     qry.ParamByName('ativo').DataType           := ftString;\r\n     if Length(aContato.ativo) > 0 then\r\n       Ativo := Copy(aContato.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString           := Ativo;\r\n\r\n     qry.ParamByName('ativo').AsString           := aContato.ativo;\r\n\r\n     qry.ParamByName('nomecontato').DataType     := ftString;\r\n     qry.ParamByName('nomecontato').AsString     := aContato.NomeContato;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result:=True;\r\n\r\n  Except\r\n    on E: Exception do\r\n    begin\r\n      Result:= False;\r\n      qry.Connection.Rollback;\r\n      ShowMessage('Houve um erro ao gravar os dados do contato' + E.Message);\r\n      qry.Close;\r\n      qry.Free;\r\n\r\n      if True then\r\n\r\n      LogManager := TLogManager.Create;\r\n      try\r\n        LogManager.SaveLogToFile('Log_Model_Contatos.txt');\r\n        LogManager.AddLog('Saiu na Model.Contatos - SalvarContato: Linha 320: e deu erro ao gravar o contato.');\r\n      finally\r\n        LogManager.Free;\r\n      end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Fabricantes.pas","smell":"M\u00E9todo muito longo","linha":64,"trecho":"class function TModelFabricante.AlterarFabricante(\r\n  aFabricante: TFabricante): Boolean;\r\nvar\r\n   qry: TFDQuery;\r\n   UF: String;\r\n   Ativo: String;\r\nbegin\r\n  Result:=False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Text:='UPDATE FABRICANTES              ' +\r\n                  'SET                             ' +\r\n                  'idfabricantes = :idfabricantes, ' +\r\n                  'razao         = :razao,         ' +\r\n                  'cnpj          = :cnpj,          ' +\r\n                  'endereco      = :endereco,      ' +\r\n                  'numero        = :numero,        ' +\r\n                  'complemento   = :complemento,   ' +\r\n                  'cep           = :cep,           ' +\r\n                  'cidade        = :cidade,        ' +\r\n                  'bairro        = :bairro,        ' +\r\n                  'ativo         = :ativo,         ' +\r\n                  'uf            = :uf,            ' +\r\n                  'datacadastro  = now,            ' +\r\n                  'datalateracao = now,            ' +\r\n                  'WHERE                           ' +\r\n                  'CNPJ          = :CNPJ           ';\r\n\r\n    qry.ParamByName('idfabricantes').DataType   := ftInteger;\r\n    qry.ParamByName('idfabricantes').AsInteger  := aFabricante.idFabricantes;\r\n    qry.ParamByName('razao').DataType           := ftString;\r\n    qry.ParamByName('razao').AsString           := aFabricante.razaosocial;\r\n    qry.ParamByName('cnpj').DataType            := ftString;\r\n    qry.ParamByName('cnpj').AsString            := aFabricante.cnpj ;\r\n    qry.ParamByName('endereco').DataType        := ftString;\r\n    qry.ParamByName('endereco').AsString        := aFabricante.endereco;\r\n    qry.ParamByName('numero').DataType          := ftInteger;\r\n    qry.ParamByName('numero').AsInteger         := aFabricante.numero;\r\n    qry.ParamByName('complemento').DataType     := ftString;\r\n    qry.ParamByName('complemento').AsString     := aFabricante.complemento;\r\n    qry.ParamByName('cep').DataType             := ftString;\r\n    qry.ParamByName('cep').AsString             := aFabricante.CEP;\r\n    qry.ParamByName('cidade').DataType          := ftString;\r\n    qry.ParamByName('cidade').AsString          := aFabricante.Cidade;\r\n    qry.ParamByName('bairro').DataType          := ftString;\r\n    qry.ParamByName('bairro').AsString          := aFabricante.Bairro;\r\n\r\n    qry.ParamByName('uf').DataType              := ftString;\r\n\r\n    if Length(aFabricante.UF) > 0 then\r\n      UF := Copy(aFabricante.UF, 1, 2)\r\n    else\r\n      UF := '';\r\n\r\n    qry.ParamByName('uf').AsString              := UF;\r\n\r\n    qry.ParamByName('ativo').DataType           := ftString;\r\n    if Length(aFabricante.ativo) > 0 then\r\n      Ativo := Copy(aFabricante.ativo, 1, 1)\r\n    else\r\n      Ativo := '';\r\n\r\n    qry.ParamByName('ativo').AsString           := Ativo;\r\n\r\n    qry.ParamByName('dataalteracao').DataType   := ftDatetime;\r\n    qry.ParamByName('dataalteracao').AsDateTime := aFabricante.DataAlteracao;\r\n\r\n    qry.ParamByName('CNPJ').DataType            := ftString;\r\n    qry.ParamByName('CNPJ').AsString            := aFabricante.cnpj;\r\n\r\n    qry.ExecSQL;\r\n    qry.connection.Commit;\r\n\r\n    Result:=True;\r\n\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        ShowMessage('Ocorreu um erro ao tentar atualizar o fabricante : ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n        qry.Free;\r\n      end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Fabricantes.pas","smell":"M\u00E9todo muito longo","linha":306,"trecho":"class function TModelFabricante.SalvarFabricante(\r\n  aFabricante: TFabricante): Boolean;\r\nvar\r\n  qry   : TFDQuery;\r\n  Ativo : string;\r\n  UF    : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '     +\r\n                ' fabricantes '    +\r\n                '(idfabricantes, ' +\r\n                'razao, '          +\r\n                'cnpj, '           +\r\n                'endereco, '       +\r\n                'numero, '         +\r\n                'complemento, '    +\r\n                'cep, '            +\r\n                'cidade, '         +\r\n                'bairro, '         +\r\n                'ativo, '          +\r\n                'datacadastro, '   +\r\n                'dataalteracao, '  +\r\n//                'dataexclusao, '   +\r\n                'uf) '             +\r\n                'VALUES ('         +\r\n                ':idclientes, '    +\r\n                ':razao, '         +\r\n                ':cnpj_cpf, '      +\r\n                ':endereco, '      +\r\n                ':numero,  '       +\r\n                ':complemento, '   +\r\n                ':cep, '           +\r\n                ':cidade, '        +\r\n                ':bairro, '        +\r\n                ':ativo, '         +\r\n                ':datacadastro, '  +\r\n                ':dataalteracao, ' +\r\n//                ':dataexclusao, '  +\r\n                ':uf)');\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := aFabricante.razaosocial;\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := aFabricante.cnpj ;\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := aFabricante.endereco;\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := aFabricante.numero;\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := aFabricante.complemento;\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := aFabricante.CEP;\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := aFabricante.Cidade;\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := aFabricante.Bairro;\r\n\r\n     qry.ParamByName('uf').DataType            := ftString;\r\n     if Length(aFabricante.UF) > 0 then\r\n       UF := Copy(aFabricante.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF;\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString;\r\n     if Length(aFabricante.ativo) > 0 then\r\n       Ativo := Copy(aFabricante.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo;\r\n\r\n     qry.ParamByName('datacadastro').DataType:= ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime:= Now;\r\n\r\n     qry.ParamByName('dataalteracao').DataType:= ftDateTime;\r\n     qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result:=True;\r\n\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        ShowMessage('Ocorreu um erro ao tentar salvar o fabricante : ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n        qry.Free;\r\n      end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Produtos.pas","smell":"M\u00E9todo muito longo","linha":630,"trecho":"class function TModelProduto.SalvarProduto(aProduto: TProduto): Boolean;\r\nvar\r\n  qry             : TFDQuery;\r\n  Ativo           : string;\r\n  UF              : string;\r\n  LogManager      : TLogManager;\r\n  CurrentDateTime : TDateTime;\r\n  DateTimeStr     : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' fulanorodas.Produtos ' +\r\n                '(idprodutos,          ' +   //1\r\n                'produto,              ' +   //2\r\n                'foto,                 ' +   //3\r\n                'preco,                ' +   //4\r\n                'aro,                  ' +   //5\r\n                'idFabricante,         ' +   //6\r\n                'datainclusao,         ' +   //7\r\n                'dataalteracao,        ' +   //8\r\n                'dataexclusao,         ' +   //9\r\n                'ativo,                ' +   //10\r\n                'lancamento,           ' +   //11\r\n                'furacao,              ' +   //12\r\n                'offset_et,            ' +   //13\r\n                'idlinha,              ' +   //14\r\n                'idacabamento          ' +   //15\r\n                ')                     ' +\r\n                'VALUES (              ' +\r\n                ':idprodutos,          ' +   //1 ok\r\n                ':produto,             ' +   //2 ok\r\n                ':foto,                ' +   //3 ok\r\n                ':preco,               ' +   //4 ok\r\n                ':aro,                 ' +   //5 ok\r\n                ':idFabricante,        ' +   //6 ok\r\n                ':datainclusao,        ' +   //7 ok\r\n                ':dataalteracao,       ' +   //8 ok\r\n                ':dataexclusao,        ' +   //9 ok\r\n                ':ativo,               ' +   //10 ok\r\n                ':lancamento,          ' +   //11 ok\r\n                ':furacao,             ' +   //12 ok\r\n                ':offset_et,           ' +   //13 ok\r\n                ':idlinha,             ' +   //14 ok\r\n                ':idacabamento         ' +   //15 ok\r\n                ')                     ');\r\n\r\n     qry.ParamByName('idprodutos').DataType    := ftInteger;               //1\r\n\r\n     qry.ParamByName('produto').DataType         := ftString;\r\n     qry.ParamByName('produto').AsString         := aProduto.produto;      //2\r\n     qry.ParamByName('foto').DataType            := ftStream;\r\n     qry.ParamByName('foto').AsStream            := aProduto.foto;         //3 - Verificar\r\n     qry.ParamByName('preco').DataType           := ftCurrency;\r\n     qry.ParamByName('preco').AsCurrency         := aProduto.preco;        //4\r\n     qry.ParamByName('aro').DataType             := ftInteger;\r\n     qry.ParamByName('aro').AsInteger            := aProduto.aro;          //5\r\n     qry.ParamByName('idfabricante').DataType    := ftInteger;\r\n     qry.ParamByName('idfabricante').AsInteger   := aProduto.idfabricante; //6\r\n     qry.ParamByName('datainclusao').DataType    := ftDateTime;\r\n     qry.ParamByName('datainclusao').AsDateTime  := Now;                   //7\r\n     qry.ParamByName('dataalteracao').DataType   := ftDateTime;\r\n     qry.ParamByName('dataalteracao').AsDateTime := Now;                   //8\r\n     //qry.ParamByName('dataexclusao').DataType    := ftDateTime;\r\n     //qry.ParamByName('dataexclusao').AsDateTime  := Now;                 //9\r\n\r\n     qry.ParamByName('ativo').DataType           := ftString;\r\n     if Length(aProduto.ativo) > 0 then\r\n       Ativo := Copy(aProduto.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString           := Ativo;                 //10\r\n\r\n     qry.ParamByName('lancamento').DataType      := ftString;\r\n     qry.ParamByName('lancamento').AsString      := aProduto.lancamento;   //11\r\n     qry.ParamByName('furacao').DataType         := ftInteger;\r\n     qry.ParamByName('furacao').AsInteger        := aProduto.furacao;      //12\r\n     qry.ParamByName('offset_et').DataType       := ftInteger;\r\n     qry.ParamByName('offset_et').AsInteger      := aProduto.OffsetEt;     //13\r\n     qry.ParamByName('idlinha').DataType         := ftInteger;\r\n     qry.ParamByName('idlinha').AsInteger        := aProduto.idlinha;      //14\r\n     qry.ParamByName('idacabamento').DataType    := ftInteger;\r\n     qry.ParamByName('idacabamento').AsInteger   := aProduto.idacabamento; //15\r\n\r\n     CarregarFGravarLog;\r\n\r\n     if FGravarLogs then\r\n       qry.SQL.SaveToFile('C:\\ProdutosSQL.txt');\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        Result := False;\r\n        ShowMessage('Ocorreu um erro ao salvar o produto: ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n\r\n        if True then\r\n        begin\r\n          LogManager:= TLogManager.Create;\r\n          try\r\n            CurrentDateTime := Now;\r\n            DateTimeStr     := FormatDateTime('yyyy-mm-dd hh:nn:ss', CurrentDateTime);\r\n            LogManager.AddLog('Classe Model.Produtos - Linha : 271 - Finalizou o salvar produto finalizou qry \u00E0s ' + DateTimeStr);\r\n            LogManager.SaveLogToFile('Log_Model_Produtos.txt');\r\n          finally\r\n            LogManager.Free;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":70,"trecho":"      procedure Setativo(const Value: string);\r\n      procedure Setbairro(const Value: string);\r\n      procedure Setcidade(const Value: string);\r\n      procedure Setcnpj(const Value: string);\r\n      procedure Setcomplemento(const Value: string);\r\n      procedure Setemail(const Value: string);\r\n      procedure Setendereco(const Value: string);\r\n      procedure Setnumero(const Value: integer);\r\n      procedure Setrazao(const Value: string);\r\n      procedure Setresponsavel(const Value: string);\r\n      procedure Settelefone(const Value: string);\r\n      procedure Setuf(const Value: string);\r\n      procedure Setdataregistro(const Value: TDatetime);\r\n      procedure SetCEP(const Value: string);\r\n      procedure Setie(const Value: string);\r\n      procedure Setim(const Value: string);\r\n      procedure SetLinguagem(const Value: string);\r\n      procedure Setcontato(const Value: string);\r\n      procedure Settelcontato(const Value: string);\r\n      procedure Setserial(const Value: string);\r\n      function  GetWMIstring(const WMIClass, WMIProperty:string): string;\r\n      procedure SetOnLabel6TextChanged(const Value: TNotifyEvent);\r\n      procedure Setserialhd(const Value: string);\r\n      procedure SetContraSenha(const Value: String);\r\n      procedure SetData_exp(const Value: TDateTime);\r\n    procedure Setid_chave(const Value: string);\r\n    public\r\n      property razao       : string    read Frazao write Setrazao;\r\n      property cnpj        : string    read Fcnpj write Setcnpj;\r\n      property ie          : string    read Fie write Setie;\r\n      property im          : string    read Fim write Setim;\r\n      property endereco    : string    read Fendereco write Setendereco;\r\n      property numero      : integer   read Fnumero write Setnumero;\r\n      property complemento : string    read Fcomplemento write Setcomplemento;\r\n      property bairro      : string    read Fbairro write Setbairro;\r\n      property cidade      : string    read Fcidade write Setcidade;\r\n      property uf          : string    read Fuf write Setuf;\r\n      property CEP         : string    read FCEP write SetCEP;\r\n      property ativo       : string    read Fativo write Setativo;\r\n      property responsavel : string    read Fresponsavel write Setresponsavel;\r\n      property contato     : string    read Fcontato write Setcontato;\r\n      property telcontato  : string    read Ftelcontato write Settelcontato;\r\n      property telefone    : string    read Ftelefone write Settelefone;\r\n      property email       : string    read Femail write Setemail;\r\n      property dataregistro: TDatetime read Fdataregistro write Setdataregistro;\r\n      property Linguagem   : string    read FLinguagem write SetLinguagem;\r\n      property serial      : string    read Fserial write Setserial;  //transferir do projeto antigo para esse\r\n      property serialhd    : string    read Fserialhd write Setserialhd;\r\n      property ContraSenha : String    read FContraSenha write SetContraSenha;\r\n      property Data_exp    : TDateTime read FData_exp write SetData_exp;\r\n      property id_chave    : string    read Fid_chave write Setid_chave;\r\n\r\n      //Verificar se ser\u00E1 necess\u00E1rio criar mais propertys para a tabela Registro\r\n      property OnLabel6TextChanged: TNotifyEvent read FOnLabel6TextChanged write SetOnLabel6TextChanged;\r\n      procedure enviarEmail; //J\u00E1 chama  aqui a grava\u00E7\u00E3o no banco de  licen\u00E7as\r\n      function GerarSerial: string;\r\n      class function validarDados(aRegistro: TModelRegistro ; aLingua: string) : boolean;\r\n      class function GravarNoBancoLicencas(aRegistro : TModelRegistro): Boolean;  //Tabela Chaves\r\n      class function ValidarLicenca(adata: TDateTime; acnpj: string): Boolean;\r\n      class function GravarRegistro(aRegistro: TModelRegistro; achave: String): Boolean;\r\n      class function GravarContraSenha(aRegistro: TModelRegistro): Boolean;\r\n\r\n      constructor create;\r\n      destructor destroy;override;\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Registro.pas","smell":"Uso de with","linha":304,"trecho":"with qry do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":273,"trecho":"function TModelRegistro.GerarSerial: string;\r\nvar\r\n  x:string;\r\n  Y:string;\r\n  z:string;\r\n  data : TDateTime;\r\n  qry, qry2: TFDQuery;\r\n  Registrarfrm: TFrmRegistrar;\r\nbegin\r\n  Result:= '';\r\n  FSWbemLocator := CreateOleObject('WbemScripting.SWbemLocator');\r\n  FWMIService   := FSWbemLocator.ConnectServer('localhost', 'root\\CIMV2', '', '');\r\n  X:=Trim(GetWMIstring('Win32_BIOS','SerialNumber')); //Serial da Bios\r\n  Y:=Trim(GetWMIstring('Win32_PhysicalMedia','SerialNumber')); //Serial do HD\r\n\r\n  //label6.Caption:= x;\r\n  //label4.Caption:= y;\r\n  z:=x+y+(DateToStr(date));\r\n  //label5.Caption:=z;\r\n  Result:= z;\r\n\r\n  qry:= TFDquery.Create(nil);\r\n  qry.Connection  := TConexaoLicencas.CreateConnection;\r\n  try\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('select * from registro');\r\n    qry.SQL.Add('');\r\n\r\n    qry.ExecSQL;\r\n    qry.Connection.Commit;\r\n\r\n    with qry do\r\n\r\n     //FDQuery1.Edit;\r\n     //Desabilitar botao Geral Serial\r\n     //Edit1.Enabled:=False;\r\n     //BtnRegistrar.Enabled:=False;\r\n     //Button1.Enabled:=False;\r\n     //PageControl1.Pages[1].TabVisible := False;\r\n     // fim\r\n\r\n\r\n     qry.FieldByName('chave').AsString      := z;\r\n     qry.FieldByName('Data_inc').AsDateTime := Date;\r\n     Data := date;\r\n     qry.FieldByName('Data_exp').AsDateTime:=Data;\r\n     //ShowMessage(DateToStr(Data+30));\r\n     qry.FieldByName('serialhd').AsString:=y;\r\n\r\n     qry.FieldByName('ID_Chave').AsInteger := qry2.FieldByName('ID_Chave').AsInteger;\r\n\r\n     qry.FieldByName('contrasenha').AsString:='0';\r\n     qry.FieldByName('ativado').AsString:='N';\r\n     qry.Post;\r\n\r\n  finally\r\n     qry.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":354,"trecho":"class function TModelRegistro.GravarContraSenha(\r\n  aRegistro: TModelRegistro): Boolean;\r\nvar\r\n  qry: TFDQuery;\r\nbegin\r\n  Result := False;\r\n  qry:= TFDQuery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  //Checar se a CONTRASENHA Existe se n\u00E3o avisar ao usu\u00E1rio que a Contra Senha est\u00E1 errada e encerrar o programa?\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('select contrasenha from registro');\r\n    qry.SQL.Add(' where contrasenha = :contrasenha');\r\n    qry.ParamByName('contrasenha').DataType := ftString;\r\n    qry.ParamByName('contrasenha').AsString := aRegistro.ContraSenha;\r\n    qry.Open;\r\n\r\n    if qry.RecordCount > 0 then //Encontrou a ContraSenha faz o update\r\n    begin\r\n      qry.Connection.StartTransaction;\r\n      try\r\n        qry.close;\r\n        qry.SQL.Clear;\r\n\r\n        qry.SQL.Text:='UPDATE LICENCAS.REGISTRO      ' +\r\n                      'SET                           ' +\r\n                     // 'ID           = :id,           ' +\r\n                     // 'ID_CHAVE     = :ID_CHAVE,     ' +\r\n                     // 'CHAVE        = :CHAVE,        ' +\r\n                      'DATA_INC     = :DATA_INC,     ' +\r\n                      'DATA_EXP     = :DATA_EXP,     ' +\r\n                      'CONTRASENHA  = :CONTRASENHA,  ' +\r\n                      'ATIVADO      = :ATIVADO,      ' +\r\n                    //  'SERIALHD     = :SERIALHD      ' +\r\n                      'WHERE                         ' +\r\n                      'CONTRASENHA     = :CONTRASENHA      ';\r\n\r\n\r\n        qry.ParamByName('DATA_INC').DataType     := ftDate;\r\n        qry.ParamByName('DATA_INC').AsDateTime   := Now;\r\n        qry.ParamByName('DATA_EXP').DataType     := ftDate;\r\n        qry.ParamByName('DATA_EXP').AsDate       := aRegistro.Data_exp + 30;\r\n        qry.ParamByName('CONTRASENHA').DataType  := ftString;\r\n        qry.ParamByName('CONTRASENHA').AsString  := aRegistro.ContraSenha;\r\n        qry.ParamByName('ATIVADO').DataType      := ftString;\r\n        qry.ParamByName('ATIVADO').AsString      := aRegistro.ativo;\r\n\r\n        qry.ExecSQL;\r\n        qry.Connection.Commit;\r\n\r\n        Result := True;\r\n      Except\r\n      On E: Exception do\r\n        begin\r\n           Showmessage('Erro ao gravar tabela registro!'+ E.Message);\r\n           qry.Connection.Rollback;\r\n           Result := False;\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":426,"trecho":"class function TModelRegistro.GravarNoBancoLicencas(\r\n  aRegistro: TModelRegistro): Boolean;\r\nvar\r\n  qry   : TFDQuery;\r\n  Ativo : string;\r\n  UF    : string;\r\n  idChave : integer;\r\nbegin\r\n  //Testar se a Licen\u00E7a j\u00E1 existe no banco de dados  buscar pelo cnpj  trazer o id e pesquisar na tabela registro\r\n  //Se j\u00E1 existir o cnpj na tabela chaves e estiver aguardando a grava\u00E7\u00E3o da contrasenha na tabela registro o que fazer?\r\n  // Informar o usu\u00E1rio que est\u00E1 aguardando a contrasenha e pular fora?\r\n  qry:= TFDquery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('Select * from chaves');\r\n    qry.SQL.Add(' where cnpj =:cnpj');\r\n    qry.ParamByName('cnpj').DataType := ftString;\r\n    qry.ParamByName('cnpj').AsString := aRegistro.cnpj;\r\n    qry.Open;\r\n\r\n    if qry.RecordCount > 0 then //O registro dos dados do cliente existe na tabela chaves\r\n    begin\r\n      ShowMessage('Registro encontrado');\r\n      idChave:= qry.FieldByName('id_chave').AsInteger;\r\n\r\n      qry.Close;\r\n      qry.SQL.Clear;\r\n      qry.SQL.Add('Select contrasenha from registro');\r\n      qry.SQL.Add(' where id_chave=:id_chave');\r\n      qry.ParamByName('id_chave').DataType  := ftInteger;\r\n      qry.ParamByName('id_chave').AsInteger := idChave;\r\n      qry.Open;\r\n\r\n      if (qry.RecordCount > 0) and (qry.fieldbyname('contrasenha').AsString='') then\r\n      begin\r\n          //Gravar no Banco primeiro registro\r\n          qry:= TFDquery.Create(nil);\r\n          qry.Connection := TConexaoLicencas.CreateConnection;\r\n          qry.Connection.StartTransaction;\r\n          try\r\n            qry.Close;\r\n            qry.SQL.Clear;\r\n            qry.SQL.Add('INSERT INTO      ' +\r\n                        ' licencas.chaves ' +\r\n                        '(id_chave,       ' + //1\r\n                        'razao,           ' + //2\r\n                        'cnpj,            ' + //3\r\n                        'ie,              ' + //4\r\n                        'im,              ' + //5\r\n                        'endereco,        ' + //6\r\n                        'numero,          ' + //7\r\n                        'complemento,     ' + //8\r\n                        'bairro,          ' + //9\r\n                        'cidade,          ' + //10\r\n                        'cep,             ' + //11\r\n                        'uf,              ' + //12\r\n                        'ativo,           ' + //13\r\n                        'contato,         ' + //14\r\n                        'telcontato,      ' + //15\r\n                        'email,           ' + //16\r\n                        'datacadastro,    ' + //17\r\n                        'dataalteracao    ' + //18\r\n                       // 'dataexclusao   ' + //19\r\n                        ')                ' +\r\n                        'VALUES (         ' +\r\n                        ':id_chave,       ' + //1 ok\r\n                        ':razao,          ' + //2 ok\r\n                        ':cnpj,           ' + //3 ok\r\n                        ':ie,             ' + //4 ok\r\n                        ':im,             ' + //5 ok\r\n                        ':endereco,       ' + //6 ok\r\n                        ':numero,         ' + //7 ok\r\n                        ':complemento,    ' + //8 ok\r\n                        ':bairro,         ' + //9 ok\r\n                        ':cidade,         ' + //10 ok\r\n                        ':cep,            ' + //11 ok\r\n                        ':uf,             ' + //12 ok\r\n                        ':ativo,          ' + //13 ok\r\n                        ':contato,        ' + //14\r\n                        ':telcontato,     ' + //15\r\n                        ':email,          ' + //16\r\n                        ':datacadastro,   ' + //17 ok\r\n                        ':dataalteracao   ' + //18 ok\r\n                      //  ':dataexclusao, ' + //19 ok\r\n                        ')                ');\r\n\r\n             qry.ParamByName('id_chave').DataType    := ftInteger;             //1\r\n             qry.ParamByName('razao').DataType       := ftString;\r\n             qry.ParamByName('razao').AsString       := aRegistro.razao;       //2\r\n             qry.ParamByName('cnpj').DataType        := ftString;\r\n             qry.ParamByName('cnpj').AsString        := aRegistro.cnpj ;       //3\r\n             qry.ParamByName('ie').DataType          := ftString;\r\n             qry.ParamByName('ie').AsString          := aRegistro.ie;          //4\r\n             qry.ParamByName('im').DataType          := ftString;\r\n             qry.ParamByName('im').AsString          := aRegistro.im;          //5\r\n             qry.ParamByName('endereco').DataType    := ftString;\r\n             qry.ParamByName('endereco').AsString    := aRegistro.endereco;    //6\r\n             qry.ParamByName('numero').DataType      := ftInteger;\r\n             qry.ParamByName('numero').AsInteger     := aRegistro.numero;      //7\r\n             qry.ParamByName('complemento').DataType := ftString;\r\n             qry.ParamByName('complemento').AsString := aRegistro.complemento; //8\r\n             qry.ParamByName('cep').DataType         := ftString;\r\n             qry.ParamByName('cep').AsString         := aRegistro.CEP;         //9\r\n             qry.ParamByName('cidade').DataType      := ftString;\r\n             qry.ParamByName('cidade').AsString      := aRegistro.Cidade;      //10\r\n             qry.ParamByName('bairro').DataType      := ftString;\r\n             qry.ParamByName('bairro').AsString      := aRegistro.Bairro;      //11\r\n             qry.ParamByName('uf').DataType          := ftString;\r\n             if Length(aRegistro.UF) > 0 then\r\n               UF := Copy(aRegistro.UF, 1, 2)\r\n             else\r\n               UF := '';\r\n\r\n             qry.ParamByName('uf').AsString          := UF;                    //12\r\n\r\n             qry.ParamByName('ativo').DataType       := ftString;\r\n             if Length(aRegistro.ativo) > 0 then\r\n               Ativo := Copy(aRegistro.ativo, 1, 1)\r\n             else\r\n               Ativo := '';\r\n\r\n             qry.ParamByName('ativo').AsString       := Ativo;                 //13\r\n\r\n             qry.ParamByName('contato').DataType     := ftString;\r\n             qry.ParamByName('contato').AsString     := aRegistro.contato;     //14\r\n\r\n             qry.ParamByName('telcontato').DataType     := ftString;\r\n             qry.ParamByName('telcontato').AsString     := aRegistro.telcontato; //15\r\n\r\n             qry.ParamByName('email').DataType     := ftString;\r\n             qry.ParamByName('email').AsString     := aRegistro.email;           //16\r\n\r\n             qry.ParamByName('datacadastro').DataType  := ftDateTime;\r\n             qry.ParamByName('datacadastro').AsDateTime:= Now;                 //17\r\n\r\n             qry.ParamByName('dataalteracao').DataType  := ftDateTime;         //18\r\n             qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n        //     qry.ParamByName('dataexclusao').DataType := ftDateTime;\r\n        //     qry.ParamByName('dataexclusao').AsDateTime:= aCliente.dataExclusao; //19\r\n\r\n             qry.ExecSQL;\r\n             qry.Connection.Commit;\r\n\r\n             Result := True;\r\n          Except\r\n           On E: Exception do\r\n              begin\r\n                if aRegistro.Linguagem='Portugues' then\r\n                  ShowMessage('Erro ao tentar gravar licen\u00E7a!' + E.Message)\r\n                else\r\n                  ShowMessage('Error trying to write license!!' + E.Message);\r\n\r\n                qry.Connection.Rollback;\r\n                qry.Free;\r\n              end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":739,"trecho":"class function TModelRegistro.GravarRegistro(\r\n  aRegistro: TModelRegistro; achave: String): Boolean;\r\nvar\r\n  qry: TFDQuery;\r\n  data: TDateTime;\r\nbegin\r\n  qry:= TFDQuery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n     qry.SQL.Clear;\r\n     qry.SQL.Add('INSERT INTO REGISTRO      ' +\r\n                 '(id,                      ' +\r\n                 'id_chave,                 ' +\r\n                 'chave,                    ' +\r\n                 'data_inc,                 ' +\r\n                 'data_exp,                 ' +\r\n                 'contrasenha,              ' +\r\n                 'ativado,                  ' +\r\n                 'serialhd                  ' +\r\n               //  'WHERE id_chave =:id_chave ' +\r\n                 ')                         ' +\r\n                 'VALUES (                  ' +\r\n                 ':id,                      ' +\r\n                 ':id_chave,                ' +\r\n                 ':chave,                   ' +\r\n                 ':data_inc,                ' +\r\n                 ':data_exp,                ' +\r\n                 ':contrasenha,             ' +\r\n                 ':ativado,                 ' +\r\n                 ':serialhd                 ' +\r\n                 ')                         ');\r\n\r\n     qry.ParamByName('id').DataType :=ftinteger;\r\n     qry.ParamByName('id_chave').DataType:= ftInteger;\r\n\r\n     qry.ParamByName('chave').DataType     := ftString;\r\n     qry.ParamByName('chave').AsString      := aChave;\r\n\r\n     qry.ParamByName('Data_inc').DataType   := ftDateTime;\r\n     qry.ParamByName('Data_inc').AsDateTime := Date;\r\n\r\n     Data := Date;\r\n\r\n     qry.ParamByName('Data_exp').DataType    := ftDateTime;\r\n     qry.ParamByName('Data_exp').AsDateTime  :=Data;\r\n\r\n     //ShowMessage(DateToStr(Data+30));\r\n     qry.ParamByName('serialhd').DataType    := ftDateTime;\r\n     qry.ParamByName('serialhd').AsString    :=aRegistro.serialhd;\r\n\r\n     qry.ParamByName('contrasenha').AsString :='0';\r\n     qry.ParamByName('ativado').AsString     :='N';\r\n\r\n     //Ver como fazer?\r\n     //qry.ParamByName('id_chave').AsInteger := //qry2.FieldByName('ID_Chave').AsInteger;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n  On E: Exception do\r\n    begin\r\n       Showmessage('Erro ao gravar tabela registro!'+ E.Message);\r\n       qry.Connection.Rollback;\r\n       Result := False;\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\Unit1.pas","smell":"Uso de with","linha":106,"trecho":"with FDQuery1 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\Unit1.pas","smell":"Uso de with","linha":136,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\Unit1.pas","smell":"Uso de with","linha":166,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"Uso de with","linha":181,"trecho":"with FDQuery1,FDQuery2 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"Uso de with","linha":220,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"Uso de with","linha":250,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"M\u00E9todo muito longo","linha":306,"trecho":"procedure TFRMGERARSERIAL.Button4Click(Sender: TObject);\r\nvar\r\n    IdSMTP1: TIdSMTP;\r\n    Idmessage: TIdMessage;\r\n    TextoMsg: TidText;\r\n    IdSSL: TIdSSLIOHandlerSocketOpenSSL;\r\n    contatol:string;\r\n    emaill:string;\r\n    telcontatol:string;\r\n    const\r\n    CRFL = #13#10;\r\n\r\nbegin\r\n    IdSMTP1                 := TIdSMTP.create(nil);\r\n    IdSMTP1.ConnectTimeout  := 10000;\r\n    IdSMTP1.ReadTimeout     := 10000;\r\n\r\n    IdMessage               := TIdMessage.create(nil);\r\n    IdMessage.Clear;\r\n    IdMessage.CharSet       := 'iso-8859-1';\r\n    IdMessage.Encoding      := MeMIME;\r\n    IdMessage.ContentType   := 'multipart/related'   ;\r\n    IdMessage.subject       := 'Novo Serial Gerado do cliente: ' +FDQuery2.FieldByName('razao').AsString ;\r\n\r\n    textomsg                := TIdText.Create(IdMessage.MessageParts);\r\n    //textomsg.Body.Text      := 'Se voc\u00EA consegue ler isto ent\u00E3o \u00E9 porque funcionou o teste!';\r\n    contatol    := FDQuery2.FieldByName('contato').AsString;\r\n    emaill      := FDQuery2.FieldByName('email').AsString;\r\n    telcontatol := FDQuery2.FieldByName('telcontato').AsString;\r\n    Memo1.Lines.Add(contatol);\r\n    Memo1.Lines.Add(emaill);\r\n    Memo1.Lines.Add(telcontatol);\r\n    //TextoMsg.Body.Text      :=Memo1.Lines.Text + #13 + 'Serial gerado: '+Label5.Caption;\r\n\r\n    //TextoMsg.Body.Text      :=Memo1.Lines.Text;\r\n    TextoMsg.Body.Add('Chave Gerada: '+Label5.Caption+'<br/>');\r\n    TextoMsg.Body.Add(contatol+'<br/>');\r\n    TextoMsg.Body.Add(emaill+'<br/>');\r\n    TextoMsg.Body.Add(telcontatol+'<br/>');\r\n\r\n\r\n    textomsg.ContentType    := 'text/html';\r\n\r\n    if ((cbtipo.itemindex = 0) or (cbtipo.itemindex = 2)) then\r\n    begin\r\n        // GMAIL e YAHOO\r\n\r\n        if cbtipo.itemindex = 0 then\r\n        begin\r\n            idSMTP1.Host            := 'smtp.gmail.com';\r\n            idSMTP1.Username        := 'delphi.send@gmail.com';\r\n            idSMTP1.Password        := 'delphi.send12345';\r\n        end\r\n        else begin\r\n            idSMTP1.Host            := 'smtp.mail.yahoo.com';\r\n            idSMTP1.Username        := 'email@yahoo.com.br';\r\n            idSMTP1.Password        := 'senha';\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"Uso de with","linha":368,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"Uso de with","linha":418,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\Unitsendemail.pas","smell":"Uso de with","linha":77,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\obtendo numero serial do hd\\Unitsendemail.pas","smell":"Uso de with","linha":126,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\UPrincipal.pas","smell":"M\u00E9todo muito longo","linha":209,"trecho":"    procedure Circle1Gesture(Sender: TObject;\r\n      const EventInfo: TGestureEventInfo; var Handled: Boolean);\r\n    procedure FormCreate(Sender: TObject);\r\n    procedure Circle1Click(Sender: TObject);\r\n    procedure Circle1MouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Circle1MouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Layout1MouseMove(Sender: TObject; Shift: TShiftState; X,\r\n      Y: Single);\r\n    procedure Image4Gesture(Sender: TObject; const EventInfo: TGestureEventInfo;\r\n      var Handled: Boolean);\r\n    procedure Image4MouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Image4MouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Circle1DblClick(Sender: TObject);\r\n    procedure Image4DblClick(Sender: TObject);\r\n    procedure MenuItemFabricantesCategoriasClick(Sender: TObject);\r\n    procedure NewImagemDbClick(Sender: TObject);\r\n    procedure NewImagemMouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure NewImagemGesture(Sender: TObject;\r\n              const EventInfo: TGestureEventInfo;\r\n              var Handled: Boolean);\r\n    procedure NewImagemMouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure FormShow(Sender: TObject);\r\n    procedure BtnCarregarFotoClick(Sender: TObject);\r\n    procedure MenuItemConfiguracoesSistemaClick(Sender: TObject);\r\n    procedure MenuItem16Click(Sender: TObject);\r\n    procedure BtnCopiarFotoClick(Sender: TObject);\r\n    procedure Image4MouseWheel(Sender: TObject; Shift: TShiftState;\r\n      WheelDelta: Integer; var Handled: Boolean);\r\n    procedure TrackBar1Change(Sender: TObject);\r\n    procedure CBMarcasChange(Sender: TObject);\r\n    procedure CBModeloChange(Sender: TObject);\r\n    procedure CBFabricantesChange(Sender: TObject);\r\n    procedure CBCategoriasChange(Sender: TObject);\r\n    procedure CBLinhasChange(Sender: TObject);\r\n    procedure CBProdutosChange(Sender: TObject);\r\n    procedure BtnCopiarRodaClick(Sender: TObject);\r\n    procedure MenuItemClientesDadosClick(Sender: TObject);\r\n    procedure MenuItemClientesVeiculosClick(Sender: TObject);\r\n    procedure MenuItemFabricantesDadosClick(Sender: TObject);\r\n    procedure MenuItemClientesOrcamentosClick(Sender: TObject);\r\n    procedure MenuItemRegistrarClick(Sender: TObject);\r\n    procedure BtnCarregarRodaCalotaClick(Sender: TObject);\r\n    procedure SairExecute(Sender: TObject);\r\n    procedure LogOffExecute(Sender: TObject);\r\n    procedure FormClose(Sender: TObject; var Action: TCloseAction);\r\n    procedure MediaReceiverProfileResourceReceived(const Sender: TObject;\r\n      const AResource: TRemoteResource);\r\n    procedure MediaReceiverManagerRequestManagerPassword(const Sender: TObject;\r\n      const ARemoteIdentifier: string; var Password: string);\r\n    procedure MenuItemFabricanteProdutosClick(Sender: TObject);\r\n    procedure MenuItemFabricantesDeVeiculosClick(Sender: TObject);\r\n    procedure Image5Click(Sender: TObject);\r\n    procedure ImageLogoClick(Sender: TObject);\r\n    procedure MenuItem2Click(Sender: TObject);\r\n    procedure MenuItem3Click(Sender: TObject);\r\n    procedure MenuItem4Click(Sender: TObject);\r\n    procedure MenuItemBackupClick(Sender: TObject);\r\n    procedure Button5Click(Sender: TObject);\r\n\r\n\r\n  private\r\n    { Private declarations }\r\n    MoveObjeto: Boolean;\r\n    OffSet: TPointF;\r\n    NewCircle: TCircle;\r\n    NewImagem: TImage;\r\n    FIdMarcaSelecionada: integer;\r\n    FIdFabricante: integer;\r\n    FIdCategoria: integer;\r\n    FidLinha: integer;\r\n    FMemoryStream: TMemoryStream;\r\n    FBlobStream: TStream;\r\n    FIdProduto: integer;\r\n    FValorTotalOrcamento: Double;\r\n    ProdutoDS: TDataSet;\r\n    qry: TFDQuery;\r\n    FConexao: TFDConnection;\r\n    CurrentDateTime: TDateTime; //Para uso com o Log\r\n    DateTimeStr: string;        //Para uso com o Log\r\n    FArquivoLogo: String; //Nome do Arquivo da Logo a Ser carregado\r\n\r\n    procedure Modo_Edicao(editar: Boolean);\r\n    procedure Modo_Edicao2(editar: Boolean);\r\n    procedure NewImagemMouseWheel(Sender: TObject; Shift: TShiftState;\r\n      WheelDelta: Integer; var Handled: Boolean);\r\n    procedure SetidUsuario(const Value: Integer);\r\n    procedure SaveBitmapToFile(Bitmap: TBitmap; const FileName: string);\r\n    procedure EnviarImagemWhatsApp(const FileName: string);\r\n    procedure EnviarAnexoWhatsApp(const FileName: string);\r\n    function ImageToBase64(const FileName: string): string;\r\n    function DesabilitaEdtWhatsApp:Boolean;\r\n\r\n    function CapturaTela:TBitMap;\r\n\r\n  public\r\n    { Public declarations }\r\n     FidUsuario: Integer;\r\n     FLinguagem: string;\r\n     property idUsuario: Integer read FidUsuario write SetidUsuario;\r\n     procedure CarregarCores;\r\n     procedure CarregarLinguagem;\r\n     procedure CarregarLogo;\r\n     constructor create;\r\n     destructor destroy;override;\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\UPrincipal.pas","smell":"M\u00E9todo muito longo","linha":416,"trecho":"procedure TFrmPrincipal.BtnCopiarRodaClick(Sender: TObject);\r\nbegin\r\n  if MoveObjeto then\r\n    Modo_Edicao(False);\r\n\r\n  if NOT Assigned(NewCircle) then\r\n    begin\r\n      // Create a new TCircle component\r\n      NewCircle := TCircle.Create(Self);\r\n\r\n      // Copy the properties of the original TCircle component\r\n      NewCircle.Position.X := Circle1.Position.X + 50;\r\n      NewCircle.Position.Y := Circle1.Position.Y + 50;\r\n      NewCircle.Width      := Circle1.Width;\r\n      NewCircle.Height     := Circle1.Height;\r\n      NewCircle.Fill.Color := Circle1.Fill.Color;\r\n\r\n      //Criar o TImage dentro do NewCircle\r\n      NewImagem:= TImage.Create(NewCircle);\r\n      NewImagem.Parent:= NewCircle;\r\n      NewImagem.Bitmap.Assign(TImage(Circle1.Children[0]).Bitmap);\r\n      NewImagem.Align:=  TalignLayout.Client;\r\n\r\n      // Eventos\r\n      //NewImagem.OnClick      :=  NewImagemClick;\r\n      NewImagem.OnDblClick   :=  NewImagemDbClick;\r\n      NewImagem.OnGesture    :=  NewImagemGesture;\r\n      NewImagem.OnMouseDown  :=  NewImagemMouseDown;\r\n      NewImagem.OnMouseUp    :=  NewImagemMouseUp;\r\n      NewImagem.OnMouseWheel :=  NewImagemMouseWheel;\r\n\r\n      NewCircle.Parent := Self; //Cria no Formul\u00E1rio Principal\r\n    end\r\n    else //apagar o mesmo ou receber a copia da Matrix Atual\r\n    begin\r\n      //Criar o TImage dentro do NewCircle\r\n      NewImagem.BitMap.Clear($000000);\r\n      NewImagem:= TImage.Create(nil); //NewCircle - original\r\n      NewImagem.Parent:= NewCircle;\r\n      NewImagem.Bitmap.Assign(TImage(Circle1.Children[0]).Bitmap);\r\n      NewImagem.Align:=  TalignLayout.Client;\r\n\r\n      // Copy the events from the original TImage to the new TImage\r\n      //NewImagem.OnClick      :=  NewImagemClick; //Ficou com o clique esquerdo sem fun\u00E7\u00E3o\r\n      NewImagem.OnDblClick   :=  NewImagemDbClick;\r\n      NewImagem.OnGesture    :=  NewImagemGesture;\r\n      NewImagem.OnMouseDown  :=  NewImagemMouseDown;\r\n      NewImagem.OnMouseUp    :=  NewImagemMouseUp;\r\n      NewImagem.OnMouseWheel :=  NewImagemMouseWheel;\r\n\r\n      //Exit;\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\UPrincipal.pas","smell":"Uso de with","linha":1459,"trecho":"With FrmPrincipal do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\UPrincipal.pas","smell":"Uso de with","linha":1480,"trecho":"With FrmPrincipal do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\View\\UCadastroClientes.pas","smell":"M\u00E9todo muito longo","linha":185,"trecho":"    procedure FormShow(Sender: TObject);\r\n    procedure BtnNovoClick(Sender: TObject);\r\n    procedure FormCreate(Sender: TObject);\r\n    procedure BtnPrimeiroClick(Sender: TObject);\r\n    procedure btnAnteriorClick(Sender: TObject);\r\n    procedure BtnProximoClick(Sender: TObject);\r\n    procedure BtnUltimoClick(Sender: TObject);\r\n    procedure BtnAlterarClick(Sender: TObject);\r\n    procedure BtnGravarClick(Sender: TObject);\r\n    procedure CBAtivoExit(Sender: TObject);\r\n    procedure EdtNumeroKeyDown(Sender: TObject; var Key: Word;\r\n      var KeyChar: Char; Shift: TShiftState);\r\n    procedure EdtCnpjKeyDown(Sender: TObject; var Key: Word; var KeyChar: Char;\r\n      Shift: TShiftState);\r\n    procedure EdtCepKeyDown(Sender: TObject; var Key: Word; var KeyChar: Char;\r\n      Shift: TShiftState);\r\n    procedure BtnExcluirClick(Sender: TObject);\r\n    procedure BtnPesquisarClick(Sender: TObject);\r\n    procedure TabItemPesquisaClick(Sender: TObject);\r\n    procedure FormClose(Sender: TObject; var Action: TCloseAction);\r\n    procedure EdtCnpjExit(Sender: TObject);\r\n  private\r\n    { Private declarations }\r\n    FConexao: TFDConnection;\r\n    FCliente: TClientes;\r\n    FContato: TContato;\r\n    PodeGravar: Boolean;\r\n    FUFCliente: string;\r\n    FAtivoCliente: string;\r\n    qry: TFDQuery;\r\n    RegrasDeNegocios: TModelCliente;\r\n    FModelContato: TModelContato;\r\n    FTipo: String;\r\n    FController: TControllerCliente;\r\n    CDS: TClientDataSet;\r\n    FLinguagem: string;\r\n    CurrentDateTime: TDateTime; //Para uso com o Log\r\n    DateTimeStr: string;        //Para uso com o Log\r\n    FGravarLog: Boolean;        //Para uso com o Log\r\n    FHabilitarLogsSistema: string;\r\n    FNextIDContato: Integer;\r\n    FGravacaoSucesso: Boolean;\r\n    procedure DesabilitaBotoes(const BotaoSet:TBotaoSet);\r\n    Procedure PopularGridClientes;\r\n    procedure PreencheDadosEncontradosDoCliente;\r\n    procedure PopularDataSet;\r\n    procedure CarregarConfiguracao;\r\n    procedure PopularContatos;\r\n    function LerSalvarLogsBancoDeDados: Boolean;\r\n    function GravarLogsBancoDeDados: Boolean;\r\n  public\r\n    { Public declarations }\r\n    DataSet: TClientDataSet;\r\n    FSomenteAtivos: string;\r\n    FSemContatos  : string;\r\n    FBtnUltimo    : string;\r\n    Function CriarDataSet(aDadaSet: TClientDataSet): TClientDataSet;\r\n    procedure OnDataSetChange;\r\n    procedure PopularClientes;\r\n    procedure CarregarCores;\r\n    procedure CarregarLinguagem;\r\n    function ProximoIDContato: integer;\r\n\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\View\\UCadastroFabricantes.pas","smell":"M\u00E9todo muito longo","linha":417,"trecho":"procedure TFrmFabricantes.CarregarLinguagem;\r\nvar\r\n  IniFile: TIniFile;\r\n  I: Integer;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + '\\Config.ini');\r\n  try\r\n    FLinguagem :=IniFile.ReadString('Traducao', 'Linguagem', '');\r\n\r\n   if FLinguagem = 'Portuguese' then\r\n   begin\r\n     LblCodCliente.Text      := 'Cod. Fabricante';\r\n     LblRazao.Text           := 'Raz\u00E3o Social / Nome';\r\n     LblCnpj.Text            := 'CNPJ / CPF';\r\n     LblEndereco.Text        := 'Endere\u00E7o';\r\n     LblNumero.Text          := 'N\u00FAmero';\r\n     LblComplemento.Text     := 'Complemento';\r\n     LblCEP.Text             := 'CEP';\r\n     LblCidade.Text          := 'Cidade';\r\n     LblCEP.Text             := 'CEP';\r\n     LblUF.Text              := 'UF';\r\n     LblAtivo.Text           := 'Ativo';\r\n     LblPesquisar.Text       := 'Pesquisar';\r\n     BtnNovo.Text            := '&Novo';\r\n     BtnAlterar.Text         := '&Alterar';\r\n     BtnExcluir.Text         := '&Excluir';\r\n     BtnSalvar.Text          := '&Salvar';\r\n     TabItemCadastro.Text    := 'Cadastro';\r\n     TabItemPesquisa.Text    := 'Pesquisa';\r\n     TabItemContato.Text     := 'Contato';\r\n     lblTitulo.Text          := 'Cadastro do Fabricantes';\r\n     FrmFabricantes.Caption  := 'Cadastro do Fabricantes';\r\n\r\n   end\r\n   else if FLinguagem = 'Ingles' then\r\n   begin\r\n     LblCodCliente.Text      := 'Id. Manufacturer';\r\n     LblRazao.Text           := 'Corporate Name / Name';\r\n     LblCnpj.Text            := 'Tax Identification Number - TIN';\r\n     LblEndereco.Text        := 'Address';\r\n     LblNumero.Text          := 'Number';\r\n     LblComplemento.Text     := 'Complement';\r\n     LblCidade.Text          := 'City';\r\n     LblCEP.Text             := 'Zip Code';\r\n     LblUF.Text              := 'State';\r\n     LblAtivo.Text           := 'Active';\r\n     LblPesquisar.Text       := 'Search';\r\n     BtnNovo.Text            := '&New';\r\n     BtnAlterar.Text         := '&Alter';\r\n     BtnExcluir.Text         := '&Delete';\r\n     BtnSalvar.Text          := '&Save';\r\n     TabItemCadastro.Text    := 'Register';\r\n     TabItemPesquisa.Text    := 'Search';\r\n     TabItemContato.Text     := 'Contact';\r\n     lblTitulo.Text          := 'Manufacturer Registration';\r\n     FrmFabricantes.Caption  := 'Manufacturer Registration';\r\n   end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\View\\URegistrar.pas","smell":"M\u00E9todo muito longo","linha":349,"trecho":"procedure TFrmRegistrar.CarregarLinguagem;\r\nvar\r\n  IniFile: TIniFile;\r\n  I: Integer;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + '\\Config.ini');\r\n  try\r\n    FLinguagem :=IniFile.ReadString('Traducao', 'Linguagem', '');\r\n\r\n   if FLinguagem = 'Portuguese' then\r\n   begin\r\n     lblRazao.Text        := 'Raz\u00E3o Social / Nome';\r\n     lblCnpj_cpf.Text     := 'CNPJ / CPF';\r\n     lblIe.Text           := 'Inscri\u00E7\u00E3o Estadual';\r\n     lblIm.Text           := 'Inscri\u00E7\u00E3o Municipal';\r\n     lblEndereco.Text     := 'Endere\u00E7o';\r\n     lblNumero.Text       := 'N\u00FAmero';\r\n     LblComplemento.Text  := 'Complemento';\r\n     LblBairro.Text       := 'Bairro';\r\n     LblCidade.Text       := 'Cidade';\r\n     LblResponnsavel.Text := 'Nome do respons\u00E1vel pelo registro';\r\n     LblTelefone.Text     := 'Telefone/WhatsApp';\r\n     LblEmail.Text        := 'E-mail';\r\n     BtnRegistrar.Text    := '&Registrar';\r\n     LblTitulo.Text       := 'Registro do Wheel Pro';\r\n     lblCEP.Text          := 'CEP';\r\n     FrmRegistrar.Caption := 'Registro do Wheel Pro';\r\n     TabItem1.Text        := 'Cadastro';\r\n     TabItem2.Text        := 'Gerar senha';\r\n     TabItem3.Text        := 'Enviar Serial';\r\n     TabItem4.Text        := 'Inserir Contra-Senha';\r\n     lblEntreseuCNPJ.Text := 'Entre seu CNPJ';\r\n     lblSeuSerial.Text    := 'Seu Serial';\r\n     lblNumserialHD.Text  := 'O n\u00FAmero serial do seu HD \u00E9:';\r\n     lblseuSErialBios.Text:= 'Seu Serial da Bios \u00E9 :';\r\n     lblContraSenha.Text  := 'Contra - Senha';\r\n   end\r\n   else if FLinguagem = 'Ingles' then\r\n   begin\r\n     lblRazao.Text        := 'Corporate Name / Name';\r\n     lblCnpj_cpf.Text     := 'Tax Identification Number - TIN';\r\n     lblIe.Visible        := False;\r\n     EdtInscricaoEstadual.Visible:= False;\r\n     lblIe.Text           := 'Inscri\u00E7\u00E3o Estadual';\r\n     lblIm.Visible        := False;\r\n     EdtIncricaoMunicipal.Visible:= False;\r\n     lblIm.Text           := 'Inscri\u00E7\u00E3o Municipal';\r\n     lblEndereco.Text     := 'Address';\r\n     lblNumero.Text       := 'Number';\r\n     LblComplemento.Text  := 'Complement';\r\n     LblBairro.Text       := 'Neighborhood';\r\n     LblCidade.Text       := 'City';\r\n     LblResponnsavel.Text := 'Name of person responsible for registration';\r\n     LblTelefone.Text     := 'Phone/WhatsApp';\r\n     LblEmail.Text        := 'E-mail';\r\n     lblCEP.Text          := 'ZIP CODE';\r\n     BtnRegistrar.Text    := '&Register';\r\n     LblTitulo.Text       := 'Wheel Pro registration';\r\n     FrmRegistrar.Caption := 'Wheel Pro registration';\r\n     TabItem1.Text        := 'Register';\r\n     TabItem2.Text        := 'Generate Password';\r\n     TabItem3.Text        := 'Send Serial';\r\n     TabItem4.Text        := 'Enter Password';\r\n     lblEntreseuCNPJ.Text := 'Enter your EIN';\r\n     lblSeuSerial.Text    := 'Your Serial';\r\n     lblNumserialHD.Text  := 'Serial number of your HD is:';\r\n     lblseuSErialBios.Text:= 'Your Bios Serial is:';\r\n     lblContraSenha.Text  := 'Password';\r\n   end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\CriadorDeBancoWheelPro\\uPrincipal.pas","smell":"M\u00E9todo muito longo","linha":94,"trecho":"procedure TFrmPrincipal.BtnCriarBaseClick(Sender: TObject);\r\nvar\r\n  Connection: TFDConnection;\r\n  Query: TFDQuery;\r\n  ScriptFile: TStringList;\r\n  OpenDialog: TOpenDialog;\r\n  ScriptText: string;\r\n  ScriptsPath: string;\r\n  DatabaseName: string;\r\nbegin\r\n  ScriptsPath := ExtractFilePath(Application.ExeName) + 'scripts\\'; // Caminho para a pasta \"scripts\" da aplica\u00E7\u00E3o\r\n\r\n  OpenDialog            := TOpenDialog.Create(nil);\r\n  OpenDialog.Filter     := 'Arquivos SQL (*.sql)|*.sql'; // Filtro para selecionar apenas arquivos SQL\r\n  OpenDialog.InitialDir := ScriptsPath; // Define a pasta inicial do OpenDialog como a pasta \"scripts\" da aplica\u00E7\u00E3o\r\n\r\n  if OpenDialog.Execute then\r\n  begin\r\n    Connection := TFDConnection.Create(nil);\r\n    try\r\n      Connection.DriverName := 'MySQL'; // Driver do FireDAC para MySQL\r\n      Connection.Params.Add('Server=localhost'); // Endere\u00E7o do servidor MySQL\r\n      Connection.Params.Add('User_Name=root'); // Usu\u00E1rio do MySQL\r\n      Connection.Params.Add('Password=19741974'); // Senha do MySQL\r\n\r\n      Connection.Connected := True;\r\n\r\n      Query := TFDQuery.Create(nil);\r\n      try\r\n        Query.Connection := Connection;\r\n\r\n        ScriptFile := TStringList.Create;\r\n        try\r\n          ScriptFile.LoadFromFile(OpenDialog.FileName); // Carrega o script do arquivo selecionado\r\n\r\n          ScriptText := ScriptFile.Text; // Obt\u00E9m o texto do script\r\n\r\n          // Substitui o texto \"fulanorodas2\" pelo valor do TEdit (Edit1.Text)\r\n          ScriptText := StringReplace(ScriptText, 'fulanorodas2', Edit1.Text, [rfReplaceAll]);\r\n\r\n          Query.SQL.Text := ScriptText; // Define o script carregado como texto SQL do Query\r\n\r\n          // Procura o nome do banco de dados dentro do script\r\n          DatabaseName := ExtractDatabaseNameFromScript(ScriptText);\r\n\r\n          if DatabaseName <> '' then\r\n          begin\r\n            // Adiciona informa\u00E7\u00F5es ao Memo1.Text\r\n            Memo1.Lines.Add('Criando o banco de dados: ' + DatabaseName);\r\n\r\n            // Cria o banco de dados com o nome extra\u00EDdo\r\n            Query.SQL.Text := 'CREATE SCHEMA IF NOT EXISTS `' + DatabaseName + '`';\r\n            Query.ExecSQL;\r\n\r\n            Memo1.Lines.Add('Banco de dados criado com sucesso.');\r\n\r\n            // Adiciona informa\u00E7\u00F5es ao Memo1.Text\r\n            Memo1.Lines.Add('Executando o restante do script...');\r\n\r\n            // Executa o restante do script\r\n            Query.SQL.Text := ScriptText;\r\n            Query.ExecSQL;\r\n\r\n            // Adicionar registro \u00E0 tabela de login\r\n            Memo1.Lines.Add('Adicionando o usuario admin \u00E0 tabela de login...');\r\n\r\n            Query.SQL.Text :=\r\n              'INSERT INTO login (usuario, senha, email, tipo, ativo, idcliente) ' +\r\n              'VALUES (:usuario, :senha, :email, :tipo, :ativo, :idcliente)';\r\n            Query.Params.ParamByName('usuario').AsString    := 'admin';\r\n            Query.Params.ParamByName('senha').AsString      := '123';\r\n            Query.Params.ParamByName('email').AsString      := Edit2.Text;\r\n            Query.Params.ParamByName('tipo').AsString       := 'A';\r\n            Query.Params.ParamByName('ativo').AsString      := 'S';\r\n            Query.Params.ParamByName('idcliente').AsInteger := 1;\r\n            Query.ExecSQL;\r\n\r\n            Memo1.Lines.Add('Banco de dados criado e script executado com sucesso: ' + DatabaseName);\r\n\r\n            //se \u00E9 demo temos que adicionar a data do termino do demo na tabela registro\r\n            if cbDemo.Checked then\r\n            begin\r\n\r\n              //id, id_chave, chave, data_inc (now) ,  data_exp now+30, contrasenha, ativado ='S' e serialhd\r\n              Query.SQL.Clear;\r\n              Query.SQL.Text :=\r\n              'INSERT INTO registro (id, id_chave, data_inc, data_exp, contrasenha, ativo, serialhd ) ' +\r\n              'VALUES (:id, :id_chave, :data_inc, :data_exp, :contrasenha, :ativo, :serialhd)';\r\n              Query.Params.ParamByName('id').AsString          := '1';\r\n              Query.Params.ParamByName('id_chave').AsString    := '1';\r\n              Query.Params.ParamByName('data_inc').AsDate      := now;\r\n              Query.Params.ParamByName('data_exp').AsDate      := now+30;\r\n              Query.Params.ParamByName('contrasenha').AsString := 'Conect';\r\n              Query.Params.ParamByName('ativo').AsString       := 'S';\r\n              Query.Params.ParamByName('serialhd').AsString    := '0';\r\n              Query.ExecSQL;\r\n\r\n              Memo1.Lines.Add('Foi criada uma data de expira\u00E7\u00E3o ' + DateToStr(Now+30) + ' , pois o programa foi marcado como Demo');\r\n            end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\DAO\\DAO.Clientes.pas","smell":"M\u00E9todo muito longo","linha":89,"trecho":"function TClientes.AlterarCliente(Cliente: TClientes): Boolean;\r\nbegin\r\n  //Alterar oo cliente do par\u00E2metro acNPJ\r\n  Result:=False;\r\n  qry:=qry.Create(nil);\r\n  qry.Connection := FConn;\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Text:='UPDATE fulanorodas.clientes  ' +\r\n                  'SET                          ' +\r\n                  'idclientes  = :idclientes,   ' +\r\n                  'razao       = :razao,        ' +\r\n                  'cnpj_cpf    = :cnpj_cpf,     ' +\r\n                  'endereco    = :endereco,     ' +\r\n                  'numero      = :numero,       ' +\r\n                  'complemento = :complemento,  ' +\r\n                  'cep         = :cep,          ' +\r\n                  'cidade      = :cidade,       ' +\r\n                  'bairro      = :bairro,       ' +\r\n                  'ativo       = :ativo,        ' +\r\n                  'uf          = :uf            ' +\r\n                  'WHERE                        ' +\r\n                  'idclientes = :CNPJ           ';\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := Cliente.razaosocial;\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := Cliente.cnpj ;\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := Cliente.endereco;\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := Cliente.numero;\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := Cliente.complemento;\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := Cliente.CEP;\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := Cliente.Cidade;\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := Cliente.Bairro;\r\n\r\n     qry.ParamByName('uf').DataType            := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.UF) > 0 then\r\n       UF := Copy(Cliente.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF; //ver como vai ser pois \u00E9 CB\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.ativo) > 0 then\r\n       Ativo := Copy(Cliente.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n    qry.ParamByName('ativo').AsString         := Ativo; //ver como vai ser pois \u00E9 CB\r\n    qry.ParamByName('CNPJ').DataType:= ftString;\r\n    qry.ParamByName('CNPJ').AsString:= Cliente.cnpj;\r\n\r\n    qry.ExecSQL;\r\n\r\n    Result:=True;\r\n\r\n  finally\r\n    qry.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\DAO\\DAO.Clientes.pas","smell":"M\u00E9todo muito longo","linha":238,"trecho":"function TClientes.SalvarCliente(Cliente: TClientes): Boolean;\r\nvar\r\n  Ativo : string;\r\n  UF    : string;\r\nbegin\r\n  Result:= False;\r\n  try\r\n    qry:=TFDQuery.Create(nil);\r\n    qry.Connection := FConn;\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' Clientes '    +\r\n                '(idclientes, ' +\r\n                'razao, '       +\r\n                'cnpj_cpf, '    +\r\n                'endereco, '    +\r\n                'numero, '      +\r\n                'complemento, ' +\r\n                'cep, '         +\r\n                'cidade, '      +\r\n                'bairro, '      +\r\n                'ativo, '       +\r\n                'uf) '          +\r\n                'VALUES ('      +\r\n                ':idclientes, ' +\r\n                ':razao, '      +\r\n                ':cnpj_cpf, '   +\r\n                ':endereco, '   +\r\n                ':numero,  '    +\r\n                ':complemento, '+\r\n                ':cep, '        +\r\n                ':cidade, '     +\r\n                ':bairro, '     +\r\n                ':ativo, '      +\r\n                ':uf)');\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := Cliente.razaosocial;\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := Cliente.cnpj ;\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := Cliente.endereco;\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := Cliente.numero;\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := Cliente.complemento;\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := Cliente.CEP;\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := Cliente.Cidade;\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := Cliente.Bairro;\r\n\r\n     qry.ParamByName('uf').DataType            := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.UF) > 0 then\r\n       UF := Copy(Cliente.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF; //ver como vai ser pois \u00E9 CB\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString; //ver como vai ser pois \u00E9 CB\r\n\r\n     if Length(Cliente.ativo) > 0 then\r\n       Ativo := Copy(Cliente.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo; //ver como vai ser pois \u00E9 CB\r\n\r\n     qry.ExecSQL;\r\n\r\n     Result:=True;\r\n\r\n  finally\r\n    qry.Close;\r\n    qry.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\DAO\\Dao.Conexao.pas","smell":"Uso de with","linha":73,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\DAO\\DAO.ConexaoLicencas.pas","smell":"Uso de with","linha":72,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Dao.Conexao.pas","smell":"Uso de with","linha":63,"trecho":"with Connection.Params do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Encriptografar\\View\\View.Principal.pas","smell":"M\u00E9todo muito longo","linha":75,"trecho":"procedure TFrmPrincipal.BtnEncriptarClick(Sender: TObject);\r\nvar\r\n  IniFile: TIniFile;\r\n  EncryptedServer   : string;\r\n  EncryptedPassword : string;\r\n  EncryptedDataBase : string;\r\n  EncryptedUserName : string;\r\n  EncryptedServerLicencas   : string;\r\n  EncryptedPasswordLicencas : string;\r\n  EncryptedDataBaseLicencas : string;\r\n  EncryptedUserNameLicencas : string;\r\n  Funcoes: TCriptografia;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + 'Server.ini');\r\n  Funcoes:= TCriptografia.Create;\r\n  try\r\n     EncryptedServer   := Funcoes.EncryptString(EdtDadosBancoServer.Text, 123);\r\n     EncryptedPassword := Funcoes.EncryptString(EdtDadosBancoPassword.Text, 123);\r\n     EncryptedDataBase := Funcoes.EncryptString(EdtDadosBancoDataBase.Text,123);\r\n     EncryptedUserName := Funcoes.EncryptString(EdtDadosBancoUserName.Text,123);\r\n\r\n     EncryptedServerLicencas   := Funcoes.EncryptString(EdtDadosLicenasServer.Text,123);\r\n     EncryptedPasswordLicencas := Funcoes.EncryptString(EdtDadosLicencasPassword.Text,123);\r\n     EncryptedDataBaseLicencas := Funcoes.EncryptString(EdtDadosLicenasDataBase.Text,123);\r\n     EncryptedUserNameLicencas := Funcoes.EncryptString(EdtDadosLicencasUserName.Text,123);\r\n\r\n     //Escreve no arquivo ini\r\n     IniFile.WriteString('Banco de Dados', 'Server', EncryptedServer);\r\n     IniFile.WriteString('Banco de Dados', 'Password', EncryptedPassword);\r\n     IniFile.WriteString('Banco de Dados', 'Database', EncryptedDataBase);\r\n     IniFile.WriteString('Banco de Dados', 'User_Name', EncryptedUserName);\r\n\r\n     IniFile.WriteString('BancoLicencas', 'Server',    EncryptedServerLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'Password',  EncryptedPasswordLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'Database',  EncryptedDataBaseLicencas);\r\n     IniFile.WriteString('BancoLicencas', 'User_Name', EncryptedUserNameLicencas);\r\n\r\n     //Preenche os Edits da Aba Encriptada - Banco\r\n     EdtEncryptadosBancoServer.Text   := EncryptedServer;\r\n     EdtEncryptadosBancoPassword.Text := EncryptedPassword;\r\n     EdtEncryptadosBancoDataBase.Text := EncryptedDataBase;\r\n     EdtEncryptadosBancoUserName.Text := EncryptedUserName;\r\n\r\n     //Preenche os Edits da Aba Encriptada - Banco Licen\u00E7as\r\n     EdtEncryptadosBancoLicencasServer.Text   := EncryptedServerLicencas;\r\n     EdtEncryptadosBancoLicencasPassword.Text := EncryptedPasswordLicencas;\r\n     EdtEncryptadosBancoLicencasDataBase.Text := EncryptedDataBaseLicencas;\r\n     EdtEncryptadosBancoLicencasUserName.Text := EncryptedUserNameLicencas;\r\n\r\n     inifile.UpdateFile;\r\n\r\n  finally\r\n    IniFile.Free;\r\n    Funcoes.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Encriptografar\\View\\View.Principal.pas","smell":"M\u00E9todo muito longo","linha":133,"trecho":"procedure TFrmPrincipal.CarregarEdits;\r\nvar\r\n  IniFile: TIniFile;\r\n  EncryptedServer    : string;\r\n  DecryptedServer    : string;\r\n  EncryptedPassword  : string;\r\n  DecryptedPassword  : string;\r\n  EncryptedDataBase  : string;\r\n  DescryptedDataBase : string;\r\n  EncryptedUserName  : string;\r\n  DescryptedUserName : string;\r\n\r\n  EncryptedServerLicencas    : string;\r\n  DecryptedServerLicencas    : string;\r\n  EncryptedPasswordLicencas  : string;\r\n  DecryptedPasswordLicencas  : string;\r\n  EncryptedDataBaseLicencas  : string;\r\n  DescryptedDataBaseLicencas : string;\r\n  EncryptedUserNameLicencas  : string;\r\n  DescryptedUserNameLicencas : string;\r\n\r\n  Funcao: TCriptografia;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + '\\Server.ini');\r\n  Funcao  := TCriptografia.Create;\r\n  try\r\n    EncryptedServer   := IniFile.ReadString('Banco de Dados', 'Server', '');\r\n    EncryptedPassword := IniFile.ReadString('Banco de Dados', 'Password', '');\r\n    EncryptedDataBase := IniFile.ReadString('Banco de Dados', 'Database', '');\r\n    EncryptedUserName := IniFile.ReadString('Banco de Dados', 'User_Name', '');\r\n\r\n    DecryptedServer    := Funcao.DecryptString(EncryptedServer, 123);\r\n    DecryptedPassword  := Funcao.DecryptString(EncryptedPassword, 123);\r\n    DescryptedDataBase := Funcao.DecryptString(EncryptedDataBase, 123);\r\n    DescryptedUserName := Funcao.DecryptString(EncryptedUserName, 123);\r\n\r\n    EncryptedServerLicencas   := IniFile.ReadString('BancoLicencas', 'Server', '');\r\n    EncryptedPasswordLicencas := IniFile.ReadString('BancoLicencas', 'Password', '');\r\n    EncryptedDataBaseLicencas := IniFile.ReadString('BancoLicencas', 'Database', '');\r\n    EncryptedUserNameLicencas := IniFile.ReadString('BancoLicencas', 'User_Name', '');\r\n\r\n    DecryptedServerLicencas    := Funcao.DecryptString(EncryptedServer, 123);\r\n    DecryptedPasswordLicencas  := Funcao.DecryptString(EncryptedPassword, 123);\r\n    DescryptedDataBaseLicencas := Funcao.DecryptString(EncryptedDataBase, 123);\r\n    DescryptedUserNameLicencas := Funcao.DecryptString(EncryptedUserName, 123);\r\n\r\n    // Carregar Edits Aba Banco - GroupBox Banco\r\n    EdtDadosBancoServer.Text   := DecryptedServer;\r\n    EdtDadosBancoPassword.Text := DecryptedPassword;\r\n    EdtDadosBancoDataBase.Text := DescryptedDataBase;\r\n    EdtDadosBancoUserName.Text := DescryptedUserName;\r\n\r\n    //Carregar Edits Aba Dados Encryptados - GroupBox Licen\u00E7as\r\n    EdtEncryptadosBancoLicencasServer.Text   := DecryptedServerLicencas;\r\n    EdtEncryptadosBancoLicencasPassword.Text := DecryptedPasswordLicencas;\r\n    EdtEncryptadosBancoLicencasDataBase.Text := DescryptedDataBaseLicencas;\r\n    EdtEncryptadosBancoLicencasUserName.Text := DescryptedUserNameLicencas;\r\n\r\n  finally\r\n    IniFile.Free;\r\n    Funcao.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Funcoes\\Funcoes.CNPJCPF.pas","smell":"M\u00E9todo muito longo","linha":22,"trecho":"function TCNPJCPF.ValidarCNPJ(const CNPJ: string): Boolean;\r\nvar\r\n  Digito, Soma, i, j: Integer;\r\n  CNPJCalc: string;\r\n  Multiplicador: array[1..14] of Integer;\r\nbegin\r\n  Result := False;\r\n\r\n  // Remove caracteres n\u00E3o num\u00E9ricos do CNPJ\r\n  CNPJCalc := '';\r\n  for i := 1 to Length(CNPJ) do\r\n    if CharInSet(CNPJ[i], ['0'..'9']) then\r\n      CNPJCalc := CNPJCalc + CNPJ[i];\r\n\r\n  // Verifica se o CNPJ possui 14 d\u00EDgitos\r\n  if Length(CNPJCalc) <> 14 then\r\n    Exit;\r\n\r\n  // Verifica se todos os d\u00EDgitos s\u00E3o iguais\r\n  if (CNPJCalc = '00000000000000') or (CNPJCalc = '11111111111111') or\r\n    (CNPJCalc = '22222222222222') or (CNPJCalc = '33333333333333') or\r\n    (CNPJCalc = '44444444444444') or (CNPJCalc = '55555555555555') or\r\n    (CNPJCalc = '66666666666666') or (CNPJCalc = '77777777777777') or\r\n    (CNPJCalc = '88888888888888') or (CNPJCalc = '99999999999999') then\r\n    Exit;\r\n\r\n  // Calcula o primeiro d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 5;\r\n  Multiplicador[2] := 4;\r\n  Multiplicador[3] := 3;\r\n  Multiplicador[4] := 2;\r\n  Multiplicador[5] := 9;\r\n  Multiplicador[6] := 8;\r\n  Multiplicador[7] := 7;\r\n  Multiplicador[8] := 6;\r\n  Multiplicador[9] := 5;\r\n  Multiplicador[10] := 4;\r\n  Multiplicador[11] := 3;\r\n  Multiplicador[12] := 2;\r\n  for i := 1 to 12 do\r\n    Soma := Soma + (StrToInt(CNPJCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CNPJCalc[13]) then\r\n    Exit;\r\n\r\n  // Calcula o segundo d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 6;\r\n  Multiplicador[2] := 5;\r\n  Multiplicador[3] := 4;\r\n  Multiplicador[4] := 3;\r\n  Multiplicador[5] := 2;\r\n  Multiplicador[6] := 9;\r\n  Multiplicador[7] := 8;\r\n  Multiplicador[8] := 7;\r\n  Multiplicador[9] := 6;\r\n  Multiplicador[10] := 5;\r\n  Multiplicador[11] := 4;\r\n  Multiplicador[12] := 3;\r\n  Multiplicador[13] := 2;\r\n  for i := 1 to 13 do\r\n    Soma := Soma + (StrToInt(CNPJCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CNPJCalc[14]) then\r\n    Exit;\r\n\r\n  Result := True;\r\n\r\nend;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Funcoes\\Funcoes.CNPJCPF.pas","smell":"M\u00E9todo muito longo","linha":97,"trecho":"function TCNPJCPF.ValidarCPF(const CPF: string): Boolean;\r\nvar\r\n  Digito, Soma, i, j: Integer;\r\n  CPFCalc: string;\r\n  Multiplicador: array[1..11] of Integer;\r\nbegin\r\n  Result := False;\r\n\r\n  // Remove caracteres n\u00E3o num\u00E9ricos do CPF\r\n  CPFCalc := '';\r\n  for i := 1 to Length(CPF) do\r\n    if CharInSet(CPF[i], ['0'..'9']) then\r\n      CPFCalc := CPFCalc + CPF[i];\r\n\r\n  // Verifica se o CPF possui 11 d\u00EDgitos\r\n  if Length(CPFCalc) <> 11 then\r\n    Exit;\r\n\r\n  // Verifica se todos os d\u00EDgitos s\u00E3o iguais\r\n  if (CPFCalc = '00000000000') or (CPFCalc = '11111111111') or\r\n    (CPFCalc = '22222222222') or (CPFCalc = '33333333333') or\r\n    (CPFCalc = '44444444444') or (CPFCalc = '55555555555') or\r\n    (CPFCalc = '66666666666') or (CPFCalc = '77777777777') or\r\n    (CPFCalc = '88888888888') or (CPFCalc = '99999999999') then\r\n    Exit;\r\n\r\n  // Calcula o primeiro d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 10;\r\n  Multiplicador[2] := 9;\r\n  Multiplicador[3] := 8;\r\n  Multiplicador[4] := 7;\r\n  Multiplicador[5] := 6;\r\n  Multiplicador[6] := 5;\r\n  Multiplicador[7] := 4;\r\n  Multiplicador[8] := 3;\r\n  Multiplicador[9] := 2;\r\n  for i := 1 to 9 do\r\n    Soma := Soma + (StrToInt(CPFCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CPFCalc[10]) then\r\n    Exit;\r\n\r\n  // Calcula o segundo d\u00EDgito verificador\r\n  Soma := 0;\r\n  Multiplicador[1] := 11;\r\n  Multiplicador[2] := 10;\r\n  Multiplicador[3] := 9;\r\n  Multiplicador[4] := 8;\r\n  Multiplicador[5] := 7;\r\n  Multiplicador[6] := 6;\r\n  Multiplicador[7] := 5;\r\n  Multiplicador[8] := 4;\r\n  Multiplicador[9] := 3;\r\n  Multiplicador[10] := 2;\r\n  for i := 1 to 10 do\r\n    Soma := Soma + (StrToInt(CPFCalc[i]) * Multiplicador[i]);\r\n  Digito := 11 - (Soma mod 11);\r\n  if Digito >= 10 then\r\n    Digito := 0;\r\n  if Digito <> StrToInt(CPFCalc[11]) then\r\n    Exit;\r\n\r\n  Result := True;\r\n\r\nend;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Funcoes\\Funcoes.EnviarEmail.pas","smell":"M\u00E9todo muito longo","linha":68,"trecho":"      procedure Setativo(const Value: string);\r\n      procedure Setbairro(const Value: string);\r\n      procedure SetCEP(const Value: string);\r\n      procedure Setcidade(const Value: string);\r\n      procedure Setcnpj(const Value: string);\r\n      procedure Setcomplemento(const Value: string);\r\n      procedure Setcontato(const Value: string);\r\n      procedure SetContraSenha(const Value: String);\r\n      procedure SetData_exp(const Value: TDateTime);\r\n      procedure Setdataregistro(const Value: TDatetime);\r\n      procedure Setemail(const Value: string);\r\n      procedure Setendereco(const Value: string);\r\n      procedure Setid_chave(const Value: string);\r\n      procedure Setie(const Value: string);\r\n      procedure Setim(const Value: string);\r\n      procedure SetLinguagem(const Value: string);\r\n      procedure Setnumero(const Value: integer);\r\n      procedure Setrazao(const Value: string);\r\n      procedure Setresponsavel(const Value: string);\r\n      procedure Setserial(const Value: string);\r\n      procedure Setserialhd(const Value: string);\r\n      procedure Settelcontato(const Value: string);\r\n      procedure Settelefone(const Value: string);\r\n      procedure Setuf(const Value: string);\r\n\r\n    public\r\n       property razao       : string read Frazao write Setrazao;\r\n       property cnpj        : string read Fcnpj write Setcnpj;\r\n       property ie          : string read Fie write Setie;\r\n       property im          : string read Fim write Setim;\r\n       property endereco    : string read Fendereco write Setendereco;\r\n       property numero      : integer read Fnumero write Setnumero;\r\n       property complemento : string read Fcomplemento write Setcomplemento;\r\n       property bairro      : string read Fbairro write Setbairro;\r\n       property cidade      : string read Fcidade write Setcidade;\r\n       property uf          : string read Fuf write Setuf;\r\n       property CEP         : string read FCEP write SetCEP;\r\n       property ativo       : string read Fativo write Setativo;\r\n       property responsavel : string read Fresponsavel write Setresponsavel;\r\n       property contato     : string read Fcontato write Setcontato;\r\n       property telcontato  : string read Ftelcontato write Settelcontato;\r\n       property telefone    : string read Ftelefone write Settelefone;\r\n       property email       : string read Femail write Setemail;\r\n       property dataregistro: TDatetime read Fdataregistro write Setdataregistro;\r\n       property Linguagem   : string read FLinguagem write SetLinguagem;\r\n       property serial      : string read Fserial write Setserial;\r\n       property serialhd    : string read Fserialhd write Setserialhd;\r\n       property ContraSenha : String read FContraSenha write SetContraSenha;\r\n       property Data_exp    : TDateTime read FData_exp write SetData_exp;\r\n       property id_chave    : string read Fid_chave write Setid_chave;\r\n       function enviarPedido(aEmail: String): Boolean;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Funcoes\\Funcoes.EnviarPedido.pas","smell":"M\u00E9todo muito longo","linha":74,"trecho":"    procedure SetidCliente(const Value: Integer);\r\n    procedure SetStatusPedido(const Value: Integer);\r\n    procedure SetTotalPedido(const Value: currency);\r\n    procedure Setbairro(const Value: string);\r\n    procedure SetCEP(const Value: string);\r\n    procedure Setcidade(const Value: string);\r\n    procedure Setcnpj(const Value: string);\r\n    procedure Setcomplemento(const Value: string);\r\n    procedure Setcontato(const Value: string);\r\n    procedure Setemail(const Value: string);\r\n    procedure Setendereco(const Value: string);\r\n    procedure Setie(const Value: string);\r\n    procedure Setim(const Value: string);\r\n    procedure Setnumero(const Value: integer);\r\n    procedure Setrazao(const Value: string);\r\n    procedure Setresponsavel(const Value: string);\r\n    procedure Settelcontato(const Value: string);\r\n    procedure Settelefone(const Value: string);\r\n    procedure Setuf(const Value: string);\r\n    procedure SetidPedido(const Value: Integer);\r\n    procedure SetidProduto(const Value: Integer);\r\n    procedure SetPrecoUnitario(const Value: Currency);\r\n    procedure SetQuantidade(const Value: Integer);\r\n    procedure SetTotaldoItem(const Value: Currency);\r\n    procedure SetCelularContato(const Value: String);\r\n    procedure SetEmailContato(const Value: String);\r\n    procedure SetNomeContato(const Value: String);\r\n    procedure SetTelefoneConteto(const Value: String);\r\n    procedure SetLinguagem(const Value: string);\r\n\r\n    public\r\n      //Dados do Pedido\r\n      property IdPedido: Integer read FIdPedido write SetIdPedido;\r\n      property idCliente: Integer read FidCliente write SetidCliente;\r\n      property StatusPedido: Integer read FStatusPedido write SetStatusPedido;\r\n      property TotalPedido: currency read FTotalPedido write SetTotalPedido;\r\n\r\n      //Itens do Pedido\r\n      property idProduto: Integer read FidProduto write SetidProduto;\r\n      property Quantidade: Integer read FQuantidade write SetQuantidade;\r\n      property PrecoUnitario: Currency read FPrecoUnitario write SetPrecoUnitario;\r\n      property TotaldoItem: Currency read FTotaldoItem write SetTotaldoItem;\r\n\r\n      //Dados do cliente\r\n       property razao       : string read Frazao write Setrazao;\r\n       property cnpj        : string read Fcnpj write Setcnpj;\r\n       property ie          : string read Fie write Setie;\r\n       property im          : string read Fim write Setim;\r\n       property endereco    : string read Fendereco write Setendereco;\r\n       property numero      : integer read Fnumero write Setnumero;\r\n       property complemento : string read Fcomplemento write Setcomplemento;\r\n       property bairro      : string read Fbairro write Setbairro;\r\n       property cidade      : string read Fcidade write Setcidade;\r\n       property uf          : string read Fuf write Setuf;\r\n       property CEP         : string read FCEP write SetCEP;\r\n       property responsavel : string read Fresponsavel write Setresponsavel;\r\n       property contato     : string read Fcontato write Setcontato;\r\n       property telcontato  : string read Ftelcontato write Settelcontato;\r\n       property telefone    : string read Ftelefone write Settelefone;\r\n       property email       : string read Femail write Setemail;\r\n       property NomeContato: String read FNomeContato write SetNomeContato;\r\n       property TelefoneConteto: String read FTelefoneConteto write SetTelefoneConteto;\r\n       property CelularContato: String read FCelularContato write SetCelularContato;\r\n       property EmailContato: String read FEmailContato write SetEmailContato;\r\n       property Linguagem   : string read FLinguagem write SetLinguagem;\r\n\r\n      function enviarPedido(aEmail: String): Boolean;\r\n      procedure PrencherDadosDoPedido(aidcliente: Integer;aStatusPedido:Integer;aTotalPedido: Currency);\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Gerar Contra Senha\\UnitGerarContrasenha.pas","smell":"Uso de Application.ProcessMessages em loop","linha":95,"trecho":"Application.ProcessMessages;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Gerar Contra Senha\\UnitGerarContrasenha.pas","smell":"Uso de with","linha":159,"trecho":"with FDQuery1 do;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Gerar Contra Senha\\UnitGerarContrasenha.pas","smell":"M\u00E9todo muito longo","linha":134,"trecho":"procedure TFRMGerarContraSenha.Button1Click(Sender: TObject);\r\nvar\r\n  strsql: string;\r\n  strsql2: string;\r\n  contrasenha: string;\r\n  senhafinal: string;\r\n  i: Integer;\r\nconst\r\n  str = '1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ!@#$%?';\r\n  max = 15;\r\nbegin\r\n  if Edit1.Text = '' then\r\n  begin\r\n    ShowMessage('Entre com a chave.');\r\n    Edit1.SetFocus;\r\n  end\r\n  else\r\n  begin\r\n    if EdtData.Text = '' then\r\n    begin\r\n      ShowMessage('Entre com a data de vencimento.');\r\n      EdtData.SetFocus;\r\n    end\r\n    else\r\n    begin\r\n      with FDQuery1 do;\r\n      begin\r\n        strsql := 'select * from registro where chave=' + #39 +\r\n          Edit1.Text + #39;\r\n        strsql := strsql + ' and contrasenha=0';\r\n\r\n        strsql2 :=\r\n          'select razao from chaves,registro where chaves.id_chave= registro.id_chave and registro.chave='\r\n          + #39 + Edit1.Text + #39;\r\n        FDQuery2.SQL.Clear;\r\n        FDQuery2.SQL.Add(strsql2);\r\n        FDQuery2.Open();\r\n        Label6.Caption := FDQuery2.FieldByName('razao').AsString;\r\n\r\n        // ShowMessage(strsql);\r\n        FDQuery1.SQL.Clear;\r\n        FDQuery1.SQL.Add(strsql);\r\n        FDQuery1.Open();\r\n        if (FDQuery1.RecordCount) = 1 then\r\n        begin\r\n          ShowMessage('Chave encontrada');\r\n          // rotina de gerar a contra-senha\r\n          contrasenha := FDQuery1.FieldByName('chave').AsString;\r\n          // ShowMessage(contrasenha);\r\n          // Gerar contra-senha\r\n          Randomize;\r\n          Label3.Caption := '';\r\n          for i := 1 to max do\r\n          begin\r\n            try\r\n              FDConnection1.StartTransaction;\r\n\r\n              FDQuery1.Edit;\r\n              Label3.Caption := Label3.Caption + str[Random(Length(str)) + 1];\r\n              FDQuery1.FieldByName('contrasenha').AsString := contrasenha +\r\n              Label3.Caption;\r\n              senhafinal := contrasenha + Label3.Caption;\r\n\r\n              Memo1.Lines.Clear;\r\n              Memo1.Lines.Add(senhafinal);\r\n\r\n              // Encriptar\r\n              // Memo1.Lines.Add(Crypt('D',senhafinal));\r\n              // fim de encriptar\r\n\r\n              FDQuery1.FieldByName('ativado').AsString := 'S';\r\n              FDQuery1.FieldByName('data_exp').AsDateTime :=\r\n              StrToDateTime(EdtData.Text);\r\n              FDQuery1.Post;\r\n              FDCOnnection1.Commit;\r\n\r\n             Except\r\n             on E: Exception do\r\n             begin\r\n               ShowMessage('Erro ao gravar Contra Senha' + e.Message);\r\n               FDConnection1.Rollback;\r\n               Exit;\r\n             end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Categorias.pas","smell":"M\u00E9todo muito longo","linha":380,"trecho":"class function TModelCategorias.SalvarCategoria(\r\n  aCategoria: TCategorias): Boolean;\r\nvar\r\n  qry             : TFDQuery;\r\n  Ativo           : string;\r\n  LogManager      : TLogManager;\r\n  CurrentDateTime : TDateTime;\r\n  DateTimeStr     : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' fulanorodas.categoria  ' +\r\n                '(idcategorias,          ' +   //1\r\n                'categoria,              ' +   //2\r\n                'ativo,                  ' +   //3\r\n                'datacadastro,           ' +   //4\r\n                'dataalteracao,          ' +   //5\r\n                'dataexclusao            ' +   //6\r\n                ')                       ' +\r\n                'VALUES (                ' +\r\n                ':idcategorias,          ' +   //1 ok\r\n                ':categoria,             ' +   //2 ok\r\n                ':ativo,                 ' +   //3 ok\r\n                ':datacadastro,          ' +   //4 ok\r\n                ':dataalteracao,         ' +   //5 ok\r\n                ':dataexclusao           ' +   //6 ok\r\n                ')                       ');\r\n\r\n     qry.ParamByName('idcategorias').DataType  := ftInteger;            //1\r\n\r\n     qry.ParamByName('categoria').DataType     := ftString;\r\n     qry.ParamByName('categoria').AsString     := aCategoria.categoria; //2\r\n\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString;\r\n     if Length(aCategoria.ativo) > 0 then\r\n       Ativo := Copy(aCategoria.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo;               //3\r\n\r\n     qry.ParamByName('datacadastro').DataType  := ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime:= Now;                 //4\r\n\r\n     qry.ParamByName('dataalteracao').DataType  := ftDateTime;         //5\r\n     qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n     qry.ParamByName('dataexclusao').DataType := ftDateTime;\r\n     qry.ParamByName('dataexclusao').AsDateTime:= aCategoria.dataExclusao; //6\r\n\r\n     //CarregarFGravarLog;\r\n\r\n     if FGravarLogs then\r\n       qry.SQL.SaveToFile('C:\\CategoriasSQL.txt');\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        Result := False;\r\n        ShowMessage('Ocorreu um erro ao salvar a categoria: ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n\r\n        if True then\r\n        begin\r\n          LogManager:= TLogManager.Create;\r\n          try\r\n            CurrentDateTime := Now;\r\n            DateTimeStr     := FormatDateTime('yyyy-mm-dd hh:nn:ss', CurrentDateTime);\r\n            LogManager.AddLog('Classe Model.Categoria - Linha : 460 - Finalizou o Alterar Categoria finalizou qry \u00E0s '+ DateTimeStr);\r\n            LogManager.SaveLogToFile('Log_Model_Categorias.txt');\r\n          finally\r\n            LogManager.Free;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Clientes.pas","smell":"M\u00E9todo muito longo","linha":580,"trecho":"class function TModelCliente.SalvarCliente(aCliente: TClientes): Boolean;\r\nvar\r\n  qry             : TFDQuery;\r\n  Ativo           : string;\r\n  UF              : string;\r\n  LogManager      : TLogManager;\r\n  CurrentDateTime : TDateTime;\r\n  DateTimeStr     : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' fulanorodas.Clientes ' +\r\n                '(idclientes,          ' +   //1\r\n                'razao,                ' +   //2\r\n                'cnpj_cpf,             ' +   //3\r\n                'endereco,             ' +   //4\r\n                'numero,               ' +   //5\r\n                'complemento,          ' +   //6\r\n                'cep,                  ' +   //7\r\n                'cidade,               ' +   //8\r\n                'bairro,               ' +   //9\r\n                'ativo,                ' +   //10\r\n                'uf,                   ' +   //11\r\n                'datacadastro,         ' +   //12\r\n                'dataalteracao,        ' +   //13\r\n               // 'dataexclusao,       ' +   //14\r\n                'idmodelocarro         ' +   //15\r\n                ')                     ' +\r\n                'VALUES (              ' +\r\n                ':idclientes,          ' +   //1 ok\r\n                ':razao,               ' +   //2 ok\r\n                ':cnpj_cpf,            ' +   //3 ok\r\n                ':endereco,            ' +   //4 ok\r\n                ':numero,              ' +   //5 ok\r\n                ':complemento,         ' +   //6 ok\r\n                ':cep,                 ' +   //7 ok\r\n                ':cidade,              ' +   //8 ok\r\n                ':bairro,              ' +   //9 ok\r\n                ':ativo,               ' +   //10 ok\r\n                ':uf,                  ' +   //11 ok\r\n                ':datacadastro,        ' +   //12 ok\r\n                ':dataalteracao,       ' +   //13 ok\r\n              //  ':dataexclusao,        ' + //14 ok\r\n                ':idmodelocarro        ' +   //15 ok\r\n                ')                     ');\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;            //1\r\n\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := aCliente.razaosocial; //2\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := aCliente.cnpj ;       //3\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := aCliente.endereco;    //4\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := aCliente.numero;      //5\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := aCliente.complemento; //6\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := aCliente.CEP;         //7\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := aCliente.Cidade;      //8\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := aCliente.Bairro;      //9\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString;\r\n     if Length(aCliente.ativo) > 0 then\r\n       Ativo := Copy(aCliente.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo;               //10\r\n\r\n     qry.ParamByName('uf').DataType            := ftString;\r\n     if Length(aCliente.UF) > 0 then\r\n       UF := Copy(aCliente.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF;                  //11\r\n\r\n     qry.ParamByName('datacadastro').DataType  := ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime:= Now;                 //12\r\n\r\n     qry.ParamByName('dataalteracao').DataType  := ftDateTime;         //13\r\n     qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n//     qry.ParamByName('dataexclusao').DataType := ftDateTime;\r\n//     qry.ParamByName('dataexclusao').AsDateTime:= aCliente.dataExclusao; //14\r\n\r\n     qry.ParamByName('idmodelocarro').DataType := ftInteger;\r\n     qry.ParamByName('idmodelocarro').AsInteger:= aCliente.Idmodelocarro; //15\r\n\r\n     CarregarFGravarLog;\r\n\r\n     if FGravarLogs then\r\n       qry.SQL.SaveToFile('C:\\ClientesSQL.txt');\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        Result := False;\r\n        ShowMessage('Ocorreu um erro ao salvar o cliente: ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n\r\n        if True then\r\n        begin\r\n          LogManager:= TLogManager.Create;\r\n          try\r\n            CurrentDateTime := Now;\r\n            DateTimeStr     := FormatDateTime('yyyy-mm-dd hh:nn:ss', CurrentDateTime);\r\n            LogManager.AddLog('Classe Model.Clientes - Linha : 629 - Finalizou o Alterar Cliente finalizou qry \u00E0s '+ DateTimeStr);\r\n            LogManager.SaveLogToFile('Log_Model_Clientes.txt');\r\n          finally\r\n            LogManager.Free;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Contatos.pas","smell":"M\u00E9todo muito longo","linha":253,"trecho":"class function TModelContato.SalvarContato(aContato: TContato; aCliente: TClientes): Boolean;\r\nvar\r\n  qry        : TFDQuery;\r\n  Ativo      : string;\r\n  UF         : string;\r\n  LogManager : TLogManager;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n     qry.Close;\r\n     qry.SQL.Clear;\r\n     qry.SQL.Add('INSERT INTO     ' +\r\n                  'idcontatos,     ' +\r\n                  'idcliente,      ' +\r\n                  'telefone,       ' +\r\n                  'celular,        ' +\r\n                  'email,          ' +\r\n                  'datacadastro    ' +\r\n                  'dataalteracao,  ' +\r\n                  'cnpjrevenda,    ' +\r\n                  'ativo,          ' +\r\n                  'nomecontato)    ' +\r\n                  'VALUES(         ' +\r\n                  ':idcontatos,    ' +\r\n                  ':idcliente,     ' +\r\n                  ':telefone,      ' +\r\n                  ':celular,       ' +\r\n                  ':email,         ' +\r\n                  ':datacadastro   ' +\r\n                  ':dataalteracao, ' +\r\n                  ':cnpjrevenda,   ' +\r\n                  ':ativo,         ' +\r\n                  ':nomecontato)   ');\r\n\r\n     qry.ParamByName('idcontatos').DataType      := ftInteger;\r\n     qry.ParamByName('idcliente').DataType       := ftInteger;\r\n     qry.ParamByName('idcliente').AsInteger      := aCliente.idcliente;\r\n     qry.ParamByName('telefone').DataType        := ftString;\r\n     qry.ParamByName('telefone').AsString        := aContato.telefone;\r\n     qry.ParamByName('celular').DataType         := ftString;\r\n     qry.ParamByName('celular').AsString         := aContato.celular;\r\n     qry.ParamByName('email').DataType           := ftString;\r\n     qry.ParamByName('email').AsString           := aContato.email;\r\n     qry.ParamByName('datacadastro').DataType    := ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime  := Now;\r\n     qry.ParamByName('dataalteracao').DataType   := ftDateTime;\r\n     qry.ParamByName('dataalteracao').AsDateTime := Now;\r\n     qry.ParamByName('cnpjrevenda').DataType     := ftString;\r\n     qry.ParamByName('cnpjrevenda').AsString     := aContato.cnpjrevenda;\r\n     qry.ParamByName('ativo').DataType           := ftString;\r\n\r\n     qry.ParamByName('ativo').DataType           := ftString;\r\n     if Length(aContato.ativo) > 0 then\r\n       Ativo := Copy(aContato.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString           := Ativo;\r\n\r\n     qry.ParamByName('ativo').AsString           := aContato.ativo;\r\n\r\n     qry.ParamByName('nomecontato').DataType     := ftString;\r\n     qry.ParamByName('nomecontato').AsString     := aContato.NomeContato;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result:=True;\r\n\r\n  Except\r\n    on E: Exception do\r\n    begin\r\n      Result:= False;\r\n      qry.Connection.Rollback;\r\n      ShowMessage('Houve um erro ao gravar os dados do contato' + E.Message);\r\n      qry.Close;\r\n      qry.Free;\r\n\r\n      if True then\r\n\r\n      LogManager := TLogManager.Create;\r\n      try\r\n        LogManager.SaveLogToFile('Log_Model_Contatos.txt');\r\n        LogManager.AddLog('Saiu na Model.Contatos - SalvarContato: Linha 320: e deu erro ao gravar o contato.');\r\n      finally\r\n        LogManager.Free;\r\n      end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Fabricantes.pas","smell":"M\u00E9todo muito longo","linha":64,"trecho":"class function TModelFabricante.AlterarFabricante(\r\n  aFabricante: TFabricante): Boolean;\r\nvar\r\n   qry: TFDQuery;\r\n   UF: String;\r\n   Ativo: String;\r\nbegin\r\n  Result:=False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Text:='UPDATE FABRICANTES              ' +\r\n                  'SET                             ' +\r\n                  'idfabricantes = :idfabricantes, ' +\r\n                  'razao         = :razao,         ' +\r\n                  'cnpj          = :cnpj,          ' +\r\n                  'endereco      = :endereco,      ' +\r\n                  'numero        = :numero,        ' +\r\n                  'complemento   = :complemento,   ' +\r\n                  'cep           = :cep,           ' +\r\n                  'cidade        = :cidade,        ' +\r\n                  'bairro        = :bairro,        ' +\r\n                  'ativo         = :ativo,         ' +\r\n                  'uf            = :uf,            ' +\r\n                  'datacadastro  = now,            ' +\r\n                  'datalateracao = now,            ' +\r\n                  'WHERE                           ' +\r\n                  'CNPJ          = :CNPJ           ';\r\n\r\n    qry.ParamByName('idfabricantes').DataType   := ftInteger;\r\n    qry.ParamByName('idfabricantes').AsInteger  := aFabricante.idFabricantes;\r\n    qry.ParamByName('razao').DataType           := ftString;\r\n    qry.ParamByName('razao').AsString           := aFabricante.razaosocial;\r\n    qry.ParamByName('cnpj').DataType            := ftString;\r\n    qry.ParamByName('cnpj').AsString            := aFabricante.cnpj ;\r\n    qry.ParamByName('endereco').DataType        := ftString;\r\n    qry.ParamByName('endereco').AsString        := aFabricante.endereco;\r\n    qry.ParamByName('numero').DataType          := ftInteger;\r\n    qry.ParamByName('numero').AsInteger         := aFabricante.numero;\r\n    qry.ParamByName('complemento').DataType     := ftString;\r\n    qry.ParamByName('complemento').AsString     := aFabricante.complemento;\r\n    qry.ParamByName('cep').DataType             := ftString;\r\n    qry.ParamByName('cep').AsString             := aFabricante.CEP;\r\n    qry.ParamByName('cidade').DataType          := ftString;\r\n    qry.ParamByName('cidade').AsString          := aFabricante.Cidade;\r\n    qry.ParamByName('bairro').DataType          := ftString;\r\n    qry.ParamByName('bairro').AsString          := aFabricante.Bairro;\r\n\r\n    qry.ParamByName('uf').DataType              := ftString;\r\n\r\n    if Length(aFabricante.UF) > 0 then\r\n      UF := Copy(aFabricante.UF, 1, 2)\r\n    else\r\n      UF := '';\r\n\r\n    qry.ParamByName('uf').AsString              := UF;\r\n\r\n    qry.ParamByName('ativo').DataType           := ftString;\r\n    if Length(aFabricante.ativo) > 0 then\r\n      Ativo := Copy(aFabricante.ativo, 1, 1)\r\n    else\r\n      Ativo := '';\r\n\r\n    qry.ParamByName('ativo').AsString           := Ativo;\r\n\r\n    qry.ParamByName('dataalteracao').DataType   := ftDatetime;\r\n    qry.ParamByName('dataalteracao').AsDateTime := aFabricante.DataAlteracao;\r\n\r\n    qry.ParamByName('CNPJ').DataType            := ftString;\r\n    qry.ParamByName('CNPJ').AsString            := aFabricante.cnpj;\r\n\r\n    qry.ExecSQL;\r\n    qry.connection.Commit;\r\n\r\n    Result:=True;\r\n\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        ShowMessage('Ocorreu um erro ao tentar atualizar o fabricante : ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n        qry.Free;\r\n      end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Fabricantes.pas","smell":"M\u00E9todo muito longo","linha":306,"trecho":"class function TModelFabricante.SalvarFabricante(\r\n  aFabricante: TFabricante): Boolean;\r\nvar\r\n  qry   : TFDQuery;\r\n  Ativo : string;\r\n  UF    : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '     +\r\n                ' fabricantes '    +\r\n                '(idfabricantes, ' +\r\n                'razao, '          +\r\n                'cnpj, '           +\r\n                'endereco, '       +\r\n                'numero, '         +\r\n                'complemento, '    +\r\n                'cep, '            +\r\n                'cidade, '         +\r\n                'bairro, '         +\r\n                'ativo, '          +\r\n                'datacadastro, '   +\r\n                'dataalteracao, '  +\r\n//                'dataexclusao, '   +\r\n                'uf) '             +\r\n                'VALUES ('         +\r\n                ':idclientes, '    +\r\n                ':razao, '         +\r\n                ':cnpj_cpf, '      +\r\n                ':endereco, '      +\r\n                ':numero,  '       +\r\n                ':complemento, '   +\r\n                ':cep, '           +\r\n                ':cidade, '        +\r\n                ':bairro, '        +\r\n                ':ativo, '         +\r\n                ':datacadastro, '  +\r\n                ':dataalteracao, ' +\r\n//                ':dataexclusao, '  +\r\n                ':uf)');\r\n\r\n     qry.ParamByName('idclientes').DataType    := ftInteger;\r\n     qry.ParamByName('razao').DataType         := ftString;\r\n     qry.ParamByName('razao').AsString         := aFabricante.razaosocial;\r\n     qry.ParamByName('cnpj_cpf').DataType      := ftString;\r\n     qry.ParamByName('cnpj_cpf').AsString      := aFabricante.cnpj ;\r\n     qry.ParamByName('endereco').DataType      := ftString;\r\n     qry.ParamByName('endereco').AsString      := aFabricante.endereco;\r\n     qry.ParamByName('numero').DataType        := ftInteger;\r\n     qry.ParamByName('numero').AsInteger       := aFabricante.numero;\r\n     qry.ParamByName('complemento').DataType   := ftString;\r\n     qry.ParamByName('complemento').AsString   := aFabricante.complemento;\r\n     qry.ParamByName('cep').DataType           := ftString;\r\n     qry.ParamByName('cep').AsString           := aFabricante.CEP;\r\n     qry.ParamByName('cidade').DataType        := ftString;\r\n     qry.ParamByName('cidade').AsString        := aFabricante.Cidade;\r\n     qry.ParamByName('bairro').DataType        := ftString;\r\n     qry.ParamByName('bairro').AsString        := aFabricante.Bairro;\r\n\r\n     qry.ParamByName('uf').DataType            := ftString;\r\n     if Length(aFabricante.UF) > 0 then\r\n       UF := Copy(aFabricante.UF, 1, 2)\r\n     else\r\n       UF := '';\r\n\r\n     qry.ParamByName('uf').AsString            := UF;\r\n\r\n     qry.ParamByName('ativo').DataType         := ftString;\r\n     if Length(aFabricante.ativo) > 0 then\r\n       Ativo := Copy(aFabricante.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString         := Ativo;\r\n\r\n     qry.ParamByName('datacadastro').DataType:= ftDateTime;\r\n     qry.ParamByName('datacadastro').AsDateTime:= Now;\r\n\r\n     qry.ParamByName('dataalteracao').DataType:= ftDateTime;\r\n     qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result:=True;\r\n\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        ShowMessage('Ocorreu um erro ao tentar salvar o fabricante : ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n        qry.Free;\r\n      end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Produtos.pas","smell":"M\u00E9todo muito longo","linha":630,"trecho":"class function TModelProduto.SalvarProduto(aProduto: TProduto): Boolean;\r\nvar\r\n  qry             : TFDQuery;\r\n  Ativo           : string;\r\n  UF              : string;\r\n  LogManager      : TLogManager;\r\n  CurrentDateTime : TDateTime;\r\n  DateTimeStr     : string;\r\nbegin\r\n  Result:= False;\r\n\r\n  qry:=TFDQuery.Create(nil);\r\n  qry.Connection := TConnection.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('INSERT INTO '  +\r\n                ' fulanorodas.Produtos ' +\r\n                '(idprodutos,          ' +   //1\r\n                'produto,              ' +   //2\r\n                'foto,                 ' +   //3\r\n                'preco,                ' +   //4\r\n                'aro,                  ' +   //5\r\n                'idFabricante,         ' +   //6\r\n                'datainclusao,         ' +   //7\r\n                'dataalteracao,        ' +   //8\r\n                'dataexclusao,         ' +   //9\r\n                'ativo,                ' +   //10\r\n                'lancamento,           ' +   //11\r\n                'furacao,              ' +   //12\r\n                'offset_et,            ' +   //13\r\n                'idlinha,              ' +   //14\r\n                'idacabamento          ' +   //15\r\n                ')                     ' +\r\n                'VALUES (              ' +\r\n                ':idprodutos,          ' +   //1 ok\r\n                ':produto,             ' +   //2 ok\r\n                ':foto,                ' +   //3 ok\r\n                ':preco,               ' +   //4 ok\r\n                ':aro,                 ' +   //5 ok\r\n                ':idFabricante,        ' +   //6 ok\r\n                ':datainclusao,        ' +   //7 ok\r\n                ':dataalteracao,       ' +   //8 ok\r\n                ':dataexclusao,        ' +   //9 ok\r\n                ':ativo,               ' +   //10 ok\r\n                ':lancamento,          ' +   //11 ok\r\n                ':furacao,             ' +   //12 ok\r\n                ':offset_et,           ' +   //13 ok\r\n                ':idlinha,             ' +   //14 ok\r\n                ':idacabamento         ' +   //15 ok\r\n                ')                     ');\r\n\r\n     qry.ParamByName('idprodutos').DataType    := ftInteger;               //1\r\n\r\n     qry.ParamByName('produto').DataType         := ftString;\r\n     qry.ParamByName('produto').AsString         := aProduto.produto;      //2\r\n     qry.ParamByName('foto').DataType            := ftStream;\r\n     qry.ParamByName('foto').AsStream            := aProduto.foto;         //3 - Verificar\r\n     qry.ParamByName('preco').DataType           := ftCurrency;\r\n     qry.ParamByName('preco').AsCurrency         := aProduto.preco;        //4\r\n     qry.ParamByName('aro').DataType             := ftInteger;\r\n     qry.ParamByName('aro').AsInteger            := aProduto.aro;          //5\r\n     qry.ParamByName('idfabricante').DataType    := ftInteger;\r\n     qry.ParamByName('idfabricante').AsInteger   := aProduto.idfabricante; //6\r\n     qry.ParamByName('datainclusao').DataType    := ftDateTime;\r\n     qry.ParamByName('datainclusao').AsDateTime  := Now;                   //7\r\n     qry.ParamByName('dataalteracao').DataType   := ftDateTime;\r\n     qry.ParamByName('dataalteracao').AsDateTime := Now;                   //8\r\n     //qry.ParamByName('dataexclusao').DataType    := ftDateTime;\r\n     //qry.ParamByName('dataexclusao').AsDateTime  := Now;                 //9\r\n\r\n     qry.ParamByName('ativo').DataType           := ftString;\r\n     if Length(aProduto.ativo) > 0 then\r\n       Ativo := Copy(aProduto.ativo, 1, 1)\r\n     else\r\n       Ativo := '';\r\n\r\n     qry.ParamByName('ativo').AsString           := Ativo;                 //10\r\n\r\n     qry.ParamByName('lancamento').DataType      := ftString;\r\n     qry.ParamByName('lancamento').AsString      := aProduto.lancamento;   //11\r\n     qry.ParamByName('furacao').DataType         := ftInteger;\r\n     qry.ParamByName('furacao').AsInteger        := aProduto.furacao;      //12\r\n     qry.ParamByName('offset_et').DataType       := ftInteger;\r\n     qry.ParamByName('offset_et').AsInteger      := aProduto.OffsetEt;     //13\r\n     qry.ParamByName('idlinha').DataType         := ftInteger;\r\n     qry.ParamByName('idlinha').AsInteger        := aProduto.idlinha;      //14\r\n     qry.ParamByName('idacabamento').DataType    := ftInteger;\r\n     qry.ParamByName('idacabamento').AsInteger   := aProduto.idacabamento; //15\r\n\r\n     CarregarFGravarLog;\r\n\r\n     if FGravarLogs then\r\n       qry.SQL.SaveToFile('C:\\ProdutosSQL.txt');\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n     on E: Exception do\r\n      begin\r\n        Result := False;\r\n        ShowMessage('Ocorreu um erro ao salvar o produto: ' + E.Message);\r\n        qry.Connection.Rollback;\r\n        qry.Close;\r\n\r\n        if True then\r\n        begin\r\n          LogManager:= TLogManager.Create;\r\n          try\r\n            CurrentDateTime := Now;\r\n            DateTimeStr     := FormatDateTime('yyyy-mm-dd hh:nn:ss', CurrentDateTime);\r\n            LogManager.AddLog('Classe Model.Produtos - Linha : 271 - Finalizou o salvar produto finalizou qry \u00E0s ' + DateTimeStr);\r\n            LogManager.SaveLogToFile('Log_Model_Produtos.txt');\r\n          finally\r\n            LogManager.Free;\r\n          end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":70,"trecho":"      procedure Setativo(const Value: string);\r\n      procedure Setbairro(const Value: string);\r\n      procedure Setcidade(const Value: string);\r\n      procedure Setcnpj(const Value: string);\r\n      procedure Setcomplemento(const Value: string);\r\n      procedure Setemail(const Value: string);\r\n      procedure Setendereco(const Value: string);\r\n      procedure Setnumero(const Value: integer);\r\n      procedure Setrazao(const Value: string);\r\n      procedure Setresponsavel(const Value: string);\r\n      procedure Settelefone(const Value: string);\r\n      procedure Setuf(const Value: string);\r\n      procedure Setdataregistro(const Value: TDatetime);\r\n      procedure SetCEP(const Value: string);\r\n      procedure Setie(const Value: string);\r\n      procedure Setim(const Value: string);\r\n      procedure SetLinguagem(const Value: string);\r\n      procedure Setcontato(const Value: string);\r\n      procedure Settelcontato(const Value: string);\r\n      procedure Setserial(const Value: string);\r\n      function  GetWMIstring(const WMIClass, WMIProperty:string): string;\r\n      procedure SetOnLabel6TextChanged(const Value: TNotifyEvent);\r\n      procedure Setserialhd(const Value: string);\r\n      procedure SetContraSenha(const Value: String);\r\n      procedure SetData_exp(const Value: TDateTime);\r\n    procedure Setid_chave(const Value: string);\r\n    public\r\n      property razao       : string    read Frazao write Setrazao;\r\n      property cnpj        : string    read Fcnpj write Setcnpj;\r\n      property ie          : string    read Fie write Setie;\r\n      property im          : string    read Fim write Setim;\r\n      property endereco    : string    read Fendereco write Setendereco;\r\n      property numero      : integer   read Fnumero write Setnumero;\r\n      property complemento : string    read Fcomplemento write Setcomplemento;\r\n      property bairro      : string    read Fbairro write Setbairro;\r\n      property cidade      : string    read Fcidade write Setcidade;\r\n      property uf          : string    read Fuf write Setuf;\r\n      property CEP         : string    read FCEP write SetCEP;\r\n      property ativo       : string    read Fativo write Setativo;\r\n      property responsavel : string    read Fresponsavel write Setresponsavel;\r\n      property contato     : string    read Fcontato write Setcontato;\r\n      property telcontato  : string    read Ftelcontato write Settelcontato;\r\n      property telefone    : string    read Ftelefone write Settelefone;\r\n      property email       : string    read Femail write Setemail;\r\n      property dataregistro: TDatetime read Fdataregistro write Setdataregistro;\r\n      property Linguagem   : string    read FLinguagem write SetLinguagem;\r\n      property serial      : string    read Fserial write Setserial;  //transferir do projeto antigo para esse\r\n      property serialhd    : string    read Fserialhd write Setserialhd;\r\n      property ContraSenha : String    read FContraSenha write SetContraSenha;\r\n      property Data_exp    : TDateTime read FData_exp write SetData_exp;\r\n      property id_chave    : string    read Fid_chave write Setid_chave;\r\n\r\n      //Verificar se ser\u00E1 necess\u00E1rio criar mais propertys para a tabela Registro\r\n      property OnLabel6TextChanged: TNotifyEvent read FOnLabel6TextChanged write SetOnLabel6TextChanged;\r\n      procedure enviarEmail; //J\u00E1 chama  aqui a grava\u00E7\u00E3o no banco de  licen\u00E7as\r\n      function GerarSerial: string;\r\n      class function validarDados(aRegistro: TModelRegistro ; aLingua: string) : boolean;\r\n      class function GravarNoBancoLicencas(aRegistro : TModelRegistro): Boolean;  //Tabela Chaves\r\n      class function ValidarLicenca(adata: TDateTime; acnpj: string): Boolean;\r\n      class function GravarRegistro(aRegistro: TModelRegistro; achave: String): Boolean;\r\n      class function GravarContraSenha(aRegistro: TModelRegistro): Boolean;\r\n\r\n      constructor create;\r\n      destructor destroy;override;\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Registro.pas","smell":"Uso de with","linha":304,"trecho":"with qry do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":273,"trecho":"function TModelRegistro.GerarSerial: string;\r\nvar\r\n  x:string;\r\n  Y:string;\r\n  z:string;\r\n  data : TDateTime;\r\n  qry, qry2: TFDQuery;\r\n  Registrarfrm: TFrmRegistrar;\r\nbegin\r\n  Result:= '';\r\n  FSWbemLocator := CreateOleObject('WbemScripting.SWbemLocator');\r\n  FWMIService   := FSWbemLocator.ConnectServer('localhost', 'root\\CIMV2', '', '');\r\n  X:=Trim(GetWMIstring('Win32_BIOS','SerialNumber')); //Serial da Bios\r\n  Y:=Trim(GetWMIstring('Win32_PhysicalMedia','SerialNumber')); //Serial do HD\r\n\r\n  //label6.Caption:= x;\r\n  //label4.Caption:= y;\r\n  z:=x+y+(DateToStr(date));\r\n  //label5.Caption:=z;\r\n  Result:= z;\r\n\r\n  qry:= TFDquery.Create(nil);\r\n  qry.Connection  := TConexaoLicencas.CreateConnection;\r\n  try\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('select * from registro');\r\n    qry.SQL.Add('');\r\n\r\n    qry.ExecSQL;\r\n    qry.Connection.Commit;\r\n\r\n    with qry do\r\n\r\n     //FDQuery1.Edit;\r\n     //Desabilitar botao Geral Serial\r\n     //Edit1.Enabled:=False;\r\n     //BtnRegistrar.Enabled:=False;\r\n     //Button1.Enabled:=False;\r\n     //PageControl1.Pages[1].TabVisible := False;\r\n     // fim\r\n\r\n\r\n     qry.FieldByName('chave').AsString      := z;\r\n     qry.FieldByName('Data_inc').AsDateTime := Date;\r\n     Data := date;\r\n     qry.FieldByName('Data_exp').AsDateTime:=Data;\r\n     //ShowMessage(DateToStr(Data+30));\r\n     qry.FieldByName('serialhd').AsString:=y;\r\n\r\n     qry.FieldByName('ID_Chave').AsInteger := qry2.FieldByName('ID_Chave').AsInteger;\r\n\r\n     qry.FieldByName('contrasenha').AsString:='0';\r\n     qry.FieldByName('ativado').AsString:='N';\r\n     qry.Post;\r\n\r\n  finally\r\n     qry.Free;\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":354,"trecho":"class function TModelRegistro.GravarContraSenha(\r\n  aRegistro: TModelRegistro): Boolean;\r\nvar\r\n  qry: TFDQuery;\r\nbegin\r\n  Result := False;\r\n  qry:= TFDQuery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  //Checar se a CONTRASENHA Existe se n\u00E3o avisar ao usu\u00E1rio que a Contra Senha est\u00E1 errada e encerrar o programa?\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('select contrasenha from registro');\r\n    qry.SQL.Add(' where contrasenha = :contrasenha');\r\n    qry.ParamByName('contrasenha').DataType := ftString;\r\n    qry.ParamByName('contrasenha').AsString := aRegistro.ContraSenha;\r\n    qry.Open;\r\n\r\n    if qry.RecordCount > 0 then //Encontrou a ContraSenha faz o update\r\n    begin\r\n      qry.Connection.StartTransaction;\r\n      try\r\n        qry.close;\r\n        qry.SQL.Clear;\r\n\r\n        qry.SQL.Text:='UPDATE LICENCAS.REGISTRO      ' +\r\n                      'SET                           ' +\r\n                     // 'ID           = :id,           ' +\r\n                     // 'ID_CHAVE     = :ID_CHAVE,     ' +\r\n                     // 'CHAVE        = :CHAVE,        ' +\r\n                      'DATA_INC     = :DATA_INC,     ' +\r\n                      'DATA_EXP     = :DATA_EXP,     ' +\r\n                      'CONTRASENHA  = :CONTRASENHA,  ' +\r\n                      'ATIVADO      = :ATIVADO,      ' +\r\n                    //  'SERIALHD     = :SERIALHD      ' +\r\n                      'WHERE                         ' +\r\n                      'CONTRASENHA     = :CONTRASENHA      ';\r\n\r\n\r\n        qry.ParamByName('DATA_INC').DataType     := ftDate;\r\n        qry.ParamByName('DATA_INC').AsDateTime   := Now;\r\n        qry.ParamByName('DATA_EXP').DataType     := ftDate;\r\n        qry.ParamByName('DATA_EXP').AsDate       := aRegistro.Data_exp + 30;\r\n        qry.ParamByName('CONTRASENHA').DataType  := ftString;\r\n        qry.ParamByName('CONTRASENHA').AsString  := aRegistro.ContraSenha;\r\n        qry.ParamByName('ATIVADO').DataType      := ftString;\r\n        qry.ParamByName('ATIVADO').AsString      := aRegistro.ativo;\r\n\r\n        qry.ExecSQL;\r\n        qry.Connection.Commit;\r\n\r\n        Result := True;\r\n      Except\r\n      On E: Exception do\r\n        begin\r\n           Showmessage('Erro ao gravar tabela registro!'+ E.Message);\r\n           qry.Connection.Rollback;\r\n           Result := False;\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":426,"trecho":"class function TModelRegistro.GravarNoBancoLicencas(\r\n  aRegistro: TModelRegistro): Boolean;\r\nvar\r\n  qry   : TFDQuery;\r\n  Ativo : string;\r\n  UF    : string;\r\n  idChave : integer;\r\nbegin\r\n  //Testar se a Licen\u00E7a j\u00E1 existe no banco de dados  buscar pelo cnpj  trazer o id e pesquisar na tabela registro\r\n  //Se j\u00E1 existir o cnpj na tabela chaves e estiver aguardando a grava\u00E7\u00E3o da contrasenha na tabela registro o que fazer?\r\n  // Informar o usu\u00E1rio que est\u00E1 aguardando a contrasenha e pular fora?\r\n  qry:= TFDquery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n    qry.Close;\r\n    qry.SQL.Clear;\r\n    qry.SQL.Add('Select * from chaves');\r\n    qry.SQL.Add(' where cnpj =:cnpj');\r\n    qry.ParamByName('cnpj').DataType := ftString;\r\n    qry.ParamByName('cnpj').AsString := aRegistro.cnpj;\r\n    qry.Open;\r\n\r\n    if qry.RecordCount > 0 then //O registro dos dados do cliente existe na tabela chaves\r\n    begin\r\n      ShowMessage('Registro encontrado');\r\n      idChave:= qry.FieldByName('id_chave').AsInteger;\r\n\r\n      qry.Close;\r\n      qry.SQL.Clear;\r\n      qry.SQL.Add('Select contrasenha from registro');\r\n      qry.SQL.Add(' where id_chave=:id_chave');\r\n      qry.ParamByName('id_chave').DataType  := ftInteger;\r\n      qry.ParamByName('id_chave').AsInteger := idChave;\r\n      qry.Open;\r\n\r\n      if (qry.RecordCount > 0) and (qry.fieldbyname('contrasenha').AsString='') then\r\n      begin\r\n          //Gravar no Banco primeiro registro\r\n          qry:= TFDquery.Create(nil);\r\n          qry.Connection := TConexaoLicencas.CreateConnection;\r\n          qry.Connection.StartTransaction;\r\n          try\r\n            qry.Close;\r\n            qry.SQL.Clear;\r\n            qry.SQL.Add('INSERT INTO      ' +\r\n                        ' licencas.chaves ' +\r\n                        '(id_chave,       ' + //1\r\n                        'razao,           ' + //2\r\n                        'cnpj,            ' + //3\r\n                        'ie,              ' + //4\r\n                        'im,              ' + //5\r\n                        'endereco,        ' + //6\r\n                        'numero,          ' + //7\r\n                        'complemento,     ' + //8\r\n                        'bairro,          ' + //9\r\n                        'cidade,          ' + //10\r\n                        'cep,             ' + //11\r\n                        'uf,              ' + //12\r\n                        'ativo,           ' + //13\r\n                        'contato,         ' + //14\r\n                        'telcontato,      ' + //15\r\n                        'email,           ' + //16\r\n                        'datacadastro,    ' + //17\r\n                        'dataalteracao    ' + //18\r\n                       // 'dataexclusao   ' + //19\r\n                        ')                ' +\r\n                        'VALUES (         ' +\r\n                        ':id_chave,       ' + //1 ok\r\n                        ':razao,          ' + //2 ok\r\n                        ':cnpj,           ' + //3 ok\r\n                        ':ie,             ' + //4 ok\r\n                        ':im,             ' + //5 ok\r\n                        ':endereco,       ' + //6 ok\r\n                        ':numero,         ' + //7 ok\r\n                        ':complemento,    ' + //8 ok\r\n                        ':bairro,         ' + //9 ok\r\n                        ':cidade,         ' + //10 ok\r\n                        ':cep,            ' + //11 ok\r\n                        ':uf,             ' + //12 ok\r\n                        ':ativo,          ' + //13 ok\r\n                        ':contato,        ' + //14\r\n                        ':telcontato,     ' + //15\r\n                        ':email,          ' + //16\r\n                        ':datacadastro,   ' + //17 ok\r\n                        ':dataalteracao   ' + //18 ok\r\n                      //  ':dataexclusao, ' + //19 ok\r\n                        ')                ');\r\n\r\n             qry.ParamByName('id_chave').DataType    := ftInteger;             //1\r\n             qry.ParamByName('razao').DataType       := ftString;\r\n             qry.ParamByName('razao').AsString       := aRegistro.razao;       //2\r\n             qry.ParamByName('cnpj').DataType        := ftString;\r\n             qry.ParamByName('cnpj').AsString        := aRegistro.cnpj ;       //3\r\n             qry.ParamByName('ie').DataType          := ftString;\r\n             qry.ParamByName('ie').AsString          := aRegistro.ie;          //4\r\n             qry.ParamByName('im').DataType          := ftString;\r\n             qry.ParamByName('im').AsString          := aRegistro.im;          //5\r\n             qry.ParamByName('endereco').DataType    := ftString;\r\n             qry.ParamByName('endereco').AsString    := aRegistro.endereco;    //6\r\n             qry.ParamByName('numero').DataType      := ftInteger;\r\n             qry.ParamByName('numero').AsInteger     := aRegistro.numero;      //7\r\n             qry.ParamByName('complemento').DataType := ftString;\r\n             qry.ParamByName('complemento').AsString := aRegistro.complemento; //8\r\n             qry.ParamByName('cep').DataType         := ftString;\r\n             qry.ParamByName('cep').AsString         := aRegistro.CEP;         //9\r\n             qry.ParamByName('cidade').DataType      := ftString;\r\n             qry.ParamByName('cidade').AsString      := aRegistro.Cidade;      //10\r\n             qry.ParamByName('bairro').DataType      := ftString;\r\n             qry.ParamByName('bairro').AsString      := aRegistro.Bairro;      //11\r\n             qry.ParamByName('uf').DataType          := ftString;\r\n             if Length(aRegistro.UF) > 0 then\r\n               UF := Copy(aRegistro.UF, 1, 2)\r\n             else\r\n               UF := '';\r\n\r\n             qry.ParamByName('uf').AsString          := UF;                    //12\r\n\r\n             qry.ParamByName('ativo').DataType       := ftString;\r\n             if Length(aRegistro.ativo) > 0 then\r\n               Ativo := Copy(aRegistro.ativo, 1, 1)\r\n             else\r\n               Ativo := '';\r\n\r\n             qry.ParamByName('ativo').AsString       := Ativo;                 //13\r\n\r\n             qry.ParamByName('contato').DataType     := ftString;\r\n             qry.ParamByName('contato').AsString     := aRegistro.contato;     //14\r\n\r\n             qry.ParamByName('telcontato').DataType     := ftString;\r\n             qry.ParamByName('telcontato').AsString     := aRegistro.telcontato; //15\r\n\r\n             qry.ParamByName('email').DataType     := ftString;\r\n             qry.ParamByName('email').AsString     := aRegistro.email;           //16\r\n\r\n             qry.ParamByName('datacadastro').DataType  := ftDateTime;\r\n             qry.ParamByName('datacadastro').AsDateTime:= Now;                 //17\r\n\r\n             qry.ParamByName('dataalteracao').DataType  := ftDateTime;         //18\r\n             qry.ParamByName('dataalteracao').AsDateTime:= Now;\r\n\r\n        //     qry.ParamByName('dataexclusao').DataType := ftDateTime;\r\n        //     qry.ParamByName('dataexclusao').AsDateTime:= aCliente.dataExclusao; //19\r\n\r\n             qry.ExecSQL;\r\n             qry.Connection.Commit;\r\n\r\n             Result := True;\r\n          Except\r\n           On E: Exception do\r\n              begin\r\n                if aRegistro.Linguagem='Portugues' then\r\n                  ShowMessage('Erro ao tentar gravar licen\u00E7a!' + E.Message)\r\n                else\r\n                  ShowMessage('Error trying to write license!!' + E.Message);\r\n\r\n                qry.Connection.Rollback;\r\n                qry.Free;\r\n              end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\Model\\Model.Registro.pas","smell":"M\u00E9todo muito longo","linha":739,"trecho":"class function TModelRegistro.GravarRegistro(\r\n  aRegistro: TModelRegistro; achave: String): Boolean;\r\nvar\r\n  qry: TFDQuery;\r\n  data: TDateTime;\r\nbegin\r\n  qry:= TFDQuery.Create(nil);\r\n  qry.Connection := TConexaoLicencas.CreateConnection;\r\n  qry.Connection.StartTransaction;\r\n  try\r\n     qry.SQL.Clear;\r\n     qry.SQL.Add('INSERT INTO REGISTRO      ' +\r\n                 '(id,                      ' +\r\n                 'id_chave,                 ' +\r\n                 'chave,                    ' +\r\n                 'data_inc,                 ' +\r\n                 'data_exp,                 ' +\r\n                 'contrasenha,              ' +\r\n                 'ativado,                  ' +\r\n                 'serialhd                  ' +\r\n               //  'WHERE id_chave =:id_chave ' +\r\n                 ')                         ' +\r\n                 'VALUES (                  ' +\r\n                 ':id,                      ' +\r\n                 ':id_chave,                ' +\r\n                 ':chave,                   ' +\r\n                 ':data_inc,                ' +\r\n                 ':data_exp,                ' +\r\n                 ':contrasenha,             ' +\r\n                 ':ativado,                 ' +\r\n                 ':serialhd                 ' +\r\n                 ')                         ');\r\n\r\n     qry.ParamByName('id').DataType :=ftinteger;\r\n     qry.ParamByName('id_chave').DataType:= ftInteger;\r\n\r\n     qry.ParamByName('chave').DataType     := ftString;\r\n     qry.ParamByName('chave').AsString      := aChave;\r\n\r\n     qry.ParamByName('Data_inc').DataType   := ftDateTime;\r\n     qry.ParamByName('Data_inc').AsDateTime := Date;\r\n\r\n     Data := Date;\r\n\r\n     qry.ParamByName('Data_exp').DataType    := ftDateTime;\r\n     qry.ParamByName('Data_exp').AsDateTime  :=Data;\r\n\r\n     //ShowMessage(DateToStr(Data+30));\r\n     qry.ParamByName('serialhd').DataType    := ftDateTime;\r\n     qry.ParamByName('serialhd').AsString    :=aRegistro.serialhd;\r\n\r\n     qry.ParamByName('contrasenha').AsString :='0';\r\n     qry.ParamByName('ativado').AsString     :='N';\r\n\r\n     //Ver como fazer?\r\n     //qry.ParamByName('id_chave').AsInteger := //qry2.FieldByName('ID_Chave').AsInteger;\r\n\r\n     qry.ExecSQL;\r\n     qry.Connection.Commit;\r\n\r\n     Result := True;\r\n  Except\r\n  On E: Exception do\r\n    begin\r\n       Showmessage('Erro ao gravar tabela registro!'+ E.Message);\r\n       qry.Connection.Rollback;\r\n       Result := False;\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\Unit1.pas","smell":"Uso de with","linha":106,"trecho":"with FDQuery1 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\Unit1.pas","smell":"Uso de with","linha":136,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\Unit1.pas","smell":"Uso de with","linha":166,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"Uso de with","linha":181,"trecho":"with FDQuery1,FDQuery2 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"Uso de with","linha":220,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"Uso de with","linha":250,"trecho":"with FDQuery2 do;"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"M\u00E9todo muito longo","linha":306,"trecho":"procedure TFRMGERARSERIAL.Button4Click(Sender: TObject);\r\nvar\r\n    IdSMTP1: TIdSMTP;\r\n    Idmessage: TIdMessage;\r\n    TextoMsg: TidText;\r\n    IdSSL: TIdSSLIOHandlerSocketOpenSSL;\r\n    contatol:string;\r\n    emaill:string;\r\n    telcontatol:string;\r\n    const\r\n    CRFL = #13#10;\r\n\r\nbegin\r\n    IdSMTP1                 := TIdSMTP.create(nil);\r\n    IdSMTP1.ConnectTimeout  := 10000;\r\n    IdSMTP1.ReadTimeout     := 10000;\r\n\r\n    IdMessage               := TIdMessage.create(nil);\r\n    IdMessage.Clear;\r\n    IdMessage.CharSet       := 'iso-8859-1';\r\n    IdMessage.Encoding      := MeMIME;\r\n    IdMessage.ContentType   := 'multipart/related'   ;\r\n    IdMessage.subject       := 'Novo Serial Gerado do cliente: ' +FDQuery2.FieldByName('razao').AsString ;\r\n\r\n    textomsg                := TIdText.Create(IdMessage.MessageParts);\r\n    //textomsg.Body.Text      := 'Se voc\u00EA consegue ler isto ent\u00E3o \u00E9 porque funcionou o teste!';\r\n    contatol    := FDQuery2.FieldByName('contato').AsString;\r\n    emaill      := FDQuery2.FieldByName('email').AsString;\r\n    telcontatol := FDQuery2.FieldByName('telcontato').AsString;\r\n    Memo1.Lines.Add(contatol);\r\n    Memo1.Lines.Add(emaill);\r\n    Memo1.Lines.Add(telcontatol);\r\n    //TextoMsg.Body.Text      :=Memo1.Lines.Text + #13 + 'Serial gerado: '+Label5.Caption;\r\n\r\n    //TextoMsg.Body.Text      :=Memo1.Lines.Text;\r\n    TextoMsg.Body.Add('Chave Gerada: '+Label5.Caption+'<br/>');\r\n    TextoMsg.Body.Add(contatol+'<br/>');\r\n    TextoMsg.Body.Add(emaill+'<br/>');\r\n    TextoMsg.Body.Add(telcontatol+'<br/>');\r\n\r\n\r\n    textomsg.ContentType    := 'text/html';\r\n\r\n    if ((cbtipo.itemindex = 0) or (cbtipo.itemindex = 2)) then\r\n    begin\r\n        // GMAIL e YAHOO\r\n\r\n        if cbtipo.itemindex = 0 then\r\n        begin\r\n            idSMTP1.Host            := 'smtp.gmail.com';\r\n            idSMTP1.Username        := 'delphi.send@gmail.com';\r\n            idSMTP1.Password        := 'delphi.send12345';\r\n        end\r\n        else begin\r\n            idSMTP1.Host            := 'smtp.mail.yahoo.com';\r\n            idSMTP1.Username        := 'email@yahoo.com.br';\r\n            idSMTP1.Password        := 'senha';\r\n        end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"Uso de with","linha":368,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\UnitGerarSerial.pas","smell":"Uso de with","linha":418,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\Unitsendemail.pas","smell":"Uso de with","linha":77,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\obtendo numero serial do hd\\Unitsendemail.pas","smell":"Uso de with","linha":126,"trecho":"with idSMTP1 do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\UPrincipal.pas","smell":"M\u00E9todo muito longo","linha":209,"trecho":"    procedure Circle1Gesture(Sender: TObject;\r\n      const EventInfo: TGestureEventInfo; var Handled: Boolean);\r\n    procedure FormCreate(Sender: TObject);\r\n    procedure Circle1Click(Sender: TObject);\r\n    procedure Circle1MouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Circle1MouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Layout1MouseMove(Sender: TObject; Shift: TShiftState; X,\r\n      Y: Single);\r\n    procedure Image4Gesture(Sender: TObject; const EventInfo: TGestureEventInfo;\r\n      var Handled: Boolean);\r\n    procedure Image4MouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Image4MouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure Circle1DblClick(Sender: TObject);\r\n    procedure Image4DblClick(Sender: TObject);\r\n    procedure MenuItemFabricantesCategoriasClick(Sender: TObject);\r\n    procedure NewImagemDbClick(Sender: TObject);\r\n    procedure NewImagemMouseDown(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure NewImagemGesture(Sender: TObject;\r\n              const EventInfo: TGestureEventInfo;\r\n              var Handled: Boolean);\r\n    procedure NewImagemMouseUp(Sender: TObject; Button: TMouseButton;\r\n      Shift: TShiftState; X, Y: Single);\r\n    procedure FormShow(Sender: TObject);\r\n    procedure BtnCarregarFotoClick(Sender: TObject);\r\n    procedure MenuItemConfiguracoesSistemaClick(Sender: TObject);\r\n    procedure MenuItem16Click(Sender: TObject);\r\n    procedure BtnCopiarFotoClick(Sender: TObject);\r\n    procedure Image4MouseWheel(Sender: TObject; Shift: TShiftState;\r\n      WheelDelta: Integer; var Handled: Boolean);\r\n    procedure TrackBar1Change(Sender: TObject);\r\n    procedure CBMarcasChange(Sender: TObject);\r\n    procedure CBModeloChange(Sender: TObject);\r\n    procedure CBFabricantesChange(Sender: TObject);\r\n    procedure CBCategoriasChange(Sender: TObject);\r\n    procedure CBLinhasChange(Sender: TObject);\r\n    procedure CBProdutosChange(Sender: TObject);\r\n    procedure BtnCopiarRodaClick(Sender: TObject);\r\n    procedure MenuItemClientesDadosClick(Sender: TObject);\r\n    procedure MenuItemClientesVeiculosClick(Sender: TObject);\r\n    procedure MenuItemFabricantesDadosClick(Sender: TObject);\r\n    procedure MenuItemClientesOrcamentosClick(Sender: TObject);\r\n    procedure MenuItemRegistrarClick(Sender: TObject);\r\n    procedure BtnCarregarRodaCalotaClick(Sender: TObject);\r\n    procedure SairExecute(Sender: TObject);\r\n    procedure LogOffExecute(Sender: TObject);\r\n    procedure FormClose(Sender: TObject; var Action: TCloseAction);\r\n    procedure MediaReceiverProfileResourceReceived(const Sender: TObject;\r\n      const AResource: TRemoteResource);\r\n    procedure MediaReceiverManagerRequestManagerPassword(const Sender: TObject;\r\n      const ARemoteIdentifier: string; var Password: string);\r\n    procedure MenuItemFabricanteProdutosClick(Sender: TObject);\r\n    procedure MenuItemFabricantesDeVeiculosClick(Sender: TObject);\r\n    procedure Image5Click(Sender: TObject);\r\n    procedure ImageLogoClick(Sender: TObject);\r\n    procedure MenuItem2Click(Sender: TObject);\r\n    procedure MenuItem3Click(Sender: TObject);\r\n    procedure MenuItem4Click(Sender: TObject);\r\n    procedure MenuItemBackupClick(Sender: TObject);\r\n    procedure Button5Click(Sender: TObject);\r\n\r\n\r\n  private\r\n    { Private declarations }\r\n    MoveObjeto: Boolean;\r\n    OffSet: TPointF;\r\n    NewCircle: TCircle;\r\n    NewImagem: TImage;\r\n    FIdMarcaSelecionada: integer;\r\n    FIdFabricante: integer;\r\n    FIdCategoria: integer;\r\n    FidLinha: integer;\r\n    FMemoryStream: TMemoryStream;\r\n    FBlobStream: TStream;\r\n    FIdProduto: integer;\r\n    FValorTotalOrcamento: Double;\r\n    ProdutoDS: TDataSet;\r\n    qry: TFDQuery;\r\n    FConexao: TFDConnection;\r\n    CurrentDateTime: TDateTime; //Para uso com o Log\r\n    DateTimeStr: string;        //Para uso com o Log\r\n    FArquivoLogo: String; //Nome do Arquivo da Logo a Ser carregado\r\n\r\n    procedure Modo_Edicao(editar: Boolean);\r\n    procedure Modo_Edicao2(editar: Boolean);\r\n    procedure NewImagemMouseWheel(Sender: TObject; Shift: TShiftState;\r\n      WheelDelta: Integer; var Handled: Boolean);\r\n    procedure SetidUsuario(const Value: Integer);\r\n    procedure SaveBitmapToFile(Bitmap: TBitmap; const FileName: string);\r\n    procedure EnviarImagemWhatsApp(const FileName: string);\r\n    procedure EnviarAnexoWhatsApp(const FileName: string);\r\n    function ImageToBase64(const FileName: string): string;\r\n    function DesabilitaEdtWhatsApp:Boolean;\r\n\r\n    function CapturaTela:TBitMap;\r\n\r\n  public\r\n    { Public declarations }\r\n     FidUsuario: Integer;\r\n     FLinguagem: string;\r\n     property idUsuario: Integer read FidUsuario write SetidUsuario;\r\n     procedure CarregarCores;\r\n     procedure CarregarLinguagem;\r\n     procedure CarregarLogo;\r\n     constructor create;\r\n     destructor destroy;override;\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\UPrincipal.pas","smell":"M\u00E9todo muito longo","linha":416,"trecho":"procedure TFrmPrincipal.BtnCopiarRodaClick(Sender: TObject);\r\nbegin\r\n  if MoveObjeto then\r\n    Modo_Edicao(False);\r\n\r\n  if NOT Assigned(NewCircle) then\r\n    begin\r\n      // Create a new TCircle component\r\n      NewCircle := TCircle.Create(Self);\r\n\r\n      // Copy the properties of the original TCircle component\r\n      NewCircle.Position.X := Circle1.Position.X + 50;\r\n      NewCircle.Position.Y := Circle1.Position.Y + 50;\r\n      NewCircle.Width      := Circle1.Width;\r\n      NewCircle.Height     := Circle1.Height;\r\n      NewCircle.Fill.Color := Circle1.Fill.Color;\r\n\r\n      //Criar o TImage dentro do NewCircle\r\n      NewImagem:= TImage.Create(NewCircle);\r\n      NewImagem.Parent:= NewCircle;\r\n      NewImagem.Bitmap.Assign(TImage(Circle1.Children[0]).Bitmap);\r\n      NewImagem.Align:=  TalignLayout.Client;\r\n\r\n      // Eventos\r\n      //NewImagem.OnClick      :=  NewImagemClick;\r\n      NewImagem.OnDblClick   :=  NewImagemDbClick;\r\n      NewImagem.OnGesture    :=  NewImagemGesture;\r\n      NewImagem.OnMouseDown  :=  NewImagemMouseDown;\r\n      NewImagem.OnMouseUp    :=  NewImagemMouseUp;\r\n      NewImagem.OnMouseWheel :=  NewImagemMouseWheel;\r\n\r\n      NewCircle.Parent := Self; //Cria no Formul\u00E1rio Principal\r\n    end\r\n    else //apagar o mesmo ou receber a copia da Matrix Atual\r\n    begin\r\n      //Criar o TImage dentro do NewCircle\r\n      NewImagem.BitMap.Clear($000000);\r\n      NewImagem:= TImage.Create(nil); //NewCircle - original\r\n      NewImagem.Parent:= NewCircle;\r\n      NewImagem.Bitmap.Assign(TImage(Circle1.Children[0]).Bitmap);\r\n      NewImagem.Align:=  TalignLayout.Client;\r\n\r\n      // Copy the events from the original TImage to the new TImage\r\n      //NewImagem.OnClick      :=  NewImagemClick; //Ficou com o clique esquerdo sem fun\u00E7\u00E3o\r\n      NewImagem.OnDblClick   :=  NewImagemDbClick;\r\n      NewImagem.OnGesture    :=  NewImagemGesture;\r\n      NewImagem.OnMouseDown  :=  NewImagemMouseDown;\r\n      NewImagem.OnMouseUp    :=  NewImagemMouseUp;\r\n      NewImagem.OnMouseWheel :=  NewImagemMouseWheel;\r\n\r\n      //Exit;\r\n    end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\UPrincipal.pas","smell":"Uso de with","linha":1459,"trecho":"With FrmPrincipal do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\UPrincipal.pas","smell":"Uso de with","linha":1480,"trecho":"With FrmPrincipal do"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\View\\UCadastroClientes.pas","smell":"M\u00E9todo muito longo","linha":185,"trecho":"    procedure FormShow(Sender: TObject);\r\n    procedure BtnNovoClick(Sender: TObject);\r\n    procedure FormCreate(Sender: TObject);\r\n    procedure BtnPrimeiroClick(Sender: TObject);\r\n    procedure btnAnteriorClick(Sender: TObject);\r\n    procedure BtnProximoClick(Sender: TObject);\r\n    procedure BtnUltimoClick(Sender: TObject);\r\n    procedure BtnAlterarClick(Sender: TObject);\r\n    procedure BtnGravarClick(Sender: TObject);\r\n    procedure CBAtivoExit(Sender: TObject);\r\n    procedure EdtNumeroKeyDown(Sender: TObject; var Key: Word;\r\n      var KeyChar: Char; Shift: TShiftState);\r\n    procedure EdtCnpjKeyDown(Sender: TObject; var Key: Word; var KeyChar: Char;\r\n      Shift: TShiftState);\r\n    procedure EdtCepKeyDown(Sender: TObject; var Key: Word; var KeyChar: Char;\r\n      Shift: TShiftState);\r\n    procedure BtnExcluirClick(Sender: TObject);\r\n    procedure BtnPesquisarClick(Sender: TObject);\r\n    procedure TabItemPesquisaClick(Sender: TObject);\r\n    procedure FormClose(Sender: TObject; var Action: TCloseAction);\r\n    procedure EdtCnpjExit(Sender: TObject);\r\n  private\r\n    { Private declarations }\r\n    FConexao: TFDConnection;\r\n    FCliente: TClientes;\r\n    FContato: TContato;\r\n    PodeGravar: Boolean;\r\n    FUFCliente: string;\r\n    FAtivoCliente: string;\r\n    qry: TFDQuery;\r\n    RegrasDeNegocios: TModelCliente;\r\n    FModelContato: TModelContato;\r\n    FTipo: String;\r\n    FController: TControllerCliente;\r\n    CDS: TClientDataSet;\r\n    FLinguagem: string;\r\n    CurrentDateTime: TDateTime; //Para uso com o Log\r\n    DateTimeStr: string;        //Para uso com o Log\r\n    FGravarLog: Boolean;        //Para uso com o Log\r\n    FHabilitarLogsSistema: string;\r\n    FNextIDContato: Integer;\r\n    FGravacaoSucesso: Boolean;\r\n    procedure DesabilitaBotoes(const BotaoSet:TBotaoSet);\r\n    Procedure PopularGridClientes;\r\n    procedure PreencheDadosEncontradosDoCliente;\r\n    procedure PopularDataSet;\r\n    procedure CarregarConfiguracao;\r\n    procedure PopularContatos;\r\n    function LerSalvarLogsBancoDeDados: Boolean;\r\n    function GravarLogsBancoDeDados: Boolean;\r\n  public\r\n    { Public declarations }\r\n    DataSet: TClientDataSet;\r\n    FSomenteAtivos: string;\r\n    FSemContatos  : string;\r\n    FBtnUltimo    : string;\r\n    Function CriarDataSet(aDadaSet: TClientDataSet): TClientDataSet;\r\n    procedure OnDataSetChange;\r\n    procedure PopularClientes;\r\n    procedure CarregarCores;\r\n    procedure CarregarLinguagem;\r\n    function ProximoIDContato: integer;\r\n\r\n\r\n  end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\View\\UCadastroFabricantes.pas","smell":"M\u00E9todo muito longo","linha":417,"trecho":"procedure TFrmFabricantes.CarregarLinguagem;\r\nvar\r\n  IniFile: TIniFile;\r\n  I: Integer;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + '\\Config.ini');\r\n  try\r\n    FLinguagem :=IniFile.ReadString('Traducao', 'Linguagem', '');\r\n\r\n   if FLinguagem = 'Portuguese' then\r\n   begin\r\n     LblCodCliente.Text      := 'Cod. Fabricante';\r\n     LblRazao.Text           := 'Raz\u00E3o Social / Nome';\r\n     LblCnpj.Text            := 'CNPJ / CPF';\r\n     LblEndereco.Text        := 'Endere\u00E7o';\r\n     LblNumero.Text          := 'N\u00FAmero';\r\n     LblComplemento.Text     := 'Complemento';\r\n     LblCEP.Text             := 'CEP';\r\n     LblCidade.Text          := 'Cidade';\r\n     LblCEP.Text             := 'CEP';\r\n     LblUF.Text              := 'UF';\r\n     LblAtivo.Text           := 'Ativo';\r\n     LblPesquisar.Text       := 'Pesquisar';\r\n     BtnNovo.Text            := '&Novo';\r\n     BtnAlterar.Text         := '&Alterar';\r\n     BtnExcluir.Text         := '&Excluir';\r\n     BtnSalvar.Text          := '&Salvar';\r\n     TabItemCadastro.Text    := 'Cadastro';\r\n     TabItemPesquisa.Text    := 'Pesquisa';\r\n     TabItemContato.Text     := 'Contato';\r\n     lblTitulo.Text          := 'Cadastro do Fabricantes';\r\n     FrmFabricantes.Caption  := 'Cadastro do Fabricantes';\r\n\r\n   end\r\n   else if FLinguagem = 'Ingles' then\r\n   begin\r\n     LblCodCliente.Text      := 'Id. Manufacturer';\r\n     LblRazao.Text           := 'Corporate Name / Name';\r\n     LblCnpj.Text            := 'Tax Identification Number - TIN';\r\n     LblEndereco.Text        := 'Address';\r\n     LblNumero.Text          := 'Number';\r\n     LblComplemento.Text     := 'Complement';\r\n     LblCidade.Text          := 'City';\r\n     LblCEP.Text             := 'Zip Code';\r\n     LblUF.Text              := 'State';\r\n     LblAtivo.Text           := 'Active';\r\n     LblPesquisar.Text       := 'Search';\r\n     BtnNovo.Text            := '&New';\r\n     BtnAlterar.Text         := '&Alter';\r\n     BtnExcluir.Text         := '&Delete';\r\n     BtnSalvar.Text          := '&Save';\r\n     TabItemCadastro.Text    := 'Register';\r\n     TabItemPesquisa.Text    := 'Search';\r\n     TabItemContato.Text     := 'Contact';\r\n     lblTitulo.Text          := 'Manufacturer Registration';\r\n     FrmFabricantes.Caption  := 'Manufacturer Registration';\r\n   end;\r\n"},{"arquivo":"c:\\fontes\\Projeto Rodas\\WheelPro\\View\\URegistrar.pas","smell":"M\u00E9todo muito longo","linha":349,"trecho":"procedure TFrmRegistrar.CarregarLinguagem;\r\nvar\r\n  IniFile: TIniFile;\r\n  I: Integer;\r\nbegin\r\n  IniFile := TIniFile.Create(ExtractFilePath(ParamStr(0)) + '\\Config.ini');\r\n  try\r\n    FLinguagem :=IniFile.ReadString('Traducao', 'Linguagem', '');\r\n\r\n   if FLinguagem = 'Portuguese' then\r\n   begin\r\n     lblRazao.Text        := 'Raz\u00E3o Social / Nome';\r\n     lblCnpj_cpf.Text     := 'CNPJ / CPF';\r\n     lblIe.Text           := 'Inscri\u00E7\u00E3o Estadual';\r\n     lblIm.Text           := 'Inscri\u00E7\u00E3o Municipal';\r\n     lblEndereco.Text     := 'Endere\u00E7o';\r\n     lblNumero.Text       := 'N\u00FAmero';\r\n     LblComplemento.Text  := 'Complemento';\r\n     LblBairro.Text       := 'Bairro';\r\n     LblCidade.Text       := 'Cidade';\r\n     LblResponnsavel.Text := 'Nome do respons\u00E1vel pelo registro';\r\n     LblTelefone.Text     := 'Telefone/WhatsApp';\r\n     LblEmail.Text        := 'E-mail';\r\n     BtnRegistrar.Text    := '&Registrar';\r\n     LblTitulo.Text       := 'Registro do Wheel Pro';\r\n     lblCEP.Text          := 'CEP';\r\n     FrmRegistrar.Caption := 'Registro do Wheel Pro';\r\n     TabItem1.Text        := 'Cadastro';\r\n     TabItem2.Text        := 'Gerar senha';\r\n     TabItem3.Text        := 'Enviar Serial';\r\n     TabItem4.Text        := 'Inserir Contra-Senha';\r\n     lblEntreseuCNPJ.Text := 'Entre seu CNPJ';\r\n     lblSeuSerial.Text    := 'Seu Serial';\r\n     lblNumserialHD.Text  := 'O n\u00FAmero serial do seu HD \u00E9:';\r\n     lblseuSErialBios.Text:= 'Seu Serial da Bios \u00E9 :';\r\n     lblContraSenha.Text  := 'Contra - Senha';\r\n   end\r\n   else if FLinguagem = 'Ingles' then\r\n   begin\r\n     lblRazao.Text        := 'Corporate Name / Name';\r\n     lblCnpj_cpf.Text     := 'Tax Identification Number - TIN';\r\n     lblIe.Visible        := False;\r\n     EdtInscricaoEstadual.Visible:= False;\r\n     lblIe.Text           := 'Inscri\u00E7\u00E3o Estadual';\r\n     lblIm.Visible        := False;\r\n     EdtIncricaoMunicipal.Visible:= False;\r\n     lblIm.Text           := 'Inscri\u00E7\u00E3o Municipal';\r\n     lblEndereco.Text     := 'Address';\r\n     lblNumero.Text       := 'Number';\r\n     LblComplemento.Text  := 'Complement';\r\n     LblBairro.Text       := 'Neighborhood';\r\n     LblCidade.Text       := 'City';\r\n     LblResponnsavel.Text := 'Name of person responsible for registration';\r\n     LblTelefone.Text     := 'Phone/WhatsApp';\r\n     LblEmail.Text        := 'E-mail';\r\n     lblCEP.Text          := 'ZIP CODE';\r\n     BtnRegistrar.Text    := '&Register';\r\n     LblTitulo.Text       := 'Wheel Pro registration';\r\n     FrmRegistrar.Caption := 'Wheel Pro registration';\r\n     TabItem1.Text        := 'Register';\r\n     TabItem2.Text        := 'Generate Password';\r\n     TabItem3.Text        := 'Send Serial';\r\n     TabItem4.Text        := 'Enter Password';\r\n     lblEntreseuCNPJ.Text := 'Enter your EIN';\r\n     lblSeuSerial.Text    := 'Your Serial';\r\n     lblNumserialHD.Text  := 'Serial number of your HD is:';\r\n     lblseuSErialBios.Text:= 'Your Bios Serial is:';\r\n     lblContraSenha.Text  := 'Password';\r\n   end;\r\n"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Categoria.pas","smell":"Uso de with","linha":32,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Categoria.pas","smell":"Uso de with","linha":53,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Categoria.pas","smell":"Uso de with","linha":86,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Categoria.pas","smell":"Uso de with","linha":102,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Categoria.pas","smell":"Uso de with","linha":118,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Cliente.pas","smell":"Uso de with","linha":33,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Cliente.pas","smell":"Uso de with","linha":55,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Cliente.pas","smell":"Uso de with","linha":79,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Cliente.pas","smell":"Uso de with","linha":95,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Cliente.pas","smell":"Uso de with","linha":137,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.FotoProcedimento.pas","smell":"Uso de with","linha":32,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.FotoProcedimento.pas","smell":"Uso de with","linha":51,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.FotoProcedimento.pas","smell":"Uso de with","linha":103,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Procedimento.pas","smell":"Uso de with","linha":32,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Procedimento.pas","smell":"Uso de with","linha":54,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Procedimento.pas","smell":"Uso de with","linha":76,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Procedimento.pas","smell":"Uso de with","linha":92,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Procedimento.pas","smell":"Uso de with","linha":121,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Servico.pas","smell":"Uso de with","linha":31,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Servico.pas","smell":"Uso de with","linha":53,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Servico.pas","smell":"Uso de with","linha":76,"trecho":"with TFDQuery.Create(nil) do"},{"arquivo":"c:\\fontes\\salaoexecencias\\Dao\\uDAO.Servico.pas","smell":"Uso de with","linha":92,"trecho":"with TFDQuery.Create(nil) do"}]
